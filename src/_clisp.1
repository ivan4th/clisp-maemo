.TH CLISP 1 "31 May 2001"


.SH NAME
clisp \- Common Lisp language interpreter and compiler


.SH SYNOPSIS
.B clisp
[
.B \-h
|
.B \-\-help
]
[
.B \-\-version
]
[
.B \-\-license
]
[
.B \-B
.I lisplibdir
]
#ifdef UNIX
[
.B \-K
.I linking-set
]
#endif
[
.B \-M
.I memfile
]
[
.B \-m
.I memsize
]
#ifndef NO_SP_MALLOC
[
.B \-s
.I stacksize
]
#endif
#ifdef MULTIMAP_MEMORY_VIA_FILE
[
.B \-t
.I tempdir
]
#endif
[
.B \-L
.I language
]
[
.B \-N
.I localedir
]
[
.BI \-E domain
.I encoding
]
[
.B \-q
|
.B \-\-quiet
|
.B \-\-silent
]
[
.B \-interactive-debug
]
[
.B \-w
]
[
.B \-I
]
[
.B \-ansi
]
[
.B \-traditional
]
[
.B \-p
.I packagename
]
[
.B \-C
]
[
.B \-norc
]
[
.B \-i
.IR initfile " ..."
]
[
.B \-c
[
.B \-l
]
.I lispfile
[
.B \-o
.I outputfile
] ...
]
[
.B \-x
.I expression
]
[
.I lispfile
[
.I argument
...
]
]


.SH DESCRIPTION
Invokes the common lisp interpreter and compiler.
Invoked without arguments, executes a read-eval-print loop,
in which expressions are in turn read from standard input, evaluated
by the lisp interpreter, and their results output to standard output.
Invoked with
.BR \-c ,
the specified lisp files are compiled to a bytecode that can be
executed more efficiently.


.SH OPTIONS

.TP
.BR \-h ", " \-\-help
Displays a help message on how to use
.BR clisp .

.TP
.B \-\-version
Displays the
.B clisp
version number, as given by the function call
.IR "(lisp-implementation-version)" .

.TP
.B \-\-license
Displays a summary of the licensing information, the GNU GPL.

.TP
.BI "\-B " lisplibdir
Specifies the installation directory. This is the directory containing
the linking sets and other data files.
#ifdef UNIX
This option is normally not necessary, because the installation directory
is already built-in in the
.B clisp
executable.
#endif
Directory lisplibdir can be changed at run-time using the symbol-macro
.B *lib-directory*
.

#ifdef UNIX
.TP
.BI "\-K " linking-set
Specifies the linking set to be run.
This is a directory (relative to
.BI lisplibdir
) containing at least a main executable (runtime)
and an initial memory image.
Possible values are
.BR base ", " full .
The default is
.BR base .
#endif

.TP
.BI "\-M " memfile
Specifies the initial memory image.
This must be a memory dump produced by the
.I saveinitmem
function by this
.B clisp
runtime.
#ifdef UNIX
It may have been compressed using GNU gzip(1).
#endif

.TP
.BI "\-m " memsize
Sets the amount of memory
.B clisp
tries to grab on startup.
The amount may be given as
.I nnnnnnn
(measured in bytes),
.IB nnnn K
or
.IB nnnn KB
(measured in kilobytes) or
.IB n M
or
.IB n MB
(measured in megabytes).
#ifdef WIDE
Default is 4 megabytes.
#else
Default is 2 megabytes.
#endif
#if (oint_addr_len+addr_shift==24)
The argument is constrained between 100 KB and 16 MB.
#elif (oint_addr_len+addr_shift==26)
The argument is constrained between 100 KB and 64 MB.
#elif (oint_addr_len+addr_shift==28)
The argument is constrained between 100 KB and 256 MB.
#else
The argument is constrained above 100 KB.
#endif
\-\- This version of
.B clisp
#if defined(SPVW_MIXED) && defined(SPVW_BLOCKS)
#ifdef GENERATIONAL_GC
is not likely to actually use the entire
.I memsize
since garbage collection will periodically reduce the amount of used memory.
It is therefore common to specify 10 MB even if only 2 MB are going to be used.
#else
eventually uses the entire
.IR memsize .
#endif
#else
allocates memory dynamically.
.I memsize
is essentially ignored.
#endif

#ifndef NO_SP_MALLOC
.TP
.BI "\-s " stacksize
Sets the size of the stack
.B clisp
allocates for itself. The syntax is the same as for
.IR memsize .
Default is one eighth of
.IR memsize .
The argument is constrained between 40 KB and 8 MB.
#endif

#ifdef MULTIMAP_MEMORY_VIA_FILE
.TP
.BI "\-t " tempdir
Specifies the directory where the temporary core file is to be held.
This option takes precedence over the environment variable
.BR TMPDIR .
#endif

.TP
.BI "\-L " language
Specifies the language
.B clisp
uses to communicate with the user. This may be
#ifndef GNU_GETTEXT
.BR english .
#endif
#ifdef GNU_GETTEXT
.BR english ", " deutsch ", " francais ", " espanol .
Other languages may be specified through the environment variable
.BR LANG ,
provided the corresponding message catalog is installed.
#endif
The language may be changed at run-time using the symbol macro
.B *current-language*.

.TP
.BI "\-N " localedir
Specifies the base directory of locale files.
.B clisp
will search its message catalogs in
.IR localedir / language /LC_MESSAGES/clisp.mo.
The localedir may be changed at run-time using the symbol macro
.B *current-language*.

.TP
.BI \-E "domain encoding"
Specifies the encoding used for a given domain, overriding the default
which depends on the environment variables
.BR LC_ALL ", " LC_CTYPE ", " LANG .
.I domain
can be
.BR file ,
affecting
.BR *default-file-encoding* ,
or
.BR pathname ,
affecting
.BR *pathname-encoding* ,
or
.BR terminal ,
affecting
.BR *terminal-encoding* ,
or
.BR foreign ,
affecting
.BR *foreign-encoding* ,
or
.BR misc ,
affecting
.BR *misc-encoding* .
or
.I blank,
affecting all of the above.
Note that these values cannot be saved in a memory image.
You have to use the init file or init-function to set them on startup.

.TP
.BR \-q ", " \-\-quiet ", " \-\-silent
Quiet:
.B clisp
displays no banner at startup and no good-bye message when quitting.

.TP
.B \-interactive-debug
Override the batch mode imposed by
.BR \-c ", " \-x ", and " lispfile
and allow interactive handling of
.I ASSERT
and friends.

.TP
.B \-w
Wait for keypress after program termination.

.TP
.B \-I
Be ILISP friendly. ILISP is an alternative Emacs interface to Common Lisp
systems. With this option,
.B clisp
interacts in a way that ILISP can deal with.
Currently the only effect of this is that unnecessary prompts are not
suppressed.
#ifdef GNU_READLINE
Furthermore, the GNU readline library treats Tab as a normal self-inserting
character.
#endif

.TP
.B \-ansi
ANSI CL compliant: comply with the ANSI CL specification
even where CLISP has been traditionally different.
It sets the symbol macro
.I *ansi*
to
.BR t .
See impnotes.html, section "Maximum ANSI CL compliance", for details.

.TP
.B \-traditional
Traditional: reverses the residual effects of
.B \-ansi
in the saved image.

.TP
.BI "\-p " packagename
At startup the value of the variable
.I *package*
will be set to the package named
.IR packagename .
The default is the package which was active when the image was saved, normally
.B COMMON-LISP-USER
.

.TP
.B \-C
Compile when load: At startup the value of the variable
.I *load-compiling*
will be set to
.BR t .
Code being
.IR load ed
will then be compiled on the fly.
This results in slower loading, but faster execution.

.TP
.BI "\-norc"
Normally
.B clisp
loads a user run control (RC) file on startup (this happens after the
.BI \-C
option is processed).  The file loaded is
#if defined(PATHNAME_MSDOS) || defined(PATHNAME_OS2) || defined(PATHNAME_WIN32) || defined(PATHNAME_RISCOS)
.B _clisprc.lisp
or
.B _clisprc.fas
in the home directory
.IR "(user-homedir-pathname)" ,
#endif
#if defined(PATHNAME_AMIGAOS)
.B .clisprc.lisp
or
.B .clisprc.fas
in the home directory
.IR "(user-homedir-pathname)" ,
#endif
#if defined(PATHNAME_UNIX)
.B ${HOME}/.clisprc.lisp
or
.BR ${HOME}/.clisprc.fas ,
#endif
whichever is newest. This option,
.B \-norc,
prevents loading of the RC file.

.TP
.BI "\-i " "initfile ..."
Specifies initialization files to be
.IR load ed
at startup. These should be lisp files (source or compiled). Several
.B \-i
options can be given; all the specified files will be loaded in order.

.TP
.BI "\-c " "lispfile ..."
Compiles the specified
.IR lispfile s
to bytecode (*.fas). The compiled files can then be
.IR load ed
instead of the sources to gain efficiency.

.TP
.BI "\-o " outputfile
Specifies the output file or directory for the compilation of the last
specified
.IR lispfile .

.TP
.B \-l
A bytecode listing (*.lis) of the files being compiled will be produced.
Useful only for debugging purposes. See the documentation of
.I "compile-file"
for details.

.TP
.BI "\-x " expressions
Executes a series of arbitrary expressions instead of a read-eval-print loop.
The values of the expressions will be output to standard output.
Due to the argument processing done by the shell, the
.I expressions
must be enclosed in double quotes, and double quotes and backslashes must
be preceded by backslashes.

.TP
.IR "lispfile " "[" "argument ..." "]"
Loads and executes a
.IR lispfile .
There will be no read-eval-print loop. Before
.I lispfile
is loaded, the variable
.I "*args*"
will be bound to a list of strings, representing the
.IR argument s.
#ifdef UNIX
The first line of
.I lispfile
may start with
.BR "#!" ,
thus permitting
.B clisp
to be used as a script interpreter.
#endif
If
.I lispfile
is
.BR "\-" ,
the standard input is used instead of a file.
If
.I lispfile
is an empty string
.B "",
the rest of the arguments is still available in
.I "*args*",
for parsing by the
.B "init-function"
of the current image.
This option must be the last one. No RC file will be executed.

#ifdef EMUNIX
.TP
.BI @ optionfile
substitutes the contents of
.I optionfile
as arguments. Each line of
.I optionfile
is treated as a separate argument to
.BR clisp .
#endif

#ifdef AMIGAOS

.PP
.SH WORKBENCH
Two kinds of tooltypes are supported:

.TP
.BI "WINDOW= " windowspec
.B clisp
will communicate with the console window or pipe specified by
.IR windowspec .

.TP
.BI "ARGS= " arguments
Specifies the command line arguments for
.BR clisp .
Within
.I arguments
the token `*' may be used to denote the project's filename.
.I arguments
defaults to `\-i *' which means that the file will be
.IR load ed
(see above).

#endif

.PP
.SH REFERENCE
The language implemented mostly conforms to
.RS 1
      ANSI Common Lisp standard X3.226\-1994
      http://www.x3.org/tc_home/j13sd4.htm
.RE
available online as the
.RS 1
      Common Lisp HyperSpec
      http://www.lisp.org/HyperSpec/
      ("CLHS" for short)
.RE
which supersedes the earlier specifications
.RS 1
      Guy L. Steele Jr.: Common Lisp \- The Language.
      Digital Press. 2nd edition 1990, 1032 pages.
      http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/cltl2.html
      ("CLtL2" for short)
.RE
and
.RS 1
      Guy L. Steele Jr.: Common Lisp \- The Language.
      Digital Press. 1st edition 1984, 465 pages.
      ("CLtL1" for short)
.RE


.SH USE

.TP
.B help
to get some on-line help.

.TP
.BI "(apropos " name ")"
lists the symbols relating to
.IR name .

.TP
.BR "(exit)" " or " "(quit)" " or " "(bye)"
to quit
.BR clisp .

#if defined(UNIX) || defined(MSDOS) || defined(AMIGAOS) || defined(RISCOS)
.TP
#if (defined(UNIX) && !defined(UNIX_CYGWIN32)) || defined(RISCOS)
EOF (Ctrl-D)
#endif
#if defined(MSDOS) || defined(UNIX_CYGWIN32)
EOF (Ctrl-Z)
#endif
#ifdef AMIGAOS
EOF (Ctrl-\e)
#endif
to leave the current read-eval-print loop.
#endif

#ifdef GNU_READLINE
.TP
arrow keys
for editing and viewing the input history using the GNU readline library.

.TP
Tab key
Context sensitive:
If you are in the "function position" (in the first symbol after an
opening paren or in the first symbol after a #'), the completion is
limited to the symbols that name functions.
If you are in the "filename position" (inside a string after #P), the
completion is done across file names, bash(1)-style.
If you have not started typing the next symbol (i.e., you are at a
whitespace), the current function or macro is DESCRIBEd.
Otherwise, the symbol you are currently typing is completed.
#endif


.SH FILES

#ifdef UNIX
.TP
.I clisp
startup script
#endif

.TP
#if defined(UNIX)
.I lisp.run
#endif
#if defined(MSDOS)
.I lisp.exe
#endif
#if defined(AMIGAOS)
.I lisp.run
#endif
#if defined(RISCOS)
.I lisp
#endif
main executable (runtime)

.TP
.I lispinit.mem
initial memory image

.TP
.I config.lisp
site-dependent configuration

.TP
.I *.lisp
lisp source

.TP
.I *.fas
lisp code, compiled by
.B clisp

.TP
.I *.lib
lisp source library information, generated and used by the
.B clisp
compiler when compiling
.B require
forms

.TP
.I *.c
C code, compiled from lisp source by
.B clisp
for the FFI

#ifdef HAVE_ENVIRONMENT

.SH ENVIRONMENT

.TP
.B CLISP_LANGUAGE
specifies the language
.B clisp
uses to communicate with the user. The value may be
.BR english ", " german ", " french ", " spanish ", " dutch ", " russian
and defaults to
.BR english .
The
.B \-L
option can be used to override this environment variable.

#ifdef AMIGAOS
.TP
.B Language
specifies the language
.B clisp
uses to communicate with the user, unless it is already specified through
the environment variable
.B CLISP_LANGUAGE
or the
.B \-L
option. The value may be as above.
#endif

#ifdef UNICODE
.TP
.B LC_CTYPE
specifies the locale which determines the character set in use.
The value can be of the form
.IR language " or " language_country " or " language_country.charset ,
where
.I language
is a two-letter ISO 639 language code (lower case), and
.I country
is a two-letter ISO 3166 country code (upper case).
.I charset
is an optional character set specification, and needs normally not be given
because the character set can be inferred from the language and country.
#endif

.TP
.B LANG
specifies the language
.B clisp
uses to communicate with the user, unless it is already specified through
the environment variable
.B CLISP_LANGUAGE
or the
.B \-L
option.
#ifdef UNICODE
It also specifies the locale determining the character set in use, unless
already specified through the environment variable
.BR LC_CTYPE .
#endif
The value may begin with a two-letter ISO 639 language code, for example
.BR en ", " de ", " fr .

#ifdef UNIX
.TP
.BR HOME " and " USER
are used for determining the value of the function
.IR user-homedir-pathname .
(Unix implementation only.)
#endif

#if defined(UNIX) || defined(MSDOS)
.TP
#ifdef UNIX
.BR SHELL " (Unix implementation only) "
is used to find the interactive command interpreter called by
.IR "(shell)" .
#endif
#ifdef MSDOS
.BR COMSPEC " (DOS, OS/2 implementations only)"
is used to find the command interpreter called by the function
.IR shell .
#endif
#endif

#ifdef UNIX
.TP
.B TERM
determines the screen size recognized by the pretty printer.
#endif

#ifdef EMUNIX_PORTABEL
.TP
.B TERM
specifies the terminal emulation
.B clisp
relies on. If you have ANSI.SYS loaded, possible values are
.IR ansi ,
.IR ansi-color-2 ,
.I ansi-color-3
and
.IR mono .

.TP
.B TERMCAP
should be set to the slashified file name of the terminal capabilities database
.IR termcap.dat .
#endif

#ifdef MULTIMAP_MEMORY_VIA_FILE
.TP
.BR TMPDIR " (Sparc implementation only)"
specifies the directory where the temporary core file is to be held.
#endif

#endif

.SH "SEE ALSO"

impnotes.html,
.IR cmucl (1),
.IR emacs (1),
.IR xemacs (1).

.SH BUGS

.PP
When you encounter a bug in
.B clisp
, please report it to the mailing list (see
.IR http://lists.sf.net/lists/listinfo/clisp-list
) or the SourceForge bug tracker (see
.IR http://sf.net/tracker/?func=add&group_id=1355&atid=101355
).

.PP
When submitting a bug report, please specify the following information:

.PP
1. What is your platform? (
.B 'uname -a'
on a Unix system) compiler version?  libc (on Linux)?

.PP
2. Where did you get the sources?  When?
(Absolute dates are preferred over the relative ones)

.PP
3. How did you build
.B clisp
? (What command, options etc.)
Please do a clean build (remove your build directory and build
.BB clisp
with
.B './configure --build build'
or at least do a
.B 'make distclean'
before
.B 'make'
). If you are reporting a crash (segmentation fault, bus error, core
dump etc), please do
.B './configure --with-debug --build build-g'
and report the backtrace.

.PP
4. If you are using pre-built binaries, the problem is likely
to be in the incompatibilities between the platform on which
the binary was built and yours; please try compiling the sources.

.PP
5. What is the output of
.B 'clisp --version'
?

.PP
6. Please supply the full output (copy and paste) of all the error
messages, as well as detailed instructions on how to reproduce them.

.PP
Known bugs, some of which may be platform-dependent, include

#ifdef SPVW_MIXED_BLOCKS
.PP
The memory management scheme is not very flexible.
#endif

.PP
Not all extensions from CLtL2 are supported.

.PP
No on-line documentation beyond
.I apropos
and
.I describe
is available.

#ifdef EMUNIX
.PP
Stack overflow aborts the program ungracefully, with a register dump.
.PP
Pressing Control-C may not interrupt
.B clisp
in every situation.
.PP
Calling the function
.I execute
on batch files crashes the machine.
#endif

#ifdef UNIX_COHERENT
.PP
.I *keyboard-input*
does not recognize Ctrl-S and Ctrl-Q.
#endif


.SH PROJECTS

.PP
Writing on-line documentation.

.PP
Enhance the compiler so that it can inline local functions.

.PP
Specify a portable set of window and graphics operations.


.SH AUTHORS

Bruno Haible and Michael Stoll.
See file
.B COPYRIGHT
for the list of the other contributors and the license.
