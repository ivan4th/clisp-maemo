.TH CLISP 1 "11 April 1999"


.SH NAME
clisp \- Common Lisp language interpreter and compiler


.SH SYNOPSIS
.B clisp
[
.B -h
]
[
.B -m
.I memsize
]
#ifndef NO_SP_MALLOC
[
.B -s
.I stacksize
]
#endif
#ifdef MULTIMAP_MEMORY_VIA_FILE
[
.B -t
.I tempdir
]
#endif
[
.B -B
.I lisplibdir
]
#if defined(UNIX) && !defined(UNIX_BINARY_DISTRIB)
[
.B -K
.I linking-set
]
#endif
[
.B -M
.I memfile
]
[
.B -norc
]
[
.B -L
.I language
]
[
.B -N
.I localedir
]
[
.B -q
]
[
.B -I
]
[
.B -C
]
[
.B -i
.IR initfile " ..."
]
[
.B -c
[
.B -l
]
.I lispfile
[
.B -o
.I outputfile
] ...
]
[
.B -p
.I packagename
]
[
.B -x
.I expression
]
[
.I lispfile
[
.I argument
...
]
]


.SH DESCRIPTION
Invokes the common lisp interpreter and compiler.
Invoked without arguments, executes a read-eval-print loop,
in which expressions are in turn read from standard input, evaluated
by the lisp interpreter, and their results output to standard output.
Invoked with
.BR \-c ,
the specified lisp files are compiled to a bytecode that can be
executed more efficiently.


.SH OPTIONS

.TP
.B -h
Displays a help message on how to use
.BR clisp .

.TP
.BI "-m " memsize
Sets the amount of memory
.B clisp
tries to grab on startup.
The amount may be given as
.I nnnnnnn
(measured in bytes),
.IB nnnn K
or
.IB nnnn KB
(measured in kilobytes) or
.IB n M
or
.IB n MB
(measured in megabytes).
#ifdef WIDE
Default is 4 megabytes.
#else
Default is 2 megabytes.
#endif
#if (oint_addr_len+addr_shift==24)
The argument is constrained between 100 KB and 16 MB.
#elif (oint_addr_len+addr_shift==26)
The argument is constrained between 100 KB and 64 MB.
#elif (oint_addr_len+addr_shift==28)
The argument is constrained between 100 KB and 256 MB.
#else
The argument is constrained above 100 KB.
#endif
-- This version of
.B clisp
#if defined(SPVW_MIXED) && defined(SPVW_BLOCKS)
#ifdef GENERATIONAL_GC
is not likely to actually use the entire
.I memsize
since garbage collection will periodically reduce the amount of used memory.
It is therefore common to specify 10 MB even if only 2 MB are going to be used.
#else
eventually uses the entire
.IR memsize .
#endif
#else
allocates memory dynamically.
.I memsize
is essentially ignored.
#endif

#ifndef NO_SP_MALLOC
.TP
.BI "-s " stacksize
Sets the size of the stack
.B clisp
allocates for itself. The syntax is the same as for
.IR memsize .
Default is one eighth of
.IR memsize .
The argument is constrained between 40 KB and 8 MB.
#endif

#ifdef MULTIMAP_MEMORY_VIA_FILE
.TP
.BI "-t " tempdir
Specifies the directory where the temporary core file is to be held.
This option takes precedence over the environment variable
.BR TMPDIR .
#endif

.TP
.BI "-B " lisplibdir
Specifies the installation directory. This is the directory containing
the linking sets and other data files.
#ifdef UNIX
This option is normally not necessary, because the installation directory
is already built-in in the
.B clisp
executable.
#endif

#if defined(UNIX) && !defined(UNIX_BINARY_DISTRIB)
.TP
.BI "-K " linking-set
Specifies the linking set to be run. This is a directory containing at least
a main executable and an initial memory image. Possible values are
.BR base ", " full .
The default is
.BR base .
#endif

.TP
.BI "-M " memfile
Specifies the initial memory image.
This must be a memory dump produced by the
.I saveinitmem
function.
#ifdef UNIX
It may have been compressed using GNU gzip.
#endif

.TP
.BI "-norc"
Normally
.B clisp
loads a user run control (RC) file on startup (this happens after the
.BI -C
option is processed).  The file loaded is
#if defined(PATHNAME_MSDOS) || defined(PATHNAME_OS2) || defined(PATHNAME_WIN32) || defined(PATHNAME_RISCOS)
.B _clisprc.lsp
or
.B _clisprc.fas
in the home directory
.IR "(user-homedir-pathname)" ,
#endif
#if defined(PATHNAME_AMIGAOS)
.B .clisprc.lsp
or
.B .clisprc.fas
in the home directory
.IR "(user-homedir-pathname)" ,
#endif
#if defined(PATHNAME_UNIX)
.B ${HOME}/.clisprc.lsp
or
.BR ${HOME}/.clisprc.fas ,
#endif
whichever is newest. This option,
.B -norc,
prevents loading of the RC file.

.TP
.BI "-L " language
Specifies the language
.B clisp
uses to communicate with the user. This may be
#ifndef GNU_GETTEXT
.BR english ", " deutsch ", " francais .
#endif
#ifdef GNU_GETTEXT
.BR english ", " deutsch ", " francais ", " espanol .
Other languages may be specified through the environment variable
.BR LANG ,
provided the corresponding message catalog is installed.
#endif

.TP
.BI "-N " localedir
Specifies the base directory of locale files.
.B clisp
will search its message catalogs in
.IR localedir / language /LC_MESSAGES/clisp. ext .

.TP
.B -q
Quiet:
.B clisp
displays no banner at startup and no good-bye message when quitting.

.TP
.B -I
ILISP friendly:
.B clisp
interacts in a way that ILISP (a popular Emacs LISP interface) can deal with.
Currently the only effect of this is that unnecessary prompts are not
suppressed.
#ifdef GNU_READLINE
Furthermore, the GNU readline library treats Tab as a normal self-inserting
character.
#endif

.TP
.B -C
Compile when load: At startup the value of the variable
.I *load-compiling*
will be set to
.BR t .
Code being
.IR load ed
will then be compiled on the fly. This results in slower loading, but faster
execution.

.TP
.BI "-i " "initfile ..."
Specifies initialization files to be
.IR load ed
at startup. These should be lisp files (source or compiled).

.TP
.BI "-c " "lispfile ..."
Compiles the specified
.IR lispfile s
to bytecode. The compiled files can then be
.IR load ed
instead of the sources to gain efficiency.

.TP
.BI "-o " outputfile
Specifies the output file or directory for the compilation of the last
specified
.IR lispfile .

.TP
.B -l
A bytecode listing of the files being compiled will be produced.
Useful only for debugging purposes.

.TP
.BI "-p " packagename
At startup the value of the variable
.I *package*
will be set to the package named
.IR packagename .

.TP
.B -a
ANSI CL compliant: Comply with the ANSI CL specification even on those issues
where ANSI CL is broken. This option is provided for maximum portability of
Lisp programs. It is not useful for actual everyday work.

.TP
.BI "-x " expressions
Executes a series of arbitrary expressions instead of a read-eval-print loop.
The values of the expressions will be output to standard output.
Due to the argument processing done by the shell, the
.I expressions
must be enclosed in double quotes, and double quotes and backslashes must
be preceded by backslashes.

.TP
.IR "lispfile " "[" "argument ..." "]"
Loads and executes a
.IR lispfile .
There will be no read-eval-print loop. Before
.I lispfile
is loaded, the variable
.I "*args*"
will be bound to a list of strings, representing the
.IR argument s.
#ifdef UNIX
The first line of
.I lispfile
may start with
.BR "#!" ,
thus permitting
.B clisp
to be used as a script interpreter.
#endif
If
.I lispfile
is
.BR "-" ,
the standard input is used instead of a file.
This option must be the last one. No RC file will be executed.

#ifdef EMUNIX
.TP
.BI @ optionfile
substitutes the contents of
.I optionfile
as arguments. Each line of
.I optionfile
is treated as a separate argument to
.BR clisp .
#endif

#ifdef AMIGAOS

.PP
.SH WORKBENCH
Two kinds of tooltypes are supported:

.TP
.BI "WINDOW= " windowspec
.B clisp
will communicate with the console window or pipe specified by
.IR windowspec .

.TP
.BI "ARGS= " arguments
Specifies the command line arguments for
.BR clisp .
Within
.I arguments
the token `*' may be used to denote the project's filename.
.I arguments
defaults to `-i *' which means that the file will be
.IR load ed
(see above).

#endif

.PP
.SH REFERENCE
The language implemented conforms to
.RS 1
      ANSI CL standard X3.226-1994
.RE
and to the relevant parts of
.RS 1
      Guy L. Steele Jr.: Common Lisp - The Language.
      Digital Press. 2nd edition 1990, 1032 pages.
      ("CLtL2" for short)
.RE


.SH USE

.TP
.B help
to get some on-line help.

.TP
.BI "(apropos " name ")"
lists the symbols relating to
.IR name .

.TP
.BR "(exit)" " or " "(quit)" " or " "(bye)"
to quit
.BR clisp .

#if defined(UNIX) || defined(MSDOS) || defined(AMIGAOS) || defined(RISCOS)
.TP
#if (defined(UNIX) && !defined(UNIX_CYGWIN32)) || defined(RISCOS)
EOF (Ctrl-D)
#endif
#if defined(MSDOS) || defined(UNIX_CYGWIN32)
EOF (Ctrl-Z)
#endif
#ifdef AMIGAOS
EOF (Ctrl-\e)
#endif
to leave the current read-eval-print loop.
#endif

#ifdef GNU_READLINE
.TP
arrow keys
for editing and viewing the input history.

.TP
Tab key
to complete the symbol's name you are just typing.
#endif


.SH FILES

#ifdef UNIX
.TP
.I clisp
startup script
#endif

.TP
#if defined(UNIX)
.I lisp.run
#endif
#if defined(MSDOS)
.I lisp.exe
#endif
#if defined(AMIGAOS)
.I lisp.run
#endif
#if defined(RISCOS)
.I lisp
#endif
main executable

.TP
.I lispinit.mem
initial memory image

.TP
.I config.lsp
site-dependent configuration

.TP
.I *.lsp
lisp source

.TP
.I *.fas
lisp code, compiled by
.B clisp

.TP
.I *.lib
lisp source library information, generated and used by the
.B clisp
compiler

.TP
.I *.c
C code, compiled from lisp source by
.B clisp

#ifdef HAVE_ENVIRONMENT

.SH ENVIRONMENT

.TP
.B CLISP_LANGUAGE
specifies the language
.B clisp
uses to communicate with the user. The value may be
.BR english ", " deutsch ", " francais
and defaults to
.BR english .
The
.B -L
option can be used to override this environment variable.

#ifdef AMIGAOS
.TP
.B Language
specifies the language
.B clisp
uses to communicate with the user, unless it is already specified through
the environment variable
.B CLISP_LANGUAGE
or the
.B -L
option. The value may be as above.
#endif

.TP
.B LANG
specifies the language
.B clisp
uses to communicate with the user, unless it is already specified through
the environment variable
.B CLISP_LANGUAGE
or the
.B -L
option. The value may begin with a two-letter ISO 639 language code, for example
.BR en ", " de ", " fr .

#ifdef UNIX
.TP
.BR HOME " and " USER
are used for determining the value of the function
.IR user-homedir-pathname .
(Unix implementation only.)
#endif

#if defined(UNIX) || defined(MSDOS)
.TP
#ifdef UNIX
.BR SHELL " (Unix implementation only) "
is used to find the interactive command interpreter called by
.IR "(shell)" .
#endif
#ifdef MSDOS
.BR COMSPEC " (DOS, OS/2 implementations only)"
is used to find the command interpreter called by the function
.IR shell .
#endif
#endif

#ifdef UNIX
.TP
.B TERM
determines the screen size recognized by the pretty printer.
This environment variable is also mandatory for the built-in screen editor.
#endif

#ifdef EMUNIX_PORTABEL
.TP
.B TERM
specifies the terminal emulation
.B clisp
relies on. If you have ANSI.SYS loaded, possible values are
.IR ansi ,
.IR ansi-color-2 ,
.I ansi-color-3
and
.IR mono .

.TP
.B TERMCAP
should be set to the slashified file name of the terminal capabilities database
.IR termcap.dat .
#endif

#ifdef MULTIMAP_MEMORY_VIA_FILE
.TP
.BR TMPDIR " (Sparc implementation only)"
specifies the directory where the temporary core file is to be held.
#endif

#endif

.SH "SEE ALSO"

.IR cmucl (1),
#ifdef UNIX
.IR xemacs (1).
#else
.IR emacs (1).
#endif


.SH BUGS

.PP
The function
.I inspect
is not implemented.

#ifdef SPVW_MIXED_BLOCKS
.PP
The memory management scheme is not very flexible.
#endif

.PP
Not all extensions from CLtL2 are supported.

.PP
No on-line documentation beyond
.I apropos
and
.I describe
is available.

#ifdef EMUNIX
.PP
Stack overflow aborts the program ungracefully, with a register dump.
.PP
Pressing Control-C may not interrupt
.B clisp
in every situation.
.PP
Calling the function
.I execute
on batch files crashes the machine.
#endif

#ifdef UNIX_COHERENT
.PP
.I *keyboard-input*
does not recognize Ctrl-S and Ctrl-Q.
#endif


.SH PROJECTS

.PP
Writing on-line documentation.

.PP
Write
.IR inspect .

.PP
Enhance the compiler such that it can inline local functions.

.PP
Specify a portable set of window and graphics operations.


.SH AUTHORS

Bruno Haible
<haible@clisp.cons.org>
and Michael Stoll.
