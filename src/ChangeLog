2002-06-26  Sam Steingold  <sds@gnu.org>

	* m4/general.m4 (CL_CANONICAL_HOST_CPU)
	(CL_CANONICAL_HOST_CPU_FOR_FFCALL): handle hppa64
	the same way as hppa1 and hppa2
	Suggested by Will Newton <will@misconception.org.uk>

2002-06-25  Sam Steingold  <sds@gnu.org>

	memcpy() & begin/end_system_call() cleanup
	* lispbibl.d (copy_mem_b, copy_mem_o): new macros
	(do_cclosure_copy): use copy_mem_o()
	* hashtabl.d (%SET-HASH-TABLE-WEAK-P): use copy_mem_o()
	instead of memcpy()
	* record.d (COPY-STRUCTURE): ditto
	* stream.d (read_byte_array_buffered, write_byte_array_buffered)
	(READ-FLOAT, WRITE-FLOAT): use copy_mem_b() instead of memcpy()
	(%DEFGRAY): use copy_mem_o() instead of memcpy()
	(create_input_pipe, create_output_pipe, create_io_pipe):
	move the memcpy() call inside the begin/end_system_call()

2002-06-25  Sam Steingold  <sds@gnu.org>

	fixed the spurious "fatal error in the fatal error handler" message:
	break_driver() lost the stack location of its `continuable' argument
	* debug.d (break_driver): accept a boolean argument instead of an
	object (save on stack manipulation, gain clarity)
	* lispbibl.d (break_driver): fixed the prototype
	* eval.d (unwind): adjusted break_driver() call
	* error.d (end_error, ERROR, ERROR-OF-TYPE, tast_break): ditto

2002-06-25  Sam Steingold  <sds@gnu.org>

	* error.d (end_error): print the abort message to stderr
	include <stdio.h> to avoid compiler warning

2002-06-25  Sam Steingold  <sds@gnu.org>

	* charstrg.d (STRING-INFO): new function
	* constsym.d, subr.d (string_info): added

2002-06-25  Sam Steingold  <sds@gnu.org>

	* stream.d (test_external_format_arg): fixed for the 2002-06-19
	patch (new MAKE-ENCODING keyword arg)

2002-06-20  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (CHART_STRUCT): Enable for gcc >= 3.0.

2002-06-20  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (sstring_): Define using chart.
	(Sstring): Likewise.
	* array.d (elt_copy_T_Char, ssstring_extend_low): Make it compile
	with CHART_STRUCT.
	* charstrg.d (copy_string, subsstring, SUBSTRING, string_concat):
	Likewise.
	* io.d (write_sstring_case): LIkewise.
	* lisparit.d (decimal_string): Likewise.
	* pathname.d (Z_AT_SLASH): Fix for changed return type of schar.
	(wildcard_diff_ab): Likewise.

2002-06-20  Sam Steingold  <sds@gnu.org>

	* record.d (COPY-STRUCTURE): use memcpy() instead of dotimespC
	(call_init_fun): new function
	(%REINITIALIZE-INSTANCE, do_initialize_instance): use it

2002-06-20  Sam Steingold  <sds@gnu.org>

	* spvw_typealloc.d (reallocate_small_string) [TYPECODES]:
	fixed a typo

2002-06-19  Sam Steingold  <sds@gnu.org>

	* pathname.d (nametype_diff_aux): treat logical and physical
	pathnames the same way

2002-06-19  Sam Steingold  <sds@gnu.org>

	* encoding.d (MAKE-ENCODING): new keyword argument
	:IF-DOES-NOT-EXIST to return nil for non-existing charsets
	(init_encodings_2): when the charset does not exist,
	just unintern the symbol
	(encoding_from_name): pushSTACK() the extra keyword argument for
	C_make_encoding()
	* subr.d, subrkw.d (make_encoding): new keyword argument
	* lispbibl.d (check_charset): return bool
	* stream.d (open_iconv): do not barf when charset is nullobj
	(check_charset): return false when code is invalid and charset is
	nullobj

2002-06-19  Bruno Haible  <bruno@clisp.org>

	* constsym.d (CHARSET:ARMSCII-8, CHARSET:TCVN): Disable in glibc-2.2.

2002-06-19  Sam Steingold  <sds@gnu.org>

	new built-in MEMQ == MEMBER :TEST #'EQ
	* list.d (MEMQ): new function (uses memq)
	* constsym.d, subr.d (memq): define
	* clos.lisp, compiler.lisp, defstruct.lisp, describe.lisp:
	* init.lisp, type.lisp: use it instead of MEMBER :TEST #'EQ

2002-06-17  Sam Steingold  <sds@gnu.org>

	abstracted some code
	* list.d (memq): new function
	* lispbibl.d (memq): declare
	* control.d (PROCLAIM, KEYWORD-TEST): use it
	* eval.d (augment_decl_env): ditto
	* io.d (interpret_feature): ditto
	* package.d (symtab_find, symtab_delete, shadowing_find)
	(use_package, %IN-PACKAGE, FIND-ALL-SYMBOLS, RE-EXPORT): ditto
	* symbol.d (GET-PROPERTIES): ditto
	* record.d (obj_in_list): removed (superseded by memq)
	(structure_up, %STRUCTURE-TYPE-P, keyword_test, slot_in_arglist)
	(%SHARED-INITIALIZE): use !null(memq()) instead of obj_in_list()

2002-06-17  Sam Steingold  <sds@gnu.org>

	* lispbibl.d [DECALPHA/UNIX_FREEBSD]: treat just like Linux
	Verified by Jeffrey Katcher <jmkatcher@yahoo.com>.

2002-06-15  Sam Steingold  <sds@gnu.org>

	* modules/clx/mit-clx/input.lisp (:configure-request): use
	`member8' instead of `member' for `data'
	From <http://ww.telent.net/cliki/eclipse>
	and <http://dept-info.labri.u-bordeaux.fr/~strandh/patch-xlib.lisp>

2002-06-15  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	more fixes for bug #[ 542902 ]: not only socket-wait is
	interruptible on windows, but also socket-accept is
	* socket.d (accept_connection) [WIN32_NATIVE]: interruptible
	check socket for readability (infinitely long) before calling
	accept.

2002-06-14  Sam Steingold  <sds@gnu.org>

	* complete.lisp (completion): when there is no word to complete,
	describe the current funcall and return 0
	* stream.d (lisp_completion): when COMPLETION returns 0,
	refresh the current line using rl_refresh_line()

2002-06-14  Sam Steingold  <sds@gnu.org>

	grand type renaming continues
	array_dim_size --> array_dim_size_t
	environment --> environment_t
	gc_function --> gc_function_t
	host_data --> host_data_t
	host_data_fetcher --> host_data_fetcher_t
	map_sequence_function --> map_sequence_function_t
	module_ --> module_t
	sockaddr_max --> sockaddr_max_t
	stack_range --> stack_range_t
	thread_ --> thread_t
	unwind_protect_caller --> unwind_protect_caller_t
	* modules/clx/new-clx/clx.f, modules/clx/new-clx/e2d.c:
	* affi.d, array.d, control.d, debug.d, eval.d, foreign1.lisp:
	* fsubr.d, genclisph.d, io.d, lispbibl.d, modules.d, predtype.d:
	* sequence.d, spvw.d, spvw_memfile.d, spvw_module.d:
	* spvw_space.d, spvw_walk.d, spvwtabf.d, subr.d:
	* utils/modprep.d, utils/modpreptest.out: replaced

2002-06-14  Sam Steingold  <sds@gnu.org>

	* spvw_genera1.d (rebuild_old_generation_cache): fixed last
	patch: FREE_DYNAMIC_ARRAY should be on the same block level as
	DYNAMIC_ARRAY

2002-06-14  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	fixed bug #[ 514805 ]: core dump using :rehash-size in 9nines
	On MSVC, also UNIX with HAVE_ALLOCA_H, RISCOS and others, where
	DYNAMIC_ARRAY implemented through _alloca(3), putting it
	into the loop is dangerous: stack is freed only when function
	returns, not by FREE_DYNAMIC_ARRAY.
	* spvw_genera1.d (rebuild_old_generation_cache): put allocation
	of fixed sized block out of loop. May allocate unneeded block,
	but that case seems rare to me.

2002-06-13  Sam Steingold  <sds@gnu.org>

	grand type renaming: * --> *_t:
	decoded_time --> decoded_time_t
	internal_time --> internal_time_t
	lisp_function --> lisp_function_t
	map_heap_function --> map_heap_function_t
	object_initdata --> object_initdata_t
	subr_initdata --> subr_initdata_t
	timescore --> timescore_t
	* modules/clx/new-clx/e2d.c, affi.d, eval.d, foreign1.lisp,
	* fsubr.d, genclisph.d, lisparit.d, lispbibl.d, modules.d,
	* pathname.d, spvw.d, spvw_gcstat.d, spvw_walk.d, subr.d, time.d,
	* utils/modprep.d, utils/modpreptest.out: replaced

2002-06-12  Sam Steingold  <sds@gnu.org>

	Russian messages are now working
	* configure.in (ALL_LINGUAS): added `ru'
	* constsym.d (russian): added
	* init.lisp (russian.lisp) [GETTEX UNICODE]: load
	* russian.lisp: new file
	* spvw_language.d (language_russian): added
	(current_language_o, init_language): handle it
	(init_language_from): check for Russian
	* makemake.in (LPARTS) [$with_unicode]: added russian

2002-06-12  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (schar): match the cast in return the the return type

2002-06-12  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	Fixed win32 build
	* win32.d [_MSC_VER]: no LC_MESSAGES in msvc
	* socket.d (connect_via_ip): fixed bad goto

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (schar): Add comments! Change return type to chart.
	Make 'static inline', not 'global inline', for better inlining.
	* array.d (storagevector_aref): Update for schar change.
	* charstrg.d (schar): Remove out-of-line definition.
	(coerce_char): Update for schar change.
	(CHAR, SCHAR): Likewise.
	* debug.d (read_form): Likewise.
	* io.d (sstring_printf): Likewise.
	* pathname.d (Z_AT_SLASH, parse_logical_word)
	(parse_logical_host_prefix, parse_logical_pathnamestring)
	(PARSE-NAMESTRING): Likewise.
	(legal_logical_word): Change variable from 'cintX' to 'chart', it's
	safer.
	(legal_type, wild_p, word_wild_p): Likewise.
	(wildcard_diff_ab): Update for schar change. Simplify filling string.
	(translate_nametype_aux, ensure_last_slash): Update for schar change.
	* stream.d (read_char_array, rd_ch_str_in, wr_ch_array_pphelp)
	(rd_ch_buff_in): Likewise.

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* makemake.in (XCFLAGS): Put a space before --traditional-cpp.

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* array.d (make_storagevector): Create a string with as small
	element size as possible.

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* encoding.d (MAKE-ENCODING): Fix a GC safety bug. Use the
	original arg for the error message, not the upcased one.

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* socket.d (CLOSESOCKET): Make macro more robust.

2002-06-12  Bruno Haible  <bruno@clisp.org>

	* m4/lcmessage.m4 (AM_LC_MESSAGES): Do not test
	ac_cv_header_locale_h here.
	* m4/gettext.m4 (AM_INTL_SUBDIR): Test it here.
	* configure.in: Call AM_LC_MESSAGES.
	* unixconf.h.in (HAVE_LC_MESSAGES): New macro.
	* win32.d (HAVE_LC_MESSAGES): New macro.
	* spvw_ctype.d (init_ctype): Use HAVE_LC_MESSAGES.

2002-06-12  Eduard Haritonov <hed@iis.nsk.su>
	    Arseny Slobodjuck  <ampy@ich.dvo.ru>

	Long awaited Russian translations
	* po/Makefile.devel: added ru language
	* po/Makefile.trans.ru: new translator's makefile
	* po/ru.po: new translations file

2002-06-11  Sam Steingold  <sds@gnu.org>

	* complete.lisp (completion): restored adding ")" when completing
	a function without arguments, broken since FUNCTION-SIGNATURE was
	modified to return the function name as the first value

2002-06-11  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): added an undocumented, unsupported `-d'
	developer option: not in usage(), clisp.c, clisp.html, clisp.1 &c
	for now just unlock all packages

2002-06-11  Sam Steingold  <sds@gnu.org>

	* makemake.in (XCFLAGS) [darwin]: add `--traditional-cpp'
	(--verbose): new option

2002-06-11  Sam Steingold  <sds@gnu.org>

	* spvw_ctype.d (init_ctype) [UNIX_DARWIN]: no LC_MESSAGES,
	just like on WIN32_NATIVE

2002-06-10  Sam Steingold  <sds@gnu.org>

	* charstrg.d (string_gleich): use string_eqcomp()
	(string_equal): use string_eqcomp_ci()

2002-06-10  Sam Steingold  <sds@gnu.org>

	make string element access slightly easier: use schar()
	* lispbibl.d (schar): define
	* charstrg.d (schar) [HAVE_SMALL_SSTRING]: implement
	(coerce_char, CHAR, SCHAR): use schar()
	* array.d (storagevector_aref): use schar()
	* debug.d (read_form): ditto
	* io.d (sstring_printf): ditto
	* pathname.d (schar): removed
	(parse_logical_word, parse_logical_host_prefix)
	(parse_logical_pathnamestring, translate_nametype_aux)
	(parse_logical_host_prefix, wildcard_diff_ab)
	(ensure_last_slash): use direct `==' instead of chareq(as_chart)
	* stream.d (read_char_array, rd_ch_str_in, wr_ch_array_pphelp)
	(rd_ch_buff_in): use schar()

2002-06-10  Sam Steingold  <sds@gnu.org>

	* pathname.d (common_case, test_optional_host, all_digits)
	(split_name_type, legal_logical_word, legal_type, wild_p)
	(word_wild_p, Z_AT_SLASH): adjusted for the new SIMPLE-STRING
	model by using SstringDispatch (for the 2002-05-26 UCS-4 patch)
	(schar, copy_upcase): new functions
	(parse_logical_word, translate_nametype_aux, PARSE-NAMESTRING)
	(parse_logical_host_prefix, parse_logical_pathnamestring)
	(wildcard_diff_ab): use them

2002-06-10  Sam Steingold  <sds@gnu.org>

	* makemake.in: when running CLISP, pass "-E UTF-8" instead of
	"-Efile UTF-8" for the sake of "make check" on badly localized
	machines (ascii terminals make UNICODE warnings into errors)

2002-06-10  Sam Steingold  <sds@gnu.org>

	user can now control the exit code better
	* lispbibl.d, spvw.d (final_exitcode): int, not bool (spvw.d
	and win32aux.d already assign it non-bool values)
	* control.d (%EXIT): errorp maybe a positive fixnum, in which
	case we can use its value for final_exitcode

2002-06-10  Sam Steingold  <sds@gnu.org>

	* erramiga.d: do not use /* ENGLISH */ to mark
	gettext catalog messages

2002-06-07  Sam Steingold  <sds@gnu.org>

	* modules/clx/new-clx/configure.in: work with autoconf-2.53
	(GB_CHECK): removed

2002-06-07  Sam Steingold  <sds@gnu.org>

	do not distribute autoconf with CLISP
	* Makefile.devel (EXCLUDE): exclude the po/tmp and autoconf cache
	(AUTOCONF_VERSION): new exported variable
	(AUTOCONF, AUTOCONF_CACHE): new variables
	(AUTOCONF_FILES): removed autoconf.m4f
	(*/configure): use $(AUTOCONF)
	(check-configures): remove $(AUTOCONF_CACHE)
	(potfiles): cleanup
	* ffcall/Makefile.devel (AUTOCONF_VERSION, AUTOCONF): new variables
	(AUTOCONF_FILES): removed autoconf.m4f
	(*/configure): use $(AUTOCONF)
	* libcharset/Makefile.devel, sigsegv/Makefile.devel:
	(AUTOCONF_VERSION, AUTOCONF): new variables
	(*/configure): use $(AUTOCONF)
	* ffcall/autoconf/autoconf, ffcall/autoconf/autoconf.m4f,
	* sigsegv/autoconf/autoconf, sigsegv/autoconf/autoconf.m4f,
	* src/autoconf/autoconf, src/autoconf/autoconf.m4f: removed

2002-06-06  Peter Burwood  <clisp@peterb.org.uk>

	* stdint.h.in (NEED_SIGNED_INT_TYPES): New define.
	(int8_t) [NEED_SIGNED_INT_TYPES]: Declare type only when needed.
	(int16_t, int32_t, int64_t): Likewise.

2002-06-05  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (DYNAMIC_STRING) [UNICODE]: Use Rectype_S32string, not
	Rectype_S8string.

2002-06-05  Sam Steingold  <sds@gnu.org>

	tweaked the last Arseny's patch
	* socket.d (lingerize_socket) [WIN32]: removed (not used)
	(ioctl) [WIN32]: moved to win32.d
	* win32.d (ioctl): define here, just like ioctl for UNIX is
	defined in unix.d

2002-06-04  Peter Burwood  <clisp@peterb.org.uk>

	* m4/address.m4 (CL_ADDRESS_RANGE): Remove cl_cv_prog_cc_ansi test
	now that CL_CC_ANSI is not required.

2002-06-05  Arseny Slobodjuck <ampy@ich.dvo.ru>

	Working with sockets on win32
	* win32.d (socket_wait_event): new enum typedef
	(interruptible_socket_wait): renamed from
	interruptible_wait and generalized to take event parameter,
	see socket select() function for description of	these events.
	* win32aux.d (socket_wait_params): parameter struct to pass
	in thread.
	(do_socket_wait): renamed from do_wait, takes struct
	as Joerg likes, now tests for given event, not only for read.
	(interruptible_socket_wait): parameters changed to struct.
	* socket.d (ioctl) [WIN32]: define on win32 as ioctlsocket.
	(bindlisten_via_ip): don't lingerize socket (seems working,
	need to test).
	(connect_via_ip): don't lingerize. Fixed for win32 (may affect
	UNIX behavior too).
	* stream.d (socket_server_wait): use renamed
	interruptible_socket_wait.

2002-06-04  Peter Burwood  <clisp@peterb.org.uk>

	* lispbibl.d (DYNAMIC_STRING): Replace obsolete Rectype_Sstring with
	Rectype_S8string

2002-06-04  Sam Steingold  <sds@gnu.org>

	* savemem.lisp (saveinitmem): added :START-PACKAGE argument

2002-06-04  Sam Steingold  <sds@gnu.org>

	* Makefile.devel (CONFIGURES): added libcharset/configure
	(libcharset/configure): new target

2002-06-03  Sam Steingold  <sds@gnu.org>

	* describe.lisp (describe-object): print the length of the lists
	before enumerating properties, packages, symbols &c

2002-06-03  Sam Steingold  <sds@gnu.org>

	* makemake.in (packopt): fixed the 2002-05-15 patch which broke
	giving meaningful package options (e.g. --with-threads=POSIX_THREADS)

2002-06-03  Sam Steingold  <sds@gnu.org>

	build process: tweak 2002-05-30 patch: instead of relying on
	HAVE_*_H, add "." to the include path (-I.) and #include <...>
	* makemake.in (XCFLAGS): add -I. when STDBOOL_H and STDINT_H
	are non-void
	* lispbibl.d, uniname.c, unitypes.h: #include <...>

2002-05-31  Sam Steingold  <sds@gnu.org>

	tweaked the last two win32 patches
	* socket.d (connect_via_ip): use sock_set_errno() instead of
	explicit errno= (for the benefit of win32)
	* win32.d (EINPROGRESS, ETIMEDOUT): removed
	(earlylate_asciz_error): removed declaration
	* win32aux.d (earlylate_asciz_error): local, not global
	if we need such global function in the future,
	it should probably go into <error.d>

2002-06-01  Arseny Slobodjuck <ampy@ich.dvo.ru>

	Win32 build fixes
	* win32.d: include <locale.h>
	(EINPROGRESS, ETIMEDOUT): define to use instead of WSAE*.
	* spvw_ctype (init_ctype) [WIN32_NATIVE]: LC_MESSAGES is not
	defined on win32

2002-05-31  Arseny Slobodjuck <ampy@ich.dvo.ru>

	* win32.d (stderr_handle): new global variable.
	(earlylate_asciz_error): new function.
	* win32aux.d (stderr_handle): define.
	(winsock_initialized): new static variable.
	(init_win32): initialize stderr_handle,
	set winsock_initialized, use earlylate_asciz_error
	(done_win32): use winsock_initialized flag.
	(earlylate_asciz_error): New function. Prints an
	error to stderr, optionally exits clisp (the latter
	is not recommended). Does not use clisp internals.

2002-05-30  Sam Steingold  <sds@gnu.org>

	* genclisph.d: anticipate possible future addition of stdint.h
	(print_file): new function
	(main): use it to output stdbool.h

2002-05-30  Sam Steingold  <sds@gnu.org>

	OpenBSD build fixes
	* lispbibl.d, uniname.c (stdbool.h): check HAVE_STDBOOL_H
	* unitypes.h (stdint.h): check HAVE_STDINT_H
	* unixconf.h.in (HAVE_STDINT_H): added an #undef

2002-05-29  Sam Steingold  <sds@gnu.org>

	* makemake.in (UNICODE_EXTRA): new variable (fixed the build
	broken by addition of streq.h cjk.h uniwidth.h width.c)

2002-05-28  Sam Steingold  <sds@gnu.org>

	* socket.d (connect_via_ip): when 0 timeout is given return
	immediately (do not wait at all); the next i/o operation on this
	socket might block - use SOCKET-STATUS to check that

2002-05-29  Bruno Haible  <bruno@clisp.org>

	Speed up the loading of type.lisp.
	* lispbibl.d (Encoding): Add a maxintervals argument to the enc_range
	function.
	(Encoding_range): Update.
	* stream.d (iconv_range): Add a maxintervals argument.
	* encoding.d (all_range): Likewise.
	(bmp_range): Likewise.
	(nls_range): Likewise.
	(SYSTEM::CHARSET-TYPEP): Update.
	(SYSTEM::CHARSET-RANGE): Add optional maxintervals argument.
	* pseudofun.d (all_range, nls_range, iconv_range): Add a maxintervals
	argument.
	* type.lisp (get-charset-range): Add optional maxintervals argument.

2002-05-29  Bruno Haible  <bruno@clisp.org>

	Upgrade CHAR-WIDTH and STRING-WIDTH to Unicode 3.2.
	* streq.h: New file, from libunistring-0.0.
	* cjk.h: New file, from libunistring-0.0.
	* uniwidth.h: New file, from libunistring-0.0.
	* width.c: New file, from libunistring-0.0.
	* charstrg.d (nonspacing_table_data, nonspacing_table_ind): Remove
	arrays. Instead include width.c.
	(char_width): Rewritten to use uc_width.
	* spvw.d (locale_encoding): New variable.
	* encoding.d (init_dependent_encodings): Initialize locale_encoding.

2002-05-28  Sam Steingold  <sds@gnu.org>

	* stream.d (buffered_half_flush, buffered_full_flush): removed
	(buffered_flush): always do what buffered_half_flush() used to do

2002-05-28  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (STACK_register): Fix #if condition.

2002-05-28  Bruno Haible  <bruno@clisp.org>

	* makemake.in (XCC_GCC_VERSION): Update for gcc 3.1.
	(XCFLAGS): With gcc 3.1, add -fno-gcse.

2002-05-28  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (setSP, FAST_SP) [I80386]: Don't define when using
	gcc-3.1.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	Assume <locale.h> exists.
	* m4/locale.m4: Remove file.
	* m4/setlocale.m4 (CL_SETLOCALE): Assume <locale.h> exists.
	* configure.in (CL_LOCALE_H): Remove call.
	* unixconf.h.in (HAVE_LOCALE_H): Remove macro.
	* unix.d: Always include <locale.h> and declare setlocale.
	* spvw_ctype.d (init_ctype): Assume HAVE_LOCALE_H is defined.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	Finish 1998-02-11 patch.
	* m4/cc-ansi.m4: Remove file.
	* m4/address.m4 (CL_ADDRESS_RANGE): Don't require CL_CC_ANSI.
	* configure.in (CL_CC_ANSI): Remove call.
	* makemake.in: Remove CC_ANSI handling.
	* Makefile.devel (acorn/makefile.cc): Pass second argument 'cc' to
	makemake.

2002-05-27  Sam Steingold  <sds@gnu.org>

	fixed last patch
	* makemake.in (NLS_INCLUDES): removed nls_cp1255 and nls_cp1258
	* charstrg.d (nstring_downcase): added cint32 case
	(nstring_upcase): removed the spurious extra case

2002-05-26  Bruno Haible  <bruno@clisp.org>

	* utils/unicode/Makefile (ALL): Remove nls_cp1255.c, nls_cp1258.c.
	(nls_cp1255.c, nls_cp1258.c): Remove rules.
	* nls_cp1255.c: Remove file.
	* nls_cp1258.c: Remove file.
	* constsym.d (CP1255, CP1258, WINDOWS-1255, WINDOWS-1258):
	Conditionalize on GNU_LIBICONV || glibc-2.2.
	(BIG5-HKSCS): Renamed from BIG5HKSCS.
	(KOI8-RU, EUC-JP, SHIFT-JIS, CP932, ISO-2022-JP, EUC-CN, GBK, CP936)
	(GB18030, EUC-TW, BIG5, CP950, BIG5-HKSCS, ISO-2022-CN)
	(ISO-2022-CN-EXT, EUC-KR, CP949, ISO-2022-KR, JOHAB, ARMSCII-8)
	(GEORGIAN-ACADEMY, GEORGIAN-PS, TIS-620, CP1133, VISCII, TCVN, UTF-16)
	(UTF-7): Also enable on glibc-2.2.
	(ISO-2022-JP-2): Also enable on glibc-2.3.
	* encoding.d: Don't include nls_cp1255.c and nls_cp1258.c.
	(nls_tables): Remove nls_cp1255_table, nls_cp1258_table.
	(iconv_first_sym, iconv_last_sym, iconv_num_encodings): Also define
	on glibc-2.2.
	(init_encodings_2): Update according to changes in constsym.d.
	(encoding_from_name): Handle CP1255 in the libiconv specific part.
	Use same code on glibc-2.2 as with libiconv. Use BIG5-HKSCS, not
	BIG5HKSCS.
	* pseudofun.d (nls_cp1255_table, nls_cp1258_table): Remove entries.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	* lispbibl.d (HAVE_GOOD_ICONV): Define if good iconv available.
	(HAVE_ICONV): Don't undefine this.
	* encoding.d: Test HAVE_GOOD_ICONV instead of GNU_LIBICONV ||
	HAVE_ICONV.
	* pseudofun.d: Likewise.
	* stream.d: Likewise. Assume ICONV_CONST is defined.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	Fix "make distclean".
	* makemake.in (OBSOLETE): Don't add linkkit.
	(install-bin): Use RMRF variable.
	(distrib): Likewise.
	(clean0): rm -rf linkkit.
	(clean1): rm -rf base full.
	(clean4): rm -f charset.alias.
	(clean5): If building outside srcdir, remove the UNICODE_INCLUDES,
	the NLS_INCLUDES, and unitypes.h, uniname.h, uninames.h. rm -rf data.
	(clean7): rm -rf avcall callback libcharset sigsegv. If building
	outside srcdir, rm -rf readline po termcap, and rm -f configure
	unixconf.h.in makemake.in VERSION.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	Implement UCS-4 strings.
	* lispbibl.d: Accept new flag NO_SMALL_SSTRING.
	(Rectype_S8string, Rectype_Imm_S8string, Rectype_S16string)
	(Rectype_Imm_S16string, Rectype_S32string, Rectype_Imm_S32string):
	New enumeration values.
	(Rectype_Sstring, Rectype_Imm_Sstring, Rectype_SmallSstring)
	(Rectype_Imm_SmallSstring): Remove enumeration values.
	(char_int_len): Define to 24 instead of 16.
	(char_int_limit): Define to 0x110000 instead of 0x10000.
	(HAVE_SMALL_SSTRING): Don't define if NO_SMALL_SSTRING is specified.
	(small_char_int_len, small_char_int_limit, small_char_code_limit):
	Remove macros.
	(scint): Remove type.
	(cint8, cint16, cint32): New types.
	(cint8_limit, cint16_limit, cint32_limit): New macros.
	(STRUCT_SSTRING): New macro.
	(small_sstring_, SmallSstring): Remove types.
	(s8string_, S8string, s16string_, S16string, s32string_, S32string):
	New types.
	(Array_type_sstring): Handle 3 different simple-string types.
	(TheSmallSstring): Remove macro.
	(TheS8string, TheS16string, TheS32string): New macros.
	(vectorp, simplep, array_simplep, simple_string_p, stringp)
	(arrayp): Update.
	(if_recordp): Handle 3 different simple-string types.
	(small_char_p): Remove macro.
	(case_Rectype_Sstring_above): Handle 3 different simple-string types.
	(case_Rectype_string_above): Likewise.
	(case_Rectype_array_above): Likewise.
	(allocate_s8string, allocate_imm_s8string, allocate_s16string)
	(allocate_imm_s16string, allocate_s32string)
	(allocate_imm_s32string): New declarations.
	(allocate_string): Change to a macro.
	(allocate_imm_string): Likewise.
	(allocate_small_string, allocate_imm_small_string): Remove
	declarations.
	(reallocate_small_string): Add an argument 'newtype'.
	(copy_8bit_8bit, copy_8bit_16bit, copy_8bit_32bit, copy_16bit_8bit)
	(copy_16bit_16bit, copy_16bit_32bit, copy_32bit_8bit)
	(copy_32bit_16bit, copy_32bit_32bit): New declarations.
	(chartcopy): Remove macro.
	(scintcopy): Remove declaration.
	(SstringCase): Renamed from SstringDispatch. Add one more case.
	(SstringDispatch): New macro.
	(sstring_normal_p): Update.
	(unpack_sstring_alloca): Update. Call copy_16bit_32bit or
	copy_8bit_32bit instead of scintcopy.
	(check_sstring_mutable): Handle 3 different simple-string types.
	* array.d (storagevector_aref): Update SstringDispatch invocation.
	(storagevector_store): Handle 3 different simple-string types.
	(elt_copy_Char_T): Update SstringDispatch invocation.
	(elt_copy_T_Char): Handle 3 different simple-string types.
	(elt_copy_Char_Char): Likewise.
	(elt_move_Char): Update SstringDispatch invocation. Don't inline
	elt_copy_Char_Char.
	(elt_fill): Update SstringDispatch invocation.
	(elt_reverse): Handle 3 different simple-string types.
	(elt_nreverse): Update SstringDispatch invocation.
	(ssstring_extend_low): Call copy_32bit_32bit/copy_8bit_8bit
	instead of chartcopy.
	(ssstring_append_extend): Handle 3 different simple-string types.
	(initial_contents_aux): Make it compile if TYPECODES.
	(ADJUST-ARRAY): Replace allocate_small_string call by one of
	allocate_s[8|16|32]string.
	* charstrg.d (nop_page): Change element type to uint16.
	(copy_8bit_8bit, copy_8bit_16bit, copy_8bit_32bit, copy_16bit_8bit)
	(copy_16bit_16bit, copy_16bit_32bit, copy_32bit_8bit)
	(copy_32bit_16bit, copy_32bit_32bit): New functions.
	(scintcopy): Remove function.
	(string_gleich): Update SstringDispatch invocations.
	(string_equal): Likewise.
	(sstring_store): Handle 3 different simple-string types.
	(sstring_store_array): Likewise.
	(copy_string): Likewise.
	(coerce_imm_ss): Likewise.
	(coerce_normal_ss): Likewise.
	(coerce_char): Update SstringDispatch invocation.
	(char_name): Update allocate_small_string invocation. Return a
	string of length 9 for characters with code >= 0x10000.
	(name_char): Accept names of the form "Uxxxxxxxx" of length 9.
	(CHAR): Update SstringDispatch invocation.
	(SCHAR): Likewise.
	(test_string_limits_rw): Handle 3 different simple-string types.
	(string_eqcomp): Update SstringDispatch invocations.
	(string_comp): Likewise.
	(string_eqcomp_ci): Likewise.
	(string_comp_ci): Likewise.
	(string_width): Update SstringDispatch invocation.
	(nstring_upcase): Handle 3 different simple-string types.
	(nstring_downcase): Likewise.
	(nstring_capitalize): Likewise.
	(subsstring): Likewise.
	(SUBSTRING): Likewise.
	(string_concat): Likewise.
	* debug.d (read_form): Update SstringDispatch invocation.
	* encoding.d (hex_table): Make read-only.
	(fehler_unencodable): Display character codes >= 0x10000 correctly.
	(bmp_range): New function.
	(uni16_wcslen): Handle the case of characters >= 0x10000 in the
	source string.
	(uni16be_wcstombs): Likewise.
	(uni16le_wcstombs): Likewise.
	(fehler_uni32_invalid): Update error message.
	(uni32be_mblen): Renamed from uni32_mblen.
	(uni32le_mblen): New function.
	(uni32be_mbstowcs): Correct counting in case the error action is
	:IGNORE.
	(uni32le_mbstowcs): Likewise.
	(uni32be_wcstombs): Output characters outside the BMP correctly.
	(uni32le_wcstombs): Likewise.
	(fehler_utf8_invalid4): New function.
	(utf8_mblen): Reject UTF-8 encoded surrogates. Accept 4-byte sequences.
	(utf8_mbstowcs): Likewise.
	(utf8_wcstombs): Emit 4-byte sequence for characters outside the BMP.
	(java_mblen): Accept 12-byte sequences.
	(java_mbstowcs): Likewise.
	(java_wcslen): Characters outside the BMP generate 12 bytes of output.
	(java_wcstombs): Likewise.
	(nls_wcslen): Handle characters outside the BMP.
	(nls_wcstombs): Likewise.
	(nls_asciiext_wcslen): Handle characters outside the BMP. Remove a
	piece of dead code.
	(nls_asciiext_wcstombs): Handle characters outside the BMP.
	(nls_range): Speed up the case when end >= 0x10000.
	(ascii_to_string): Simplify.
	(init_encodings_1): Use bmp_range instead of all_range for
	UNICODE-16-BIG-ENDIAN and UNICODE-16-LITTLE-ENDIAN. Use uni32le_mblen
	for UNICODE-32-LITTLE-ENDIAN. Change max_bytes_per_char of UTF-8 to 4.
	Change max_bytes_per_char of JAVA to 12.
	* hashtabl.d (hashcode_string): Update SstringDispatch invocation.
	(hashcode3_atom): Handle 3 different simple-string types.
	(hashcode4_vector_Char): Update SstringDispatch invocation.
	* io.d (sstring_printf): Update SstringDispatch invocation.
	(small_char_code_limit): New macro.
	(write_sstring_case): Update SstringDispatch invocations.
	(pr_symbol_part): Likewise.
	(pr_sstring_ab): Likewise.
	(pr_orecord): Handle 3 different simple-string types.
	* lisparit.d (decimal_string): Inline the copying loop, instead of
	calling chartcopy.
	* misc.d (MACHINE-VERSION): Use TheS8string instead of TheSmallSstring.
	* package.d (string_hashcode): Update SstringDispatch invocation.
	* pathname.d (looks_logical_p): Update SstringDispatch invocation.
	(PARSE-NAMESTRING): Use SstringCase instead of SstringDispatch.
	(legal_name): Update SstringDispatch invocation.
	(ensure_last_slash): Likewise.
	* predtype.d (elt_compare_T_Char): Update SstringDispatch invocation.
	* pseudofun.d (bmp_range, uni32be_mblen, uni32le_mblen): New entries.
	(uni32_mblen): Remove entry.
	* spvw_garcol.d (gc_mark): Handle 3 different simple-string types.
	* spvw_genera1.d (walk_area, build_old_generation_cache): Likewise.
	* spvw_objsize.d (size_s8string, size_s16string, size_s32string):
	New macros.
	(size_sstring): Define as alias of size_s32string or size_s8string.
	(objsize): Handle 3 different simple-string types.
	* spvw_typealloc.d (allocate_string, allocate_imm_string)
	(allocate_small_string, allocate_imm_small_string): Remove functions.
	(allocate_s8string, allocate_imm_s8string, allocate_s16string)
	(allocate_imm_s16string, allocate_s32string)
	(allocate_imm_s32string): New functions.
	(reallocate_small_string): Add 'newtype' argument.
	* spvw_update.d (update_varobject): Handle 3 different
	simple-string types.
	* stream.d (wr_ch_array_dummy): Update SstringDispatch invocation.
	(read_char_array): Likewise.
	(rd_ch_str_in): Likewise.
	(wr_ch_array_pphelp): Likewise.
	(rd_ch_buff_in): Likewise.
	(CLISP_INTERNAL_CHARSET): Change to UCS-4-INTERNAL.
	(rd_ch_array_buffered): Update SstringDispatch invocation.
	(wr_ch_array_terminal3): Likewise.
	(wr_ch_array_window): Likewise.
	(FILE-STRING-LENGTH): Likewise.

	Upgrade Unicode character data tables from 2.0.14 to 3.2.0.
	* utils/unicode/gen-ctype.c: New file.
	* utils/unicode/attribute_table.java: Remove file.
	* utils/unicode/upcase_table.java: Remove file.
	* utils/unicode/downcase_table.java: Remove file.
	* utils/unicode/uni_bothcase.java: Remove file.
	* utils/unicode/Makefile (JAVA, JAVAC): Remove variables.
	(uni_upcase.c, upcase_table.class, uni_downcase.c)
	(downcase_table.class, uni_attribute.c, attribute_table.class):
	Remove rules.
	* uni_attribute.c: Regenerated for Unicode 3.2.0 by gen-ctype.c.
	* uni_upcase.c: Likewise.
	* uni_downcase.c: Likewise.
	* charstrg.d (up_case): up_case_table is now shorter than
	char_code_limit. Sign-extend the table entry.
	(down_case): Likewise.
	(unicode_attribute): unicode_attribute_table is now shorter than
	char_code_limit.

	Upgrade Unicode name tables to 3.2.0.
	* uniname.c: New file, from libunistring-0.0.
	* uniname.h: New file, from libunistring-0.0.
	* utils/gen-uninames: Update from libunistring-0.0.
	* uninames.h: New file, from libunistring-0.0, replaces uninames.c.
	* uninames.c: Remove file.
	* unitypes.h: New file, from libunistring-0.0.
	* charstrg.d: Include uniname.h and uniname.c instead of uninames.c.
	(unicode_name_word, unicode_name_word_lookup): Remove functions, now
	contained in uniname.c.
	(jamo_initial_short_name, jamo_medial_short_name)
	(jamo_final_short_name): Remove arrays, now contained in uniname.c.
	(char_name): Use unicode_character_name function from uniname.c.
	(name_char): Use unicode_name_character function from uniname.c.
	* makemake.in (UNICODE_INCLUDES): Remove uninames, add uniname.
	Treat unitypes.h uniname.h uninames.h like the UNICODE_INCLUDES.
	charstrg depends on them only if with_unicode is enabled.

	Substitute for <stdint.h>.
	* stdint.h.in: New file, from libunistring-0.0.
	* m4/stdint.m4: New file, from libunistring-0.0.
	* configure.in: Invoke gt_STDINT_H.
	* makemake.in (EVERY_INCLUDES_H): Add stdint.h.
	(stdint.h): New rule.
	(clean4): Remove stdint.h.

2002-05-24  Bruno Haible  <bruno@clisp.org>

	* spvw.d (fehler_code_alignment): Give a useful advice for GCC 3.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	* constsym.d: Avoid compilation error when compiling with
	GNU_GETTEXT but without UNICODE.

2002-05-26  Bruno Haible  <bruno@clisp.org>

	* makemake.in (FILES): List the additional .a files in the same
	order as in LIBS, not in the reverse order.
	(LIBS): Add libreadline.a in front of libcharset.a. This avoids a
	link error for 'locale_charset' when compiling without -DUNICODE.

2002-05-26  Sam Steingold  <sds@gnu.org>

	timeout on connecting, see <http://cr.yp.to/docs/connect.html>
	* socket.d (socket_connect_fn_t): accept 3rd arg `opts' (renamed
	from `socket_connect_fn')
	(with_hostname): accept 4th arg `opts' (passed to `connector')
	(connect_to_x_via_ip, bindlisten_via_ip): accept and ignore `opts'
	(connect_to_x_server, create_server_socket): pass NULL to
	`with_hostname' as `opts'
	(create_client_socket, connect_via_ip): accept 3rd `timeout' arg
	* stream.d (sec_usec): sec may also be a cons and a real
	(socket_server_wait): extracted from SOCKET-WAIT
	(SOCKET-ACCEPT, SOCKET-CONNECT): accept 4th keyword arg :TIMEOUT
	(SOCKET-WAIT): use socket_server_wait()
	* subr.d, subrkwd.d (socket_accept, socket_connect): updated
	* constsym.d (TIMEOUT): added the keyword

2002-05-25  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	fixed win32 build (broken on 2002-05-23 and 2002-05-22)
	* array.d (elt_move_Char): rename the label right after
	block beginning from `restart' to `restart_it' since 'restart'
	is used before as a type name and it confuses the compiler
	* charstrg.d (sstring_store_array): `small' renamed to `smallp'
	for a similar reason
	(coerce_normal_ss, nstring_upcase, nstring_downcase): `restart'
	renamed to `restart_it'
	* win32aux.d (read_helper_low, sock_read): fixed typos

2002-05-24  Sam Steingold  <sds@gnu.org>

	* linux.lisp (read-helper): new function (points to read_helper)
	(read): a macro, calls read-helper

2002-05-23  Sam Steingold  <sds@gnu.org>

	buffered sockets and pipes now work
	* acorn.d (read_helper): prototype
	(full_read, safe_read): #define
	* amiga.d, msdos.d, win32.d: ditto
	* amigaaux.d (read_helper): implemented
	(full_read): removed
	* unixaux.d: ditto
	(sock_read) [UNIX_BEOS]: partial read is okay
	* win32aux.d (lowlevel_full_read, do_full_read, full_read): removed
	(read_helper_low, do_read_helper, read_helper): added
	(lowlevel_sock_read): partial read is okay
	* stream.d (low_fill_buffered_handle): use safe_read()
	instead of full_read()
	Suggested by Todd Sabin <tsabin@optonline.net>

2002-05-23  Sam Steingold  <sds@gnu.org>

	* stream.d (strm_buffered_extrafields_t): replaced eofindex with
	have_eof_p and endvalid
	(BufferedStream_eofindex): removed
	(BufferedStream_have_eof_p, BufferedStream_endvalid): added
	(buffered_half_flush, buffered_flush, buffered_nextbyte)
	(buffered_eofbyte, position_file_buffered, read_byte_array_buffered)
	(write_byte_array_buffered, rd_ch_buffered, rd_ch_array_buffered)
	(logical_position_file_end, make_buffered_stream)
	(finish_output_buffered, closed_buffered): updated
	Suggested by Todd Sabin <tsabin@optonline.net>

2002-05-22  Sam Steingold  <sds@gnu.org>

	* pathname.d (directory_search): save subr_self before calling
	MAKE-HASH-TABLE and restore it afterwards (for error reporting)

2002-05-22  Bruno Haible  <bruno@clisp.org>

	Introduce mutable small strings. Storing characters in strings can
	now trigger GC.
	* lispbibl.d: Verify that SPVW_PURE implies TYPECODES.
	(Rectype_SmallSstring, Rectype_reallocstring): New enumeration items.
	(siarray_): New struct type.
	(Siarray): New type.
	(Array_type_sstring): Add Rectype_SmallSstring, Rectype_reallocstring.
	(TheSiarray): New macro.
	(vectorp, simplep, array_simplep, simple_string_p, stringp, arrayp):
	Update.
	(if_recordp): Handle Rectype_SmallSstring, Rectype_reallocstring.
	(case_Rectype_Sstring_above): Add Rectype_SmallSstring,
	Rectype_reallocstring.
	(case_Rectype_string_above): Likewise.
	(case_Rectype_array_above): Likewise.
	(allocate_small_string): New declaration.
	(reallocate_small_string): New declaration.
	(with_sstring_0): Follow Siarray chain before calling Sstring_length.
	(with_sstring): Likewise.
	(simple_array_to_storage, simple_array_to_storage1): New macros.
	(array_total_size): Turn into an inline function. Follow Siarray chain
	before calling Sarray_length.
	(elt_fill, elt_reverse): Can now trigger GC.
	(SstringDispatch): Handle mutable small-strings.
	(sstring_normal_p): Likewise.
	(unpack_string_rw): Return the storage vector and offset, instead of
	a chart* pointer.
	(sstring_store): New declaration.
	(sstring_store_array): New declaration.
	(nstring_upcase): Take a storage vector and an offset as arguments,
	instead of a chart* pointer. Can now trigger GC.
	(nstring_downcase): Likewise.
	(nstring_capitalize): Likewise.
	(check_sstring_mutable): Handle mutable small-strings.
	* affi.d (SYS::MEM-READ): Update for unpack_string_rw change.
	* array.d (vector_length): Follow Siarray chain before calling
	Sarray_length.
	(iarray_displace): Likewise.
	(iarray_displace_check): Likewise.
	(array_displace_check): Likewise.
	(subscripts_to_index): Follow Siarray chain before calling test_index.
	Return the real storage vector.
	(storagevector_store): Add a maygc argument. Return the storage vector.
	When storing a character in a small string, reallocate the string
	if needed.
	(SYS::STORE): Call storagevector_store with maygc=true.
	(ROW-MAJOR-AREF): Follow Siarray chain before calling
	storagevector_aref.
	(SYS::ROW-MAJOR-STORE): Follow Siarray chain before calling
	storagevector_store. Call storagevector_store with maygc=true.
	(ARRAY-DIMENSION): Follow Siarray chain before calling Sarray_length.
	(array_dimensions): Likewise.
	(ARRAY-IN-BOUNDS-P): Likewise.
	(ARRAY-ROW-MAJOR-INDEX): Follow Siarray chain before calling
	test_index.
	(elt_copy_T_Char): Handle the case of a mutable small-string.
	(elt_copy_Char_Char): Likewise.
	(elt_move_Char): Likewise.
	(elt_fill): Handle the case of a mutable small-string. Can now trigger
	GC.
	(elt_reverse): Likewise.
	(elt_nreverse): Handle the case of a mutable small-string.
	(VECTOR-PUSH): Call storagevector_store with maygc=true.
	(VECTOR-PUSH-EXTEND): Likewise.
	(initial_contents_aux): Follow Siarray chain if reallocated.
	(reshape): Call storagevector_store with maygc=false.
	(ADJUST-ARRAY): Create storage vector in the right type (small or not),
	to avoid GC later.
	* charstrg.d (unpack_string_ro): Follow Siarray chain before calling
	Sstring_length.
	(unpack_string_rw): Return the storage vector and offset, instead of
	a chart* pointer.
	(sstring_store): New function.
	(sstring_store_array): New function.
	(coerce_imm_ss): Handle mutable small-strings and reallocated strings.
	(coerce_normal_ss): Likewise.
	(coerce_imm_normal_ss): Likewise.
	(char_name): Return a small-string if possible.
	(CHAR): Follow Siarray chain before calling Sstring_length.
	(SCHAR): Likewise.
	(SYS::STORE-CHAR): Follow Siarray chain before calling
	check_sstring_mutable. Call sstring_store.
	(SYS::STORE-SCHAR): Likewise.
	(test_string_limits_rw): Handle mutable small-strings.
	(test_1_stringsym_limits): Return the storage vector and offset,
	instead of a chart* pointer.
	(nstring_upcase): Take a storage vector and an offset as arguments,
	instead of a chart* pointer. Handle small-strings. Can now trigger GC.
	(string_upcase): Follow Siarray chain before return.
	(NSTRING-UPCASE): Update.
	(STRING-UPCASE): Update. Follow Siarray chain before return.
	(nstring_downcase): Take a storage vector and an offset as arguments,
	instead of a chart* pointer. Handle small-strings. Can now trigger GC.
	(string_downcase): Follow Siarray chain before return.
	(NSTRING-DOWNCASE): Update.
	(STRING-DOWNCASE): Update. Follow Siarray chain before return.
	(nstring_capitalize): Take a storage vector and an offset as arguments,
	instead of a chart* pointer. Handle small-strings. Can now trigger GC.
	(NSTRING-CAPITALIZE): Update.
	(STRING-CAPITALIZE): Update. Follow Siarray chain before return.
	* debug.d (read_form): Follow Siarray chain before calling
	Sstring_length.
	* encoding.d (ascii_to_string): Allocate a mutable small-string.
	* foreign.d (convert_from_foreign_array_fill): Return the array.
	For strings, convert into a temporary array on the stack, then call
	sstring_store_array. Follow Siarray chain before return.
	(convert_from_foreign): Follow Siarray chain before storing array.
	* hashtabl.d (hashcode3_atom): Handle mutable small-strings and
	reallocated strings.
	* io.d (sstring_printf): Follow Siarray chain before accessing
	elements.
	(write_string): Follow Siarray chain before calling write_sstring.
	(pr_orecord): Handle mutable small-strings and reallocated strings.
	* misc.d (MACHINE-VERSION): Use a small-string.
	* pathname.d (PARSE-NAMESTRING): Update for nstring_downcase,
	nstring_capitalize changes.
	(customary_case): Likewise. Follow Siarray chain before return.
	(SHELL): Call sstring_store.
	* spvw_garcol.d (gc_mark): Handle Rectype_SmallSstring,
	Rectype_reallocstring.
	* spvw_genera1.d (walk_area): Likewise.
	(build_old_generation_cache): Likewise.
	* spvw_objsize.d (size_siarray): New macro.
	(objsize): Handle Rectype_SmallSstring. Handling of
	Rectype_reallocstring is automatic.
	* spvw_typealloc.d (allocate_small_string): New function.
	(reallocate_small_string): New function.
	* spvw_update.d (update_varobject): Handle Rectype_SmallSstring,
	Rectype_reallocstring.
	* stream.d (rd_ch_array_dummy): Call sstring_store.
	(read_char_array): Likewise. Handle mutable small-strings.
	(rd_ch_array_str_in): Follow Siarray chain before calling elt_copy.
	(rd_ch_array_unbuffered): Call sstring_store.
	(rd_ch_array_buffered): Call sstring_store_array.
	(lisp_completion): Fix wrong error message code. Follow Siarray chain
	before calling Sstring_length.

2002-05-22  Bruno Haible  <bruno@clisp.org>

	* stream.d (OS_error_saving_errno): Renamed from error_saving_errno.
	All callers changed.

2002-05-21  Sam Steingold  <sds@gnu.org>

	* inspect.lisp (*http-encoding*): new variable (utf-8/dos)
	(http-command, with-http-output): use it

2002-05-21  Sam Steingold  <sds@gnu.org>

	* encoding.d (MAKE-ENCODING): when the iconv charset is already
	built-in use it instead of iconv
	(ENCODING-CHARSET): new function
	* constsym.d, subr.d: added encoding_charset
	* init.lisp: export ENCODING-CHARSET

2002-05-21  Sam Steingold  <sds@gnu.org>

	* makemake.in (XCFLAGS) [GCC]: no optimization with GCC-3.1

2002-05-20  Bruno Haible  <bruno@clisp.org>

	* stream.d (wr_ch_array_pphel_): Remove function.
	(wr_ch_array_pphelp): Inline it here.

2002-05-20  Bruno Haible  <bruno@clisp.org>

	* charstrg.d (CHAR, SYSTEM::STORE-CHAR): Correct checking of validity
	of index. Don't use unpack_string here.
	(unpack_string): Remove function.
	(unpack_string_ro): Inline old unpack_string.
	(unpack_string_rw): Call unpack_string_ro, not unpack_string.

2002-05-20  Bruno Haible  <bruno@clisp.org>

	Remove gcc-3.0.4 warning.
	* eval.d (LD, LR): Don't use CONCAT to paste strings; justaposing the
	strings is sufficient.

2002-05-19  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (STACK_register) [S390]: adjusted 2002-03-24 patch
	to use the register on GCC-3.1 or better

2002-05-18  Sam Steingold  <sds@gnu.org>

	* makemake.in (stdbool.h): sed RE depends on TOS: not all systems
	use autoconf [actually, it is not clear that it is legitimate to
	expect a non-UNIX system to have sed; cygwin is ubiquitous though,
	so win32 is, hopefully, covered]

2002-05-18  Arseny Slobodjuck  <ampy@ich.dvo.ru>
	    Sam Steingold  <sds@gnu.org>

	graceful disconnect and interruptible wait in win32
	* stream.d (low_close_socket) [WIN32_NATIVE]: do not shutdown
	a socket: shutdown does not respect the linger option.
	To use shutdown for graceful disconnect, one should implement
	a kind of protocol, i.e. shutdown SEND and wait for client
	acknowledgment (client should support that protocol).
	(SOCKET-WAIT) [WIN32_NATIVE]: use interruptible_wait()
	(SOCKET-STREAM-SHUTDOWN): explicitly cast handle to socket
	* socket.d (lingerize_socket) [WIN32_NATIVE]: new function: set
	SO_LINGER to 30sec, as is done in Apache (http_main.c)
	(bindlisten_via_ip, connect_via_ip) [WIN32_NATIVE]: use it
	* spvw.d (main) [WIN32_NATIVE]: call done_win32() to finalize sockets
	* win32.d (done_win32, interruptible_wait): declare new functions
	* win32aux.d (done_win32): new function: finalizes socket library
	(do_wait): new thread function for DoInterruptible
	(interruptible_wait): new global function

2002-05-18  Sam Steingold  <sds@gnu.org>

	kill src/gettext; POs are now in src/po
	* Makefile.devel (SOURCES3, CONFIGURES, configures, potfiles):
	removed gettext/*
	(src--distrib): do create a PO tar
	* configure: removed gettext, replaced gettext/po with po
	* configure.in (ALL_LINGUAS, po/Makefile.in): moved here from
	gettext/configure.in
	* makemake.in: removed gettext, replaced gettext/po with po
	(ALL_LINGUAS): get it from src/configure.in

2002-05-17  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 557155 ]: inspector :http broken Content-Length
	* inspect.lisp (with-http-output): convert the string to a vector
	with CONVERT-STRING-TO-BYTES and STREAM-EXTERNAL-FORMAT of the
	socket to reliably compute the `Content-length:' header;
	then write it with WRITE-BYTE-SEQUENCE (temporarily changing
	STREAM-ELEMENT-TYPE to binary)

2002-05-17  Bruno Haible  <bruno@clisp.org>

	* stdbool.h.in: Upgrade to gettext-0.11.3.
	* m4/stdbool.m4: Upgrade to gettext-0.11.3.
	* configure.in: Use gt_STDBOOL_H instead of CL_STDBOOL_H.
	* makemake.in (stdbool.h): Create using sed.

2002-05-16  Sam Steingold  <sds@gnu.org>

	* stream.d (make_file_stream) [UNIX, RISCOS]: file streams
	for the /proc filesystem default to unbuffered (it's better
	not to mess with those files anyway!)

2002-05-16  Sam Steingold  <sds@gnu.org>

	* makemake.in (LIBS) [win32]: link with ws2_32 and not wsock32
	since we are using winwock2.h

2002-05-15  Bruno Haible  <bruno@clisp.org>

	* makemake.in: Fix handline of with-xxx options, broken on 2002-03-07.

	* configure.in: Move the AM_ICONV invocation before AM_GNU_GETTEXT.

	Don't forget that 3000 students were murdered by the government
	of the "People's Republic of China" in June 1989!

2002-05-14  Sam Steingold  <sds@gnu.org>

	* timezone.lisp (PRC): China does not observe DST since 1991.

2002-05-10  Bruno Haible  <bruno@clisp.org>

	* ../configure: Configure libcharset, not libiconv.
	* configure.in: Call AM_GNU_GETTEXT, in order to get use an external
	GNU gettext. Call AM_ICONV instead of CL_ICONV.
	* m4/iconv.m4: Update from GNU gettext 0.11.2.
	* m4/codeset.m4, m4/gettext.m4, m4/glibc21.m4, m4/isc-posix.m4,
	* m4/lcmessage.m4, m4/lib-ld.m4, m4/lib-link.m4, m4/lib-prefix.m4,
	* m4/progtest.m4: New files, from GNU gettext 0.11.2.
	* autoconf/config.rpath: New file, from GNU gettext 0.11.2.
	* makemake.in: Pay attention to CPPFLAGS. New variable XCPPFLAGS.
	(USE_LIBICONV, XCL_ICONVLIB): Remove variables.
	(USE_LIBCHARSET, XCL_CHARSETLIB): New variables.
	(GETTEXTLIB): Remove variable.
	(USE_GETTEXT, XCL_GETTEXTLIB): Assume external libintl.
	(EVERY_INCLUDES_H): Don't include libintl.h and iconv.h, they are
	external now. Instead include libcharset.h.
	(${GETTEXTLIB}, libintl.a, libintl.h): Remove targets.
	(iconv.h, libiconv.a): Remove targets.
	(libcharset.a): New target.
	(distmakefile): No need for localesed processing.
	* lispbibl.d (GNU_LIBICONV): Define only when including <iconv.h>
	shows that GNU libiconv is used. Otherwise, if not glibc >= 2.2,
	undefine HAVE_ICONV.
	* _distmakefile: Use 'share' instead of @DATADIRNAME@.
	* Makefile.devel (SOURCES4): Use libcharset, not libiconv.
	(CONFIGURES): Remove libiconv/configure.
	(libiconv/autoconf/aclocal.m4, libiconv/configure): Remove rules.

2002-05-08  Sam Steingold  <sds@gnu.org>

	* gettext/po/Makefile.devel: use msguniq from GNU gettext 0.11
	instead of clisp-msguniq
	(clisp-msguniq): removed

2002-05-07  Bruno Haible  <bruno@clisp.org>

	* compiler.lisp (SP-depth): Insert a verification that each label
	is a symbol. Fix wrong treatment of JMPIFBOUNDP.

2002-05-07  Sam Steingold  <sds@gnu.org>

	* stream.d (ChannelStream_init): add an end_system_call() for
	each begin_system_call()

2002-05-06  Bruno Haible  <bruno@clisp.org>

	* misc.d (LISP-IMPLEMENTATION-VERSION): Use casts to 'unsigned int'
	to avoid gcc-3.1 warnings.
	* utils/comment5.d: Include <stdlib.h>, for exit().

2002-05-06  Sam Steingold  <sds@gnu.org>

	do not create unusable iconv encodings
	* stream.d (fehler_iconv_invalid_charset): removed
	(open_iconv): open the iconv conversion and signal all errors
	(check_charset): check whether the charset is valid
	(iconv_mblen, iconv_mbstowcs, iconv_wcslen, iconv_wcstombs)
	(iconv_range, ChannelStream_init): use open_iconv()
	* lispbibl.d (check_charset): declare
	* encoding.d (MAKE-ENCODING): check the iconv charset for
	validity before making the charset

2002-05-03  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 550864 ]: cannot use RETURN-FROM in deep nesting
	[this bug was introduced by the 2001-06-25 patch]
	* compiler.lisp (note-far-used-block): propagate block to
	all the enclosing functions, not just the current one

2002-05-03  Sam Steingold  <sds@gnu.org>

	* makemake.in (XCFLAGS) [debug]: add -DDEBUG_OS_ERROR on all
	platforms, do not add it on win32 when not debugging
	also add -DDEBUG_SPVW -DSAFETY=3
	also do not do any optimization when debugging: even though GCC
	supports that, the result is not convenient for debugging

2002-05-02  Sam Steingold  <sds@gnu.org>

	* io.d (read_token_1): permit input of multiply escaped illegal
	characters (bug fix)

2002-04-30  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 550528 ]: misleading error converting UTF-7
	* stream.d (saving_errno, error_saving_errno): new macros
	(iconv_mblen, iconv_mbstowcs, iconv_wcslen, iconv_wcstombs)
	(iconv_range, create_input_pipe, create_output_pipe)
	(create_io_pipe): use them

2002-04-28  Bruno Haible  <bruno@clisp.org>

	Split autoconf/aclocal.m4 into pieces.
	* m4/general.m4, m4/proto.m4, m4/cc-gcc.m4, m4/c++.m4,
	* m4/cc-ansi.m4, m4/cc-cppaux.m4, m4/cc-elif.m4, m4/cc-error.m4,
	* m4/cc-ema.m4, m4/cc-mergestrings.m4, m4/as-underscore.m4,
	* m4/ranlib.m4, m4/install.m4, m4/cp.m4, m4/ln.m4, m4/x11.m4,
	* m4/sys-irix.m4, m4/sys-dynix.m4, m4/socket.m4, m4/sh-args.m4,
	* m4/cc-void.m4, m4/ffcall-pccstruct.m4, m4/ffcall-smallstruct.m4,
	* m4/ffcall-ireg.m4, m4/longlong.m4, m4/longdouble.m4,
	* m4/stdc-headers.m4, m4/offsetof.m4, m4/stdbool.m4, m4/locale.m4,
	* m4/unistd.m4, m4/openflags.m4, m4/access.m4, m4/dir.m4,
	* m4/utsname.m4, m4/netdb.m4, m4/shm.m4, m4/termios.m4,
	* m4/caddr_t.m4, m4/socklen_t.m4, m4/structtm.m4, m4/strlen.m4,
	* m4/memset.m4, m4/gmalloc.m4, m4/malloc.m4, m4/free.m4,
	* m4/alloca.m4, m4/setjmp.m4, m4/signal.m4, m4/siginterrupt.m4,
	* m4/sigaltstack.m4, m4/fpu_control.m4, m4/raise.m4, m4/abort.m4,
	* m4/perror.m4, m4/strerror.m4, m4/sys_errlist.m4, m4/getenv.m4,
	* m4/putenv.m4, m4/setlocale.m4, m4/rlimit.m4, m4/vfork.m4,
	* m4/setsid.m4, m4/execv.m4, m4/execl.m4, m4/waitpid.m4,
	* m4/rusage.m4, m4/getcwd.m4, m4/chdir.m4, m4/mkdir.m4, m4/rmdir.m4,
	* m4/stat.m4, m4/readlink.m4, m4/eloop.m4, m4/opendir.m4,
	* m4/closedir.m4, m4/open.m4, m4/read-write.m4, m4/chmod.m4,
	* m4/rename.m4, m4/unlink.m4, m4/fsync.m4, m4/ioctl.m4, m4/fcntl.m4,
	* m4/select.m4, m4/ualarm.m4, m4/setitimer.m4, m4/usleep.m4,
	* m4/localtime.m4, m4/gettimeofday.m4, m4/ftime.m4, m4/times.m4,
	* m4/getpwnam.m4, m4/getpwuid.m4, m4/gethostname.m4,
	* m4/gethostbyname.m4, m4/connect.m4, m4/unixconn.m4, m4/tcpconn.m4,
	* m4/address.m4, m4/getpagesize.m4, m4/vadvise.m4, m4/mach-vm.m4,
	* m4/mmap.m4, m4/munmap.m4, m4/msync.m4, m4/mprotect.m4,
	* m4/ffcall-codeexec.m4, m4/shmget.m4, m4/shmat.m4, m4/shmdt.m4,
	* m4/shmctl.m4, m4/shm-rmid.m4, m4/dynload.m4, m4/iconv.m4,
	* m4/termcap.m4, m4/filecharset.m4, m4/c++-constructors.m4,
	* m4/builtin_strlen.m4, m4/cc-char-unsigned.m4, m4/c++-bool.m4,
	* m4/intparam.m4, m4/endian.m4: New files.
	* Makefile.devel (aclocal.m4): New rule.
	* autoconf/acselect: Remove file.
	* m4/libtool.m4: Renamed from autoconf/libtool.m4.

2002-04-27  Sam Steingold  <sds@gnu.org>

	limited support for tracing local functions (cannot use the
	lexicals, i.e., must not be real closures)
	* trace.lisp (tracer): new struct
	(tracer-set-fdef, check-traceable): new functions
	(trace, trace1): use them
	(untrace1, untrace2): handle the tracer argument

2002-04-26  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (PC386) [WIN32]: define, so that *FEATURES* will
	contain :PC386 on the :WIN32 platform

2002-04-25  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 539701 ]: early initialization error -> crash
	* spvw.d (main): init_other_modules_2() after the stream
	variables are already initialized

2002-04-25  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 548368 ]: inspector help barfs (nested inspectors)
	* inspect.lisp (*inspect-all*): bind in INSPECT instead of using
	a global variable since nested INSPECT sessions can interfere
	with each other, each modifying the same *INSPECT-ALL*
	(inspect-finalize): the default method now does nothing

2002-04-24  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 548362 ]: inspector deletes wrong package on exit
	* inspect.lisp (inspect): keep the temp inspect package in a
	lexical variable in addition to *PACKAGE*

2002-04-24  Sam Steingold  <sds@gnu.org>

	* spvw.d (init_object_tab) [UNIX_CYGWIN32]: add :CYGWIN to *FEATURES*

2002-04-24  Sam Steingold  <sds@gnu.org>

	upgraded to readline-4.2a
	* stream.d (lisp_completion_matches, lisp_completion_more):
	fixed the signature for the new readline
	(rd_ch_terminal3): wrap multi-line history handling inside
	begin_system_call()/end_system_call()
	(init_streamvars): do not use readline internals
	* noreadline.d: upgraded to the readline-4.2a API

2002-04-24  Hoehle, Joerg-Cyril  <Joerg-Cyril.Hoehle@t-systems.com>
	    Sam Steingold  <sds@gnu.org>

	patch #[ 548089 ]: FOREIGN-FUNCTION+VARIABLE for everybody
	this allows CLISP FFI self-test (and dozens of hacks)
	* foreign.d (ffi_identity): new function
	(ffi_user_pointer): new variable
	(init_ffi): register them
	* foreign.lisp (ffi_identity, ffi_user_pointer) [commented]: define

2002-04-23  Hoehle, Joerg-Cyril  <Joerg-Cyril.Hoehle@t-systems.com>
	    Sam Steingold  <sds@gnu.org>

	patch #[ 547541 ]: WITH-FOREIGN-OBJECT FFI stack allocation
	* foreign.d (EXEC-ON-STACK): new function
	* constsym.d, subr.d: ditto
	* foreign1.lisp (with-foreign-object): new public macro

2002-04-23  Hoehle, Joerg-Cyril  <Joerg-Cyril.Hoehle@t-systems.com>
	    Sam Steingold  <sds@gnu.org>

	patch #[ 547491 ]: C-VAR-ADDRESS and OFFSET foreign-places
	* foreign1.lisp (offset, c-var-address): new public macros
	* foreign.d (%OFFSET): comment that it is used now

2002-04-22  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): new option: `-interactive-debug', which
	overrides batch-mode for -c, -x and exec-file
	* constsym.d (APPEASE-CERRORS): define here for the above

2002-04-22  Hoehle, Joerg-Cyril  <Joerg-Cyril.Hoehle@t-systems.com>
	    Sam Steingold  <sds@gnu.org>

	* foreign.d (UNSIGNED-FOREIGN-ADDRESS): new function
	(FOREIGN-ADDRESS-VALUE): renamed to FOREIGN-ADDRESS-UNSIGNED
	* subr.d, constsym.d: ditto
	* foreign1.lisp (foreign-address-null): use FOREIGN-ADDRESS-UNSIGNED

2002-04-22  Sam Steingold  <sds@gnu.org>

	do not go into an edless loop on `clisp -x '(assert nil)'`
	* condition.lisp (assert): name the interactive CONTINUE restart
	functions for the benefit of APPEASE-CERRORS and MUFFLE-CERRORS
	(assert-restart-no-prompts, maybe-continue, muffle-cerror):
	new functions
	(muffle-cerrors): use MUFFLE-CERROR
	(appease-cerror): use MAYBE-CONTINUE
	(prompt-for-new-value): interact via *DEBUG-IO*, not *QUERY-IO*

2002-04-22  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 547046 ]: compiler-macro -> no special-operator
	* compiler.lisp (c-form): call EXPAND-COMPILER-MACRO before
	checking C-FORM-TABLE to accomodate expanding to a special form

2002-04-22  Sam Steingold  <sds@gnu.org>

	* cmacros.lisp (define-compiler-macro): call CHECK-REDEFINITION

2002-04-21  Sam Steingold  <sds@gnu.org>

	* cfgamiga.lisp, cfgdos.lisp, cfgsunux.lisp, cfgunix.lisp:
	* cfgwin32.lisp, cfgacorn.lisp (*clhs-root-default*):
	restore the DEFVAR lost on 2002-04-12

2002-04-18  Sam Steingold  <sds@gnu.org>

	fixed bug [ 543072 ]: make-encoding :input-action on bad input
	* stream.d (iconv_mblen, iconv_mbstowcs): treat EINVAL (incomplete
	input) like EILEQ (conversion error) for delimited strings

2002-04-17  Sam Steingold  <sds@gnu.org>

	* stream.d (low_close_socket) [WIN32_NATIVE]: shutdown the socket
	before closing it
	(SOCKET-STREAM-SHUTDOWN): use SOCK_error(), not OS_errno()

2002-04-16  Peter Burwood  <clisp@peterb.org.uk>

	* autoconf/aclocal.m4 (HAVE_GETRUSAGE): check whether getrusage()
	actually works, not just that it is present (it is present in
	cygwin, but works only on NT, not win98)

2002-04-16  Joerg-Cyril Hoehle  <Joerg-Cyril.Hoehle@t-systems.com>

	* regexp.lisp (regexp-exec): correct positions for ()-group submatches

2002-04-16  Joerg-Cyril Hoehle  <Joerg-Cyril.Hoehle@t-systems.com>

	* foreign.d (convert_from_foreign): fix c-array uint8/16/32 return
	broken since CVS 1999-09-13

2002-04-16  Sam Steingold  <sds@gnu.org>

	* foreign1.lisp (parse-c-function): check :OUT & :IN-OUT args for
	being pointers, just like in FOREIGN-CALL-OUT in foreign.d

2002-04-16  Joerg-Cyril Hoehle  <Joerg-Cyril.Hoehle@t-systems.com>
	    Sam Steingold  <sds@gnu.org>

	* io.d (pr_orecord): print invalid FOREIGN-VARIABLEs and
	FOREIGN-FUNCTIONs with INVALID prefix and address with offset

2002-04-16  Sam Steingold  <sds@gnu.org>

	error reporting unification
	* record.d (fehler_key_odd): new function
	(check_keywords): new macro
	(%ALLOCATE_INSTANCE, %SHARED-INITIALIZE, %REINITIALIZE-INSTANCE)
	(%INITIALIZE-INSTANCE, %MAKE-INSTANCE): use them
	* constsym.d: define SHARED-INITIALIZE, REINITIALIZE-INSTANCE,
	INITIALIZE-INSTANCE, MAKE-INSTANCE here for error reporting
	* subr.d, constsym.d: %* should be named p*, not *

2002-04-16  Stefan Kain  <stefan.kain@freenet.de>

	* clos.lisp, record.d: translated all comments

2002-04-12  Peter Burwood  <clisp@peterb.org.uk>

	* stream.d (finish_tty_output) [UNIX_CYGWIN32]: ignore EBADF from
	fsync, just like in force_tty_output()

2002-04-12  Sam Steingold  <sds@gnu.org>

	*BROWSERS* and *BROWSER* are in CUSTOM, as advertised
	* init.lisp (*browser*, *browsers*): export from CUSTOM
	* clhs.lisp (*browser*, *browsers*): docstrings
	(*browsers*): xterm is UNIX-only
	* cfgamiga.lisp, cfgdos.lisp, cfgsunux.lisp, cfgunix.lisp:
	* cfgwin32.lisp, cfgacorn.lisp: suggest customizing *BROWSER*

2002-04-12  Sam Steingold  <sds@gnu.org>

	* time.d (DELTA4): work with up to 64-bit return values
	* lispbibl.d, intelem.d (UL2_to_I): define always

2002-04-11  Peter Burwood  <clisp@peterb.org.uk>

	* errunix.d (get_errormsg): prevent EILSEQ shadowing ENOENT

2002-04-10  Sam Steingold  <sds@gnu.org>

	new built-in DELTA4 for metering.lisp optimization
	* time.d (delta4): implemented
	* subr.d, constsym.d (delta4): added
	* defs1.lisp (%time): use DELTA4

2002-04-10  Sam Steingold  <sds@gnu.org>

	* configure: handle --with-no-dynamic-modules
	* makemake.in: uniform handling of --with* arguments

2002-04-05  Joerg-Cyril Hoehle  <Joerg-Cyril.Hoehle@t-systems.com>

	* modules.d (MODULE): silence the compiler warning about
	module__*__init_function_*() prototype
	* modules/regexp/regexi.c: include <stdlib.h> before "regex.h"

2002-04-04  Stefan Kain  <stefan.kain@freenet.de>

	* spvw_ctype.diff, spvw_gcstat.diff, spvw_genera2.diff:
	* spvw_genera3.diff, spvw_page.diff, spvw_sigsegv.diff:
	* spvw_sigwinch.diff, spvwtabf.diff, spvwtabo.diff:
	* spvwtabs.diff: translated all comments

2002-04-04  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 538748 ]: OS_errno lost before error reporting
	* spvw_memfile.d (loadmem): use OS_errno instead of errno

2002-04-02  Sam Steingold  <sds@gnu.org>

	* clhs.lisp (*browsers*): added mozilla and links and various
	`-remote' and `-xterm' variations

2002-04-01  Sam Steingold  <sds@gnu.org>

	Rework the 2002-03-30 patch: use SOCKET-STREAM-SHUTDOWN instead
	of CLOSE :DIRECTION
	* gray.lisp, subrkw.d: reverted CLOSE
	* subr.d, constsym.d: added SOCKET-STREAM-SHUTDOWN
	* stream.d (SOCKET-STREAM-SHUTDOWN): implemented
	(builtin_stream_close_partial): removed
	(built_in_stream_close): reverted

2002-04-01  Sam Steingold  <sds@gnu.org>

	uncouple OPEN-STREAM-P from INPUT-STREAM-P/OUTPUT-STREAM-P
	* lispbibl.d (strmflags_open_bit_B): new bit (0)
	(strmflags_open_B): use it, not the top 4 bits
	(allocate_stream): add it to strmflags
	* spvw_typealloc.d (allocate_stream): ditto
	* stream.d (strmflags_rdwr_B): new mask (top 4 bits)
	(make_synonym_stream, make_twoway_stream, make_echo_stream)
	(MAKE-GENERIC-STREAM, make_socket_stream)
	(BUILT-IN-STREAM-SET-ELEMENT-TYPE): use it instead of
	strmflags_open_B
	(BUILT-IN-STREAM-ELEMENT-TYPE): do not return NIL for closed
	streams
	* io.d (pr_stream): print INPUT/OUTPUT/IO even for closed streams

2002-04-01  Stefan Kain  <stefan.kain@freenet.de>

	* spvw_heap.diff, spvw_language.diff, spvw_objsize.diff:
	* spvw_sigint.diff, spvw_space.diff, spvw_update.diff:
	* spvw_walk.diff: translated all comments

2002-03-31  Sam Steingold  <sds@gnu.org>

	* reploop.lisp (commands4): `Continue' was mentioned twice
	From Arseny Slobodjuck <ampy@ich.dvo.ru>
	(commands): new function to combine COMMANDS[1-4]; do not
	COPY-LIST the return values thereof since they are already
	freshly consed lists
	(break-loop, step-hook-fn): use it
	(main-loop): do not COPY-LIST the return value of COMMANDS0

2002-03-30  Stefan Kain  <stefan.kain@freenet.de>

	* spvw_fault.d, spvw_global.d, spvw_mmap.d, spvw_multimap.d:
	translated all comments

2002-03-30  Sam Steingold  <sds@gnu.org>

	* io.d (pr_stream): print components of TWO-WAY and ECHO streams
	* lispbibl.d (strm_twoway_input, strm_twoway_output): define here
	* stream.d (strm_twoway_input, strm_twoway_output): do not define here

2002-03-30  Sam Steingold  <sds@gnu.org>

	For the benefit of internet protocol implementors, allow closing
	streams in only one direction - an interface to shutdown(2)
	* stream.d (builtin_stream_close_partial): new function - close a
	stream in only one direction
	(BUILT-IN-STREAM-CLOSE): instead of ignored :ABORT keyword arg,
	take :DIRECTION argument and use builtin_stream_close_partial()
	* subr.d, subrkw.d (BUILT-IN-STREAM-CLOSE): kw(abort)->kw(direction)
	* pathname.d (check_direction): use subr_self for error message
	* gray.lisp (close): pass direction to BUILT-IN-STREAM-CLOSE
	* configure.in (HAVE_SHUTDOWN): check for shutdown(2)
	* unixconf.h.in (HAVE_SHUTDOWN): added an #undef
	* win32.d (HAVE_SHUTDOWN, SHUT_RD, SHUT_WR, SHUT_RDWR): define

2002-03-30  Sam Steingold  <sds@gnu.org>

	* trace.lisp (*trace-indent*): new user option
	(trace-pre-output, trace-post-output): use it
	(subclosure-pos): find traced definitions too
	(%local-set): fixed error reporting

2002-03-29  Stefan Kain  <stefan.kain@freenet.de>

	* spvw_allocate.d, spvw_genera1.d, spvw_memfile.d, spvw_typealloc.d:
	translated all comments

2002-03-28  Sam Steingold  <sds@gnu.org>

	when COMPILE-FILE with :OUTPUT-FILE arg causes REQUIRE to compile
	a file, place the compiled file in the same directory
	* compiler.lisp (*compile-file-directory*): new variable
	(compile-file): bind it when given :OUTPUT-FILE
	(c-REQUIRE): when it is non-NIL, give COMPILE-FILE :OUTPUT-FILE

2002-03-27  Arseny Slobodjuck  <ampy@ich.dvo.ru>
	    Sam Steingold  <sds@gnu.org>

	* install.bat: search for install.lisp in the current directory
	if it is not found in src/; slashes changed to backslashes
	* install.lisp (*clisp-home*): forward slashes only for -B parameter
	(*lisp-type-map*): new variables
	(top-level): registers all file extensions
	HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes is a synonym for
	HKEY_CLASSES_ROOT, do not set it
	Use Y-OR-NO-P to let the user control the setup.

2002-03-24  Sam Steingold  <sds@gnu.org>

	* defs1.lisp (%time): avoid some possible consing by computing
	the hi/lo differences before merging

2002-03-24  Sam Steingold  <sds@gnu.org>

	* spvw.d (SUBR_SET_ARGTYPE): new macro
	(init_subr_tab_1, dynload_modules): use it

2002-03-24  Stefan Kain  <stefan.kain@freenet.de>

	* spvw.d, spvw_garcol.d, spvw_circ.d: translated all comments

2002-03-24  Gerhard Tonn  <GerhardTonn@swol.de>

	FFCALL ported to IBM s/390
	* lispbibl.d (STACK_register) [S390]: do not define -
	broken due to a compiler bug
	* ffcall/avcall/Makefile.in (avcall-s390.lo): new target
	* ffcall/avcall/avcall-s390.c, ffcall/avcall/avcall-s390.s: added
	* ffcall/avcall/avcall.h.in (__s390__): handle it
	* ffcall/callback/trampoline_r/Makefile.in (tramp-s390.lo): new target
	* ffcall/callback/trampoline_r/proto-s390.s: added
	* ffcall/callback/trampoline_r/tramp-s390.s: added
	* ffcall/callback/trampoline_r/proto.c (__s390__): handle it
	* ffcall/callback/trampoline_r/test1.c (__s390__): ditto
	* ffcall/callback/trampoline_r/trampoline.c (__s390__): ditto
	* ffcall/callback/vacall_r/vacall-s390.c: added
	* ffcall/callback/vacall_r/vacall-s390.s: added
	* ffcall/callback/vacall_r/Makefile.in (vacall-s390.lo): new target
	* ffcall/callback/vacall_r/vacall_r.h.in (__s390__): handle it
	* ffcall/trampoline/Makefile.in (tramp-s390.o): new target
	* ffcall/trampoline/proto-s390.s, ffcall/trampoline/tramp-s390.s: added
	* ffcall/trampoline/trampoline.c (__s390__): handle it
	* ffcall/vacall/Makefile.in (vacall-s390.o): new target
	* ffcall/vacall/vacall-s390.c, ffcall/vacall/vacall-s390.s: added
	* ffcall/vacall/vacall.h.in (__s390__): handle it

2002-03-22  Sam Steingold  <sds@gnu.org>

	* makemake.in (mandir, htmldir, dvidir, docdir):
	architecture-independent, thus under prefix, not exec_prefix

2002-03-21  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 531879 ]: eval-when and top-forms
	* init.lisp (%expand-form): do not conflate COMPILE and
	:COMPILE-TOPLEVEL situations
	* compiler.lisp (c-EVAL-WHEN): do not conflate LOAD with
	:LOAD-TOLEVEL and COMPILE with :COMPILE-TOPLEVEL

2002-03-21  Sam Steingold  <sds@gnu.org>

	* configure (--with-debug): new option: pass "debug" to makemake
	* clisp.spec: updated

2002-03-21  Will Newton  <will@misconception.org.uk>

	fixed bug #[ 501963 ]: FFCALL cannot be built with GCC 3.0
	When compiling with -O2 or better, the configure test for pcc
	non-reentrant struct return convention is optimized away and
	always returns true. This causes avcall to believe it can use PCC
	when it cannot - and so bad things happen.
	* autoconf/aclocal.m4 (CL_PCC_STRUCT_RETURN): reset CFLAGS

2002-03-21  Will Newton  <will@misconception.org.uk>

	* trampoline.c [linux MIPS]: cachectl.h is in asm, not linux

2002-03-21  Sam Steingold  <sds@gnu.org>

	more $host_cpu canonicalization (arm, alpha)
	* makemake.in (host_cpu): handle hppa* and arm* together
	* autoconf/aclocal.m4 (CL_CANONICAL_HOST_CPU)
	(CL_CANONICAL_HOST_CPU_FOR_FFCALL): canonicalize $host_cpu=arm* to
	arm and alphaev6[78] to alpha
	Suggested by Will Newton <will@misconception.org.uk>

2002-03-21  Sam Steingold  <sds@gnu.org>

	* eval.d, ffcall/avcall/avcall.h.in
	* ffcall/avcall/avcall.h.mingw32, ffcall/avcall/avcall.h.msvc
	* ffcall/callback/vacall_r/vacall_r.h.in
	* ffcall/callback/vacall_r/vacall_r.h.mingw32
	* ffcall/callback/vacall_r/vacall_r.h.msvc
	* ffcall/vacall/vacall.h.in, ffcall/vacall/vacall.h.mingw32
	* ffcall/vacall/vacall.h.msvc: Never check for __GNUC_MINOR__
	without first making sure that __GNUC__ is correct
	Reported by Will Newton <will@misconception.org.uk>

2002-03-18  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): void domain for the -E command line argment
	means all 5 domains

2002-03-18  Sam Steingold  <sds@gnu.org>

	added CUSTOM:*PARSE-NAMESTRING-DOT-FILE* user option
	* init.lisp (*source-file-types*, *compiled-file-types*): list
	strings, not pathnames
	(load): modified accordingly
	(search-file): EXTENSION is a list of strings, not pathnames
	* cfgamiga.lisp, cfgdos.lisp, cfgsunux.lisp, cfgunix.lisp:
	* cfgwin32.lisp: set *PARSE-NAMESTRING-DOT-FILE* to :NAME
	* compiler.lisp: do not use pathname literals
	(merge-extension): new function
	(compile-file-pathname-helper, compile-file): use it
	* constsym.d (*PARSE-NAMESTRING-DOT-FILE*): added
	* spvw.d (init_symbol_values): defvar it
	* defs1.lisp (load-logical-pathname-translations): pass strings,
	not pathnames, to SEARCH-FILE
	* io.d (pr_orecord): when compiling, print pathnames as
	#s(pathname) without #p""
	* pathname.d (split_name_type): respect *PARSE-NAMESTRING-DOT-FILE*
	* savemem.lisp (saveinitmem): do not use pathname literals

2002-03-17  Sam Steingold  <sds@gnu.org>

	* describe.lisp (describe-stream-flush-buffer): use
	WRITE-CHAR-SEQUENCE instead of WRITE-SEQUENCE for the benefit of
	dribbling when the output streams are reset so that it is not
	clear that they are character streams
	* dribble.lisp (dribble-reset): new function
	(dribble): reset *DRIBBLE-STREAM* to NIL after dribbling is over
	* savemem.lisp (saveinitmem): new option :verbose;
	call DRIBBLE-RESET in the temporary *DRIVER*:
	this fixes a bug in images saved after DRIBBLE
	Reported by Peter Wood <peter.wood@worldonline.dk>

2002-03-16  Joerg-Cyril Hoehle  <Joerg-Cyril.Hoehle@t-systems.com>

	* describe.lisp (describe-object): FOREIGN-POINTER is present
	when UNIX or DIR-KEY are present too;
	handle FOREIGN-FUNCTION only under FUNCTION, not undet T too, and
	print its full foreign type

2002-03-15  Sam Steingold  <sds@gnu.org>

	minor error reporting unification
	* lispbibl.d (fehler_too_many_args, fehler_too_few_args): declare
	* error.d (fehler_too_many_args, fehler_too_few_args): implement
	* foreign.d (FOREIGN-CALL-OUT): use them
	* eval.d (fehler_key_zuviel): removed
	(match_subr_key, match_cclosure_key): use fehler_too_many_args()
	(fehler_apply_[zuviel/zuwenig]): unchanged for now: it is unclear
	how to keep enough info for a good error message without taking a
	performane hit in apply_*()
	(fehler_apply_dotted): accept another argument -
	the arglist terminator

2002-03-15  Sam Steingold  <sds@gnu.org>

	Incorporated more of Joerg's suggestions
	* bindings/linuxlibc6/linux.lisp (substitution): added ffi:c-ptr-null
	(realpath, gethostname, getdomainname): using arrays of `character'
	as opposed to `char' results in strings being returned instead of
	byte arrays (char=uint8, character is a lisp CHARACTER)
	(gcvt): appears to work
	(sigaction-new): allow NULL (NIL) first arg
	(sigaction-query): removed (superseded by sigaction-new)
	* bindings/linuxlibc6/wrap.lisp (vec2string): obsolete, commented out
	(real-path, get-host-name, get-domain-name): do not use it
	(signal-valid-p): use sigaction-new

2002-03-15  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (expand-compiler-macro): do not expand compiler
	macros for functions declared NOTINLINE (3.2.2.1.3)

2002-03-14  Sam Steingold  <sds@gnu.org>

	* makemake.in (config.lisp): chmod +w before appending

2002-03-14  Sam Steingold  <sds@gnu.org>

	* defs1.lisp (require): fixed a deadly typo in the 2002-02-28 patch

2002-03-13  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 528886 ] (typep x (type-of x)) must => T (FFI)
	* type.lisp (foreign-function, foreign-variable, foreign-address)
	(foreign-pointer): new types
	(subtypep): FOREIGN-FUNCTION is a FUNCTION

2002-03-12  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 527380 ]: encoding :output-error-action :ignore broken
	* encoding.d (nls_wcslen): synch with nls_wcstombs() wrt
	ignoring errors (i.e., return the correct number of dest bytes)
	(nls_asciiext_wcslen): synch with nls_asciiext_wcstombs() wrt
	ignoring errors (i.e., return the correct number of dest bytes)
	(nls_wcstombs, nls_asciiext_wcstombs): handle ignored errors
	properly (and do not require the same SRC and DEST count)

2002-03-12  Sam Steingold  <sds@gnu.org>

	* configure (maybe_link): new function
	* makemake.in (config.status, configure, makemake.in)
	(unixconf.h.in, VERSION): new targets

2002-03-12  Sam Steingold  <sds@gnu.org>

	* unix.d (HAVE_DLOPEN) [UNIX_HPUX]: undef since dlopen() is
	broken on HP-UX without a patch

2002-03-11  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-warn, c-warn): CURRENT-FUNCTION does not
	necessarily return a function
	(form-name): new function - a short printed form representation
	(compile-file): use it for *COMPILE-PRINT* and form name that is
	passed to COMPILE-TOPLEVEL-FORM instead of '#:TOP-LEVEL-FORM

2002-03-10  Peter Burwood  <clisp@peterb.org.uk>

	* pathname.d (realpath) [UNIX_CYGWIN32]: neither dir nor symlink
	generate ENOTDIR

2002-03-10  Sam Steingold  <sds@gnu.org>

	The default foreign language is now ANSI C, not K&R C
	* foreign1.lisp (DEF-C-CALL-OUT, DEF-C-CALL-IN): deprecated
	(*foreign-language*): new variable
	(default-foreign-language): new exported macro (set it)
	(parse-c-function): use it
	* compiler.lisp (with-compilation-unit): bind it
	* init.lisp (load): ditto
	* bindings/linuxlibc5/linux.lisp, bindings/linuxlibc6/linux.lisp
	* postgresql632/postgresql.lisp, postgresql642/postgresql.lisp
	* regexp/regexp.lisp, wildcard/wildcard.lisp: use DEF-CALL-OUT
	instead of DEF-C-CALL-OUT and call DEFAULT-FOREIGN-LANGUAGE

2002-03-10  Sam Steingold  <sds@gnu.org>

	IPv6 portability suggested by Bruno
	* socket.d (s6_addr16): define if not defined yet
	(S6_ADDR16): accessor helper
	(ipv6_ntop): use it - a unified definition now

2002-03-09  Sam Steingold  <sds@gnu.org>

	more error unification
	* init.lisp (check-symbol): new function
	(defun): use it
	* foreign1.lisp (check-symbol): removed
	(DEF-C-TYPE, DEF-C-VAR, DEF-CALL-OUT, DEF-LIB-CALL-OUT)
	(DEF-CALL-IN, def-c-enum): use the new check-symbol
	* defstruct.lisp (defstruct): ditto
	(ds-symbol-or-error): removed

2002-03-09  Sam Steingold  <sds@gnu.org>

	autoconf tweaks for hp/ux and cygwin
	* autoconf/aclocal.m4 (CL_CANONICAL_HOST_CPU_FOR_FFCALL)
	(CL_CANONICAL_HOST_CPU): hppa2.0* --> hppa
	* configure.in (HAVE_GETHOSTENT): check for gethostent(3)
	* unixconf.h.in (HAVE_GETHOSTENT): added an #undef
	* socket.d (RESOLVE-HOST-IPADDR-INTERNAL): check HAVE_GETHOSTENT
	before calling gethostent()

2002-03-09  Peter Burwood  <clisp@peterb.org.uk>

	cygwin (u)alarm is adequate - do not re-implement it
	* unix.d (HAVE_UALARM): Remove as defined in unixconf.h.
	* unixaux.d (alarm, ualarm, sleep, usleep): Remove function as
	cygwin supplied function works.
	(do_alarm, do_sleep, interrupt_handler, DoInterruptible): Remove
	support functions.
	(alarm_thread, alarm_date, alarm_interval): Remove support variables.

2002-03-09  Peter Wood  <peter.wood@worldonline.dk>
	    Sam Steingold  <sds@gnu.org>

	added signal handling
	* linux.lisp: interface to <bits/sigset.h>, <bits/sigaction.h>
	and <signal.h>
	* wrap.lisp: many wrappers and examples

2002-03-08  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/wrap.lisp (real-path): linux:realpath does
	not return an integer flag
	(vec2string): use :END arg to CONVERT-STRING-FROM-BYTES instead
	of SUBSEQ
	* bindings/linuxlibc6/linux.lisp (realpath): return a pointer to
	C-ARRAY-MAX, not C-ARRAY
	(errno): a simple DEF-C-VAR, not a SYMBOL-MACRO
	Suggested by Joerg Hoehle

2002-03-08  Sam Steingold  <sds@gnu.org>

	renamed dirkey.lisp to dirkey1.lisp (like foreign1.lisp/foreign.d)
	since (compile-file "foo") clobbers foo.c (because of FFI)
	* init.lisp: "dirkey1", not "dirkey"
	* makemake.in (LPARTS): ditto
	* gettext/po/Makefile.devel (LISPSOURCES): ditto
	* dirkey1.lisp: renamed from dirkey.lisp

2002-03-08  Sam Steingold  <sds@gnu.org>

	* genclisph.d (nonreturning_function, SLONGLONG, ULONGLONG):
	fixed for MICROSOFT
	* makemake.in: create modules-related rules on non-UNIX systems
	($with_export_syscalls): do not add -lm to LIBS on win32
	Reported by <Joerg-Cyril.Hoehle@t-systems.com>

2002-03-06  Sam Steingold  <sds@gnu.org>

	POSIX:STREAM-LOCK - file stream locking interface based on flock(2)
	* stream.d (STREAM-LOCK): implemented
	* subr.d, subrkw.d (stream_lock): declared
	* constsym.d (stream_lock, Kshared): added
	* configure.in (HAVE_FLOCK): check for flock(2)
	(HAVE_SYS_WAIT_H): check for <sys/file.h> (flock(2) is declared there)
	* unixconf.h.in (HAVE_FLOCK, HAVE_SYS_WAIT_H): added the #undef's
	* posix.lisp (STREAM-LOCK) [:unix]: export

2002-03-06  Sam Steingold  <sds@gnu.org>

	infrastructure tweaks
	* makemake.in (XCFLAGS): handle --with-threads=FLAVOR by
	adding "-DMULTITHREAD -Dflavor"
	* configure (info_help): documented all options
	* Makefile.devel (upload): new target
	* autoconf/aclocal.m4 (CL_STRERROR, CL_FSYNC, CL_UALARM)
	(CL_USLEEP): removed trivial defuns
	* configure.in: call AC_CHECK_FUNCS for strerror(), fsync(),
	ualarm() and usleep() directly

2002-03-06  Sam Steingold  <sds@gnu.org>

	* foreign.d (FOREIGN-ADDRESS-VALUE): handle foreign pointers too

2002-03-04  Sam Steingold  <sds@gnu.org>

	* foreign1.lisp (to-c-typedecl): c-pointer --> void*, not char*
	* bindings/linuxlibc6/linux.lisp (flock): new call-out
	(fcntl2, fcntl3l, fcntl3f): 3 forms of fcntl()
	(ioctl-set-int, ioctl-get-int): 2 basic forms of ioctl()
	[there are many many more!]
	* bindings/linuxlibc6/wrap.lisp (check-res): new macro
	(real-path, get-host-name, get-domain-name): use it
	* modules/clx/new-clx/clx.f: NOTREACHED and thus NOTIMPLEMENTED
	and UNDEFINED require a semicolon

2002-03-03  Sam Steingold  <sds@gnu.org>

	* version.h: 2.28 is released

2002-03-05  Sam Steingold  <sds@gnu.org>

	* spvw_garcol.d (gc_mark): added down_weakkvt(), up_weakkvt(),
	and case_weakkvt statements that call them (fixes weak HTs on
	the TYPECODES platforms)

2002-03-05  Sam Steingold  <sds@gnu.org>

	* array.d (elt_nreverse): do not use SIMPLE_NREVERSE for simple
	strings since TheSstring != TheSvector (breaks NREVERSE on Alpha)

2002-03-03  Sam Steingold  <sds@gnu.org>

	Compilation on Alpha/Linux
	* dfloat.d: SAVE_NUM_STACK/RESTORE_NUM_STACK want {} around them
	* lispbibl.d (weakkvt_type): removed extra '|'
	* spvw_typealloc.d: one cannot use `obj' in allocate() portably
	(allocate_weakkvt_low): renamed from allocate_weakkvt()
	(allocate_weakkvt): call allocate_weakkvt_low()

2002-03-03  Sam Steingold  <sds@gnu.org>

	build process portability
	* makemake.in (data, clean1, ${TESTDIR}): use the appropriate slashes
	(RM) [win32]: set to 'del /q' (~ rm -f)
	(UTILDIR*, DOCDIR): define using SRCTOPDIR*+NEXT*, not sed(1)
	(PARENT_SRCTOPDIR_, PARENT_SRCTOPDIR_M): new vars
	(data, suite): use them so that `./configure /tmp/...' works
	* Makefile.devel (htmldoc): make split docs
	but do not copy impnotes.html to src/
	(SOURCES1): added clisp.lsm
	(acorn/pathname.txt): updated the regexp because of the
	src/pathname.d translation

2002-03-02  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 506098 ]: ICONV_CONST-related build problems
	* stream.d: check ICONV_CONST before using it
	* unixconf.h.in (ICONV_CONST): reverted the 2001-12-25 patch:
	use #undef, not #define; just like all other *_CONST macros

2002-03-02  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	* spvw_language.d (current_language_o): typo: argument should be
	`uintL', not `uint'

2002-03-02  Sam Steingold  <sds@gnu.org>

	* package.d (%SET-PACKAGE-LOCK): do not barf
	when the package list is empty

2002-03-02  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/linux.lisp (WEXITSTATUS, WTERMSIG, WSTOPSIG)
	(WIFEXITED, WIFSIGNALED, WIFSTOPPED, WCOREFLAG, WCOREDUMP)
	(W_EXITCODE, W_STOPCODE): added #define's from <bits/waitstatus.h>

2002-03-02  Sam Steingold  <sds@gnu.org>

	* modules/regexp/regexp.lisp (with-loop-split): fixed :START/:END

2002-02-27  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/linux.lisp (wait, waitpid): new C call-outs
	(provide "linux"): for (require "linux") in wrap.lisp

2002-03-01  Sam Steingold  <sds@gnu.org>

	error reporting unification
	* trace.lisp (error-function-name): new function
	(trace1): use it
	* cmacros.lisp (compiler-macro-function): ditto
	* error.d (fehler_funname_type, fehler_funname_source): new functions
	* lispbibl.d (fehler_funname_type, fehler_funname_source): declare
	* control.d (function): use fehler_funname_source()
	* eval.d (eval1): ditto
	(apply, funcall): use fehler_funname_type()

2002-02-02  Sam Steingold  <sds@gnu.org>

	* trace.lisp (force-cclosure): take FDEFINITION when compiling
	(%local-set): COMPILE NEW-DEF and take its FDEFINITION
	when NEW-DEF is not compiled

2002-02-28  Barry Fishman  <bfishman@users.sf.net>

	* modules/clx/new-clx/clx.f (CONVERT-SELECTION): clean up the stack
	(SELECTION-NOTIFY): added window notification

2002-02-28  Sam Steingold  <sds@gnu.org>

	* defs1.lisp (require): push *load-truename* on *load-paths*
	* compiler.lisp (c-REQUIRE): push *compile-file-truename*
	on *load-paths*

2002-02-28  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-form): fixed a bug: EXPAND-COMPILER-MACRO
	can return an atom

2002-02-28  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/linux.lisp (substitution): map DEFCONSTANT

2002-02-28  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-write-lib): bind *PRINT-SYMBOLS-LONG* when
	writing *.lib files, just like with *.fas files

2002-02-27  Sam Steingold  <sds@gnu.org>

	implemented weak hash-tables
	* hashtabl.d (MAKE-HASH-TABLE): accept :WEAK keyword argument
	(rehash, hash_store, REMHASH, MAPHASH, HASH-TABLE-ITERATE)
	(CLASS-TUPLE-GETHASH): use ht_kvtable()/kvtable_data()
	(hash_lookup): remove obsolete key/value from a weak HT
	(prepare_resize): accept third argument `weak'
	(resize): handle weak hash-tables
	(HASH-TABLE-WEAK-P, %SET-HASH-TABLE-WEAK-P): implemented
	(sxhash_atom): handle WeakKVT
	* constobj.d (all_weakkvtables, hs_weakkvt): new objects
	(version): bumped because of the MAKE-HASH-TABLE change
	* constsym.d (hash_table_weak_p, set_hash_table_weak_p, Kweak)
	(weak_kvtable): added
	* init.lisp (hash-table-weak-p, weak-key-value-table):
	export from EXT
	* io.d (pr_weakkvt): new pr_routine_t
	(prin_object_dispatch): use it to print a Weak KVT
	(pr_kvtable): handle weak KVTs
	* lispbibl.d (weakkvt_type, case_weakkvt, Rectype_WeakKVT): added
	(ht_weak_p, kvtable_data, ht_kvt_data): new macros
	(weakkvt_t): new lrecord
	(TheSarray, TheVarobject, ThePointer): added weakkvt_type
	(Weakkvt_length, TheWeakKVT, weakkvtp, case_Rectype_WeakKVT_above):
	concomitant macros
	(if_recordp): Rectype_WeakKVT is not a record
	(allocate_weakkvt): declare
	(map_hashtable, map_hashtable_nogc): accomodate weak hash-tables
	(case_array, case_Rectype_array_above): added WeakKVT
	* places.lisp (hash-table-weak-p): added defsetf
	* predtype.d (CLASS-OF, TYPE-OF, heap_statistics_mapper):
	handle Weak KVT
	(enum_hs_weakkvt): added to the enum
	* spvw.d (init_object_tab_1): init O(all_weakkvtables)
	* spvw_garcol.d (gar_col_normal): mark & update O(all_weakkvtables)
	(gar_col_compact, move_conses): update O(all_weakkvtables)
	* spvw_genera1.d (walk_area, build_old_generation_cache): added
	case_weakkvt
	* spvw_global.d (init_mem_heaptypes): handle Weak KVT
	* spvw_memfile.d (savemem, loadmem_from_handle):
	update O(all_weakkvtables)
	* spvw_objsize.d (objsize, init_objsize_table): handle case_weakkvt
	* spvw_typealloc (allocate_weakkvt): implemented
	* spvw_update.d (update_weakkvtables, update_weakkvtables_mod): added
	* subr.d (make_hash_table): added :WEAK
	(hash_table_weak_p, set_hash_table_weak_p): added
	* subrkw.d (make_hash_table): added :WEAK
	* version.h, VERSION: bumped to 2.27.3

2002-02-26  Sam Steingold  <sds@gnu.org>

	* error.d (signal_and_debug): avoid a GCC warning
	(end_error): abort(), not exit() -- for debugging

2002-02-26  Sam Steingold  <sds@gnu.org>

	lib dir can now be changed at run-time
	* constsym.d, subr.d (set_lib_directory); added
	* constobj.d (lib_dir): new object
	* pathname.d (LIB-DIRECTORY): use it
	(SET-LIB-DIRECTORY): set it (new function)
	* spvw.d (main): set it from argv_lisplibdir
	* _clisp.html, _clisp.1: document that
	* places.lisp (*lib-directory*): new symbol-macro
	* init.lisp (*lib-directory*): export it from CUSTOM
	* describe (clisp-data-file): new function
	(unicode-data-file): removed
	(unicode-attributes-line): use CLISP-DATA-FILE
	instead of UNICODE-DATA-FILE
	* clhs.lisp (clhs-file): removed
	(clhs): use CLISP-DATA-FILE instead of CLHS-FILE
	* makemake.in: data files, like clhs.txt and UnicodeData.txt,
	are now in $(lisplibdir)/data on all platforms

2002-02-25  Sam Steingold  <sds@gnu.org>

	Moved language-dependent constants out of constobj.d
	* constobj.d (LISPOBJ_L, LISPOBJ_LS): removed
	* lispbibl.d (CLSTEXT, CLOTEXT): added
	(OGETTEXT, OL, OLS, localized_string, localized_object): removed
	(GNU_GETTEXT): do not define unless UNICODE is defined too
	* spvw_language.d (CLSTEXT, CLOTEXT): added
	(localized_string, localized_object): removed
	* debug.d, error.d, flo_rest.d, misc.d, package.d, pathname.d
	* realelem.d, spvw.d: use CLSTEXT() instead of OLS()
	and CLOTEXT() instead of OL()
	* misc.d, spvw_memfile.d (software_version_string): removed the
	cache (language-dependent)
	* i18n.d (TEXT): use CLSTEXT() instead of localized_string()
	* gettext/po/clisp-xgettext: accomodate these changes: search for
	CLSTEXT and CLOTEXT in *.d and for TEXT inin *.lisp
	* gettext/po/Makefile.devel (GMSGFMT): set to msgfmt, since GNU
	gettext does not install gmsgfmt, and require GNU gettext
	(clean): remove tmp

2002-02-25  Sam Steingold  <sds@gnu.org>

	* clhs.lisp (clhs): unlock COMMON-LISP before reading clhs-file
	(read-from-file): added PACKAGE keyword argument

2002-02-23  Sam Steingold  <sds@gnu.org>

	minor code cleanups
	* record.d (obj_in_list): new function
	(structure_up, %STRUCTURE-TYPE-P, keyword_test): use it
	(slot_in_arglist): new function
	(%SHARED-INITIALIZE, %REINITIALIZE-INSTANCE)
	(do_initialize_instance): use it

2002-02-23  Sam Steingold  <sds@gnu.org>

	* record.d (%REINITIALIZE-INSTANCE): fixed a crash in repeated
	REINITIALIZE-INSTANCE calls

2002-02-22  Sam Steingold  <sds@gnu.org>

	UI language can now be changed at run time
	* constobj.d (current_language_cache): removed
	(current_language): language-independent object now
	* constsym.d (german, french, spanish, dutch): added
	* constsym.d, subr.d (language): removed
	(set_current_language, text): added
	* encoding.d (init_encodings): split into init_encodings_1() and
	init_encodings_2() to accomodate non-ASCII symbol names
	* i18n.d (SET-CURRENT-LANGUAGE): new function
	(LANGUAGE): replaced with TEXT
	* lispbibl.d (init_encodings_1, init_encodings_2):
	replace init_encodings()
	(init_language): global now (called by SET-CURRENT-LANGUAGE)
	* spvw.d (init_symbol_tab_2): accomodate non-ASCII symbols
	(initmem): call init_encodings_1() and init_encodings_2()
	around init_symbol_tab_2()
	(main): init O(current_language)
	* spvw_language.d (current_language_o): new function:
	map language number to its symbol name
	(init_language): use it to init O(current_language)
	* spvw_memfile.d (loadmem_from_handle): removed
	O(current_language_cache)
	* places.lisp (*CURRENT-LANGUAGE*): define
	* init.lisp (*CURRENT-LANGUAGE*): export
	* clos.lisp, affi1.lisp, foreign1.lisp: import SYS::TEXT
	* french.lisp: spell FRANCAIS with a cedilla
	* makemake.in (LPARTS): include french.lisp only with_unicode
	* international.lisp: export ENGLISH here
	* affi1.lisp, amigasock.lisp, backquote.lisp, beossock.lisp
	* cfgacorn.lisp, cfgamiga.lisp, cfgdos.lisp, cfgsunux.lisp
	* cfgunix.lisp, cfgwin32.lisp, clos.lisp, cmacros.lisp,
	* compiler.lisp, condition.lisp, defmacro.lisp, defs1.lisp
	* defs2.lisp, defstruct.lisp, describe.lisp, dirkey.lisp
	* disassem.lisp, dribble.lisp, edit.lisp, floatprint.lisp
	* foreign1.lisp, format.lisp, init.lisp, international.lisp
	* loop.lisp, macros1.lisp, macros2.lisp, macros3.lisp
	* places.lisp, pprint.lisp, query.lisp, reploop.lisp, rexx1.lisp,
	* room.lisp, runprog.lisp, screen.lisp, trace.lisp, type.lisp,
	* xcharin.lisp: use TEXT instead of ENGLISH

2002-02-22  Sam Steingold  <sds@gnu.org>

	* install.lisp (*clisp-base-cmd*, *clisp-cmd*): surround
	pathnames with quotes to accomodate "c:/Program Files/CLISP/" &c
	(*clisp-home*): convert backslashes to forward slashes

2002-02-21  Sam Steingold  <sds@gnu.org>

	minor code cleanups
	* debug.d (read_form): use cint_white_p()
	* pathname.d (SHELL): use fehler_string()
	* package.d (MAKE-SYMBOL): ditto
	(package_lookup_ext, package_lookup_int, package_lookup): new macros
	(inherited_lookup, find_external_symbol, find_symbol)
	(shadowing_import, shadow, unintern, import, use_package_aux)
	(FIND-ALL-SYMBOLS): use them
	(prepare_query_user): new function
	(query_user, export, use_package, correct_packname): use it
	(UNINTERN): use fehler_symbol()
	* predtype.d (FIND-CLASS): ditto
	* lisparit.d (!): use fehler_posfixnum()

2002-02-21  Stefan Kain  <stefan.kain@freenet.de>

	* package.d: translated all comments
	* constobj.d: ditto

2002-02-20  Sam Steingold  <sds@gnu.org>

	* makemake.in (distrib): include the Emacs-Lisp files in the
	binary distribution: indentation and coding are included,
	but d-mode is excluded

2002-02-20  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 515604 ]: (EVAL-WHEN (COMPILE)) no longer automatically
	writes to *.lib; you need EVAL-WHEN-COMPILE or both LOAD and COMPILE
	* compiler.lisp (c-write-lib): new function
	(c-eval-and-write-lib): renamed from c-eval-when-compile
	(compile-toplevel-form): respect the renaming
	(eval-when-compile): new macro: call C-EVAL-AND-WRITE-LIB at
	compile time
	(c-GLOBAL-FUNCTION-CALL): use it instead of (EVAL-WHEN (COMPILE))
	(c-EVAL-WHEN): write to *lib only when _both_ LOAD and COMPILE
	are specified; COMPILE-ONCE-ONLY is eliminated
	* init.lisp (eval-when-compile): added a bootstrap definition
	(defun): use EVAL-WHEN-COMPILE instead of (EVAL-WHEN (COMPILE))
	* clos.lisp (defmethod, defgeneric): ditto
	* macros1.lisp (defconstant): ditto
	* foreign1.lisp (DEF-LIB-CALL-OUT): ditto
	(DEF-CALL-OUT): use COMPILE situation instead of COMPILE-ONCE-ONLY
	and EVAL-WHEN-COMPILE instead of (EVAL-WHEN (COMPILE))
	(DEF-C-VAR, DEF-CALL-IN): use COMPILE situation
	instead of COMPILE-ONCE-ONLY

2002-02-17  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	smooth Ctrl-C, Ctrl-Break handling not depending on whether
	interrupted thread is alive when temp_interrupt_handler executes
	* win32aux.d: (interruptible_abort_code): new variable holds
	1+CtrlType after temp_interrupt_handler works, zero while
	temp_interrupt_handler is not called.
	(temp_interrupt_handler): check whether thread is alive before
	terminating it. Save result in new variable instead of use of
	thread exit code.
	(DoInterruptible): use interruptible_abort_code.

2002-02-18  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/wrap.lisp: require "linux" to avoid warnings

2002-02-13  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc6/linux.lisp (getdomainname, setdomainname)
	(gethostname, sethostname, mkstemp, realpath): uncommented and fixed
	* bindings/linuxlibc6/wrap.lisp: new file
	* bindings/linuxlibc6/Makefile, bindings/linuxlibc6/link.sh:
	added wrap.lisp

2002-02-12  Sam Steingold  <sds@gnu.org>

	* lisparit.d (init_arith): define DOUBLE-FLOAT-EPSILON and
	DOUBLE-FLOAT-NEGATIVE-EPSILON differently on linux-x86
	because of the 80-bit floating registers

2002-02-12  Sam Steingold  <sds@gnu.org>

	* package.d (%SET-PACKAGE-LOCK): call test_package_arg() on the
	single arg

2002-02-11  Sam Steingold  <sds@gnu.org>

	* stream.d (strip_white): strip only the CR, not all whitespace,
	since it breaks READ-LINE on terminals
	Reported by Peter Wood <peter.wood@worldonline.dk>

2002-02-11  Sam Steingold  <sds@gnu.org>

	ANSI CL 11.1.2.1.2 #9 forbids tracing in COMMON-LISP
	* trace.lisp (trace1, untrace1): forbid tracing in locked packages
	* init.lisp (check-redefinition): handle (SETF function-name)

2002-02-11  Sam Steingold  <sds@gnu.org>

	fixed the (compile nil (lambda () (flet (())))) bug
	* compiler.lisp (symbol-suffix): use just the suffix for NIL funname

2002-02-5  Sam Steingold  <sds@gnu.org>

	* foreign1.lisp, affi1.lisp: moved *FOREIGN-ENCODING* to the
	CUSTOM package, as described in the impnotes

2002-02-09  Sam Steingold  <sds@gnu.org>

	* makemake.in: include impnotes.css in the distribution along
	with impnotes.html

2002-02-02  Bruno Haible  <bruno@clisp.org>

	* charstrg.d (name_char): Fix endless loop when string = "A_A".

2002-02-03  Sam Steingold  <sds@gnu.org>

	fixed a bug: (defmethod foo ((x (eql 1))) x)
	* package.d (CHECK-PACKAGE-LOCK): handle non-package third
	argument to mean "unlocked"
	* init.lisp (check-redefinition): (EQL X): when X is not a
	symbol, pass NIL as the package

2002-02-01  Sam Steingold  <sds@gnu.org>

	* spvw_update.d (update_weakpointer): new macro
	(update_weakpointers, update_weakpointers_mod): use it

2002-02-01  Sam Steingold  <sds@gnu.org>

	* io.d (pr_array_nil): print array address too
	(pr_hex6_obj): save the object
	(pr_orecord): print HASH-TABLE with TEST and COUNT
	even when *PRINT-ARRAY* is NIL
	* constobj.d (printstring_hash_table): removed

2002-01-31  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (hashtable_test): new macro
	* io.d (pr_orecord): use it
	* hashtable.d (HASH-TABLE-TEST): ditto

2002-01-31  Sam Steingold  <sds@gnu.org>

	* record.d (mk_weakpointer): new local helper function
	(allocate_weakpointer): new global function, uses mk_weakpointer()
	(MAKE-WEAK-POINTER): use mk_weakpointer()
	* lispbibl.d (allocate_weakpointer): declare as function, not macro
	(weakpointer_broken_p): new macro
	* io.d (pr_orecord): use it

2002-01-30  Sam Steingold  <sds@gnu.org>

	* io.d (pr_orecord): print EQUALP hash tables correctly
	(pr_kvtable): new function, used by pr_orecord()

2002-01-29  Sam Steingold  <sds@gnu.org>

	* hashtabl.d (check_hashtable): new macro
	(GETHASH, PUTHASH, REMHASH, MAPHASH, CLRHASH)
	(HASH-TABLE-REHASH-THRESHOLD, HASH-TABLE-TEST, HASH-TABLE-ITERATOR)
	(CLASS-GETHASH, CLASS-TUPLE-GETHASH): use it

2002-01-29  Stefan Kain  <stefan.kain@freenet.de>

	* hashtabl.d: translated all comments

2002-01-27  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 509073 ]
	* compiler.lisp (expand-compiler-macro): pass to
	COMPILER-MACRO-FUNCTION only function names

2002-01-27  Sam Steingold  <sds@gnu.org>

	code simplifications
	* foreign.d (check_cc_match): new function
	(convert_function_to_foreign, convert_function_from_foreign): use it
	(fehler_eltype_zero_size): new function
	(convert_from_foreign, walk_foreign_pointers): use it

2002-01-27  Sam Steingold  <sds@gnu.org>

	added FFI:FOREIGN-ADDRESS-NULL to check for NULL pointers
	* foreign.d (FOREIGN-ADDRESS-VALUE): new function
	* subr.d, constsym.d (foreign_address_value): added
	* function1.lisp (foreign-address-null): new exported function

2002-01-26  Sam Steingold  <sds@gnu.org>

	* .clisp-full: new file
	* makemake.in: treat .clisp-full just like .clisp

2002-01-24  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 506105 ]: check semi-simple vectors&strings for overflow
	* array.d (fehler_extension): new function
	(VECTOR-PUSH-EXTEND): use it
	(fehler_dim_type): moved before semi-simple vectors&strings
	(make_ssstring, make_ssbvector): check len <= arraysize_limit_1
	(ssstring_push_extend, ssstring_extend, ssbvector_push_extend):
	check for overflow

2002-01-23  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (SEMI_SIMPLE_DEFAULT_SIZE): new constant
	* io.d (get_buffers, FORMAT-TABULATE): use it
	* stream.d (make_string_output_stream)
	(MAKE-BUFFERED-OUTPUT-STREAM): ditto

2002-01-23  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (OBJECT_OUT): new macro
	* spvw_debug.d (object_out): return obj

2002-01-23  Sam Steingold  <sds@gnu.org>

	* array.d (ssstring_extend_low): new function
	(ssstring_push_extend, ssstring_extend): use it

2002-01-22  Sam Steingold  <sds@gnu.org>

	* predtype.d (with_gc_statistics) [DEBUG_SPVW]: print a message
	when a GC is being done

2002-01-22  Sam Steingold  <sds@gnu.org>

	ANSI CL 11.1.2.1.2 #19 forbids methods with locked functions and
	specializers - check that too
	* package.d (CHECK-PACKAGE-LOCK): package may be a list of
	packages
	* init.lisp (check-redefinition): symbol maybe a method spec - a
	list of function name and specializers
	* clos.lisp (analyze-method-description): call CHECK-REDEFINITION

2002-01-21  Sam Steingold  <sds@gnu.org>

	SOCKET-STATUS now works on all handle streams, whose handles are
	acceptable to the underlying OS's select system call
	* stream.d (stream_handles): work on many streams and return 2
	handles (renamed from socket_handle)
	(handle_set, handle_isset, SOCKET-STATUS): modified accordingly
	(ChannelStream_ihandle, ChannelStream_ohandle): new macros

2002-01-18  Sam Steingold  <sds@gnu.org>

	* stream.d (stream_char_p): removed (good only for "basic streams")
	(handle_isset, stream_reset_eltype): look at strm_eltype directly

2002-01-18  Sam Steingold  <sds@gnu.org>

	support #! UNIX scripts on WIN32 too
	* io.d, constsym.d, spvw.d, subr.d (UNIX-EXECUTABLE-READER):
	define on WIN32_NATIVE too

2002-01-18  Sam Steingold  <sds@gnu.org>

	* stream.d (SOCKET-STATUS): fix a GC safety bug
	(handle_isset): mark as GC-unsafe
	Reported by Todd Sabin <tas@webspan.net>

2002-01-18  Sam Steingold  <sds@gnu.org>

	* stream.d (FILE-POSITION): work on any stream, not just an open
	file stream, as per ANSI CL

2002-01-17  Sam Steingold  <sds@gnu.org>

	* stream.d (read-byte): respect the unread chars
	(stream_reset_eltype): new function - rectify the
	ignore_next_LF lossage when changing STREAM-ELEMENT-TYPE
	(BUILT-IN-STREAM-SET-ELEMENT-TYPE, SET-STREAM-EXTERNAL-FORMAT): use it
	(resolve_synonym_stream): new function
	(TERMINAL-RAW, check_open_file_stream): use it

2002-01-16  Sam Steingold  <sds@gnu.org>

	* inspect.lisp (close) [html-stream-out]: new method
	(*with-html-output-doctype*): new user variable, defaults to XHTML
	(with-html-output): use it; close the HTML stream too
	(crlf): removed (we create an :EXTERNAL-FORMAT :DOS socket)
	(with-http-output): new keyword args: RETURN-NAME and RETURN-CODE
	do not call CRLF, rely on the socket to provide proper EOL
	(http-error): new function
	(http-command): reconnect when a KEEP-ALIVE connection times out;
	handle invalid requests (e.g., for favicon.ico) and ":"->"%3a"
	[FIXME: disabled KEEP-ALIVE connections because it appears that
	 content length in WITH-HTTP-OUTPUT is computed incorrectly]
	(inspect-frontend) [http]: handle NIL ID returned by HTTP-COMMAND
	due to an invalid request

2002-01-16  Sam Steingold  <sds@gnu.org>

	* describe.lisp (describe-stream-flush-buffer, stream-line-column)
	(stream-start-line-p): check the return value of
	SYS::LINE-POSITION (it may be NIL!)

2002-01-15  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (OGETTEXT): mark as GC-unsafe
	* package.d (cerror_package_locked): fixed a GC-safety bug

2002-01-15  Sam Steingold  <sds@gnu.org>

	* defs2.lisp (with-standard-io-syntax): bind
	SYSTEM::*PRIN-LINE-PREFIX* to NIL

2002-01-15  Sam Steingold  <sds@gnu.org>

	* describe.lisp (describe): flush the pending output _before_
	increasing indentation
	(describe-object) [symbol]: handle unbound special variables too

2002-01-14  Sam Steingold  <sds@gnu.org>

	* defs1.lisp (*system-package-list*): new custom variable
	(without-package-lock): new extension macro
	* package.d (%SET-PACKAGE-LOCK): allow multiple packages
	* savemem.lisp (saveinitmem): default LOCKED-PACKAGES
	to *SYSTEM-PACKAGE-LIST*

2002-01-14  Sam Steingold  <sds@gnu.org>

	add :SCREEN to *FEATURES* when the "SCREEN" package is present
	* init.lisp: use #+SCREEN instead of (find-package "SCREEN")
	* spvw.d (*features*): add :SCREEN #ifdef SCREEN

2002-01-12  Sam Steingold  <sds@gnu.org>

	* trace.lisp (trace1): made macros traceable again (broken since
	the 2000-06-11 patch introducing MACRO type)
	(fdefinition-local): removed (replaced with LOCAL)
	(local): new macro (SETF-able)
	(local-function-name-p): new function
	* init.lisp (local): export from EXT

2002-01-11  Sam Steingold  <sds@gnu.org>

	close all inaccessible PIPE and SOCKET streams on GC, like file streams
	* stream.d (add_to_open_streams): new function
	(make_file_stream, make_terminal_stream, make_printer_stream):
	 use it instead of in-line code
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM, MAKE-PIPE-IO-STREAM)
	(SOCKET-ACCEPT, SOCKET-CONNECT, SYS::MAKE-SOCKET-STREAM):
	 call add_to_open_streams() too
	Reported by Todd Sabin <tas@webspan.net>

2002-01-10  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): --version: print *FEATURES*

2002-01-10  Sam Steingold  <sds@gnu.org>

	* package.d (cerror_package_locked): error-format-string: print
	func with ~A so that "DEFUN/DEFMACRO" is printed without quotes

2002-01-10  Sam Steingold  <sds@gnu.org>

	fixed a bug in the 2001-11-09 patch
	* pathname.d (CD): slashp expects a chart, not cint

2002-01-10  Sam Steingold  <sds@gnu.org>

	fixed (format nil "~2f" 1234567.1234) => "1234567."
	* format.lisp (format-float-for-f): pass 0 as DMIN to
	FORMAT-FLOAT-TO-STRING

2002-01-09  Sam Steingold  <sds@gnu.org>

	notice function redefinitions again
	* compiler.lisp (c-DEFUN): accept optional argument TYPE, to
	distinguish between DEFUN and DEFMETHOD (CURRENT-FUNCTION for
	top-level forms does not return anything useful)
	* clos.lisp (defmethod, defgeneric): pass the 4th argument to c-DEFUN

2002-01-09  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 501166 ]
	* pathname.d (SUBDIR_PUSHSTACK): check for non-string subdir
	elements, do not return
	(subdir_namestring_parts): modified accordingly
	(use_default_dir): call simplify_directory
	(directory_search_scandir, directory_search): use SUBDIR_PUSHSTACK

2002-01-09  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (signature-to-list): do not intern ARG# symbols
	in SYSTEM
	(c-DEFUN): print signatures with ~A, not ~S, to avoid package prefixes

2002-01-08  Sam Steingold  <sds@gnu.org>

	* deprecated.lisp (deprecate): added optional DEF argument

2002-01-08  Sam Steingold  <sds@gnu.org>

	Implemented arbitrary package locking
	* lispbibl.d (Package): use bit(1) for package lock
	(mark_pack_locked, mark_pack_unlocked, pack_locked_p): new macros
	* package.d (cerror_package_locked): new function
	(check_pack_lock, safe_check_pack_lock): new macros
	(intern, shadowing_import, shadow, unintern, unexport, export)
	(use_package, RENAME-PACKAGE): check pakcage lock
	(PACKAGE-LOCK, %SET-PACKAGE-LOCK, CHECK-PACKAGE-LOCK): implemented
	* subr.d, constsym.d (package_lock, set_package_lock)
	(check_package_lock): added
	* init.lisp (package-lock): export from EXT
	(exported-lisp-symbol-p): removed
	(fbound-string): do not barf on non-fbound symbols
	(check-redefinition): new function
	(remove-old-definitions): use CHECK-REDEFINITION
	* places.lisp (check-accessor-name): new function
	(define-setf-expander, defsetf): use CHECK-ACCESSOR-NAME and
	CHECK-REDEFINITION
	(package-lock): defsetf to SYSTEM::%SET-PACKAGE-LOCK
	* clos.lisp ((setf find-class)): use SYS::CHECK-REDEFINITION
	* savemem.lisp (saveinitmem): new argument: :locked-packages
	to lock the system packages when saving the final image
	* os2/lispinit.in: call saveinitmem
	* makemake.in (lispinit.mem): call lispinitmem (not %lispinitmem)

2002-01-07  Sam Steingold  <sds@gnu.org>

	* symbol.d (Symbol_function_checked): use fehler_undef_function()

2002-01-07  Sam Steingold  <sds@gnu.org>

	made problem reporting work with WITH-COMPILATION-UNIT
	* compiler.lisp (c-source-point): new structure (instead of a cons)
	(c-source-location): accept a 3rd optional argument - file,
	defaults to *compile-file-truename*
	(c-source-point): removed the function
	(c-source-point-location): pass all slots of a C-SOURCE-POINT
	to C-SOURCE-LOCATION
	(note-function-used, c-DEFUN): use MAKE-C-SOURCE-POINT
	instead of C-SOURCE-POINT
	(match-known-unknown-functions): bind *COMPILE-FILE-TRUENAME* too

2002-01-07  Sam Steingold  <sds@gnu.org>

	* trace.lisp (fdefinition-local): new function for extracting
	local (LABELS & FLET) functions

2002-01-06  Sam Steingold  <sds@gnu.org>

	* pathname.d (assure_dir_exists) [WIN32_NATIVE]: fixed a bug
	introduced on 2001-08-29 (mind tolerantp!)

2002-01-06  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (note-function-used, c-report-problems): report
	the replacements for the deprecated functions
	* deprecated.lisp (deprecate): new function - use throughout

2002-01-06  Sam Steingold  <sds@gnu.org>

	* makemake.in (RM) [win32]: prepend '-'
	* ffcall/Makefile.msvc: prepend '-' before 'del'
	* ffcall/avcall/Makefile.msvc: ditto
	* ffcall/callback/Makefile.msvc: ditto
	* ffcall/callback/trampoline_r/Makefile.msvc: ditto
	* ffcall/callback/vacall_r/Makefile.msvc: ditto
	* ffcall/trampoline/Makefile.msvc: ditto
	* ffcall/vacall/Makefile.msvc: ditto
	* libiconv/Makefile.msvc: ditto
	* libiconv/lib/Makefile.msvc: ditto
	* libiconv/libcharset/Makefile.msvc: ditto
	* libiconv/libcharset/lib/Makefile.msvc: ditto
	* libiconv/src/Makefile.msvc: ditto
	* libiconv/tests/Makefile.msvc: ditto
	* sigsegv/Makefile.msvc: ditto
	From Indrayana Rustandi <i_rustandi@yahoo.com>

2002-01-06  Sam Steingold  <sds@gnu.org>

	finished the 2001-09-24 (functionp) patch
	* control.d (FUNCTION): use the functionp() macro
	* eval.d (coerce_function): ditto
	* sequence.d (seq_boolop): ditto
	* symbol.d (%PUTD): ditto

2002-01-05  Sam Steingold  <sds@gnu.org>

	SOCKET-STREAM-PEER et al now work for buffered sockets too
	* stream.d (SocketChannel): new macro
	(SOCKET-SERVER, socket_handle, publish_host_data)
	(SOCKET-STREAM-HANDLE): use it
	Reported by Todd Sabin <tas@webspan.net>

2002-01-05  Sam Steingold  <sds@gnu.org>

	* stream.d (BufferedStream_buffer_address): new macro, use it
	along with BufferedStream_channel() and BufferedStream_buffer()

2002-01-05  Sam Steingold  <sds@gnu.org>

	some new macros for brevity
	* pathname.d (WIN32_ERROR_NOT_FOUND) [WIN32_NATIVE]: new macro
	(check_noname, check_notdir, check_delete_open): new macros

2002-01-03  Stefan Kain  <stefan.kain@freenet.de>

	* pathname.d: translated all comments

2002-01-03  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (OGETTEXT): new macro
	* gettext/po/clisp-xgettext: recongnize the new OGETTEXT macro

2001-12-26  Stefan Kain  <stefan.kain@freenet.de>

	* trace.lisp: translated all comments

2002-01-01  Todd Sabin  <tas@webspan.net>
	    Sam Steingold  <sds@gnu.org>

	* stream.d (BUILT-IN-STREAM-SET-ELEMENT-TYPE): fixed a crash for
	`strmtype_twoway_socket'

2002-01-01  Sam Steingold  <sds@gnu.org>

	unified some error messages
	* pathname.d (fehler_file_exists): no args: get caller from
	subr_self and pathname from STACK_0 (a la fehler_file_not_exists)
	(rename_file): modified accordingly
	(open_file): use fehler_file_not_exists() and fehler_file_exists()

2002-01-01  Sam Steingold  <sds@gnu.org>

	* init.lisp (sys::remove-old-definitions): CERROR for exported CL
	symbols even when there is no definition

2001-12-25  Sam Steingold  <sds@gnu.org>

	make DESCRIBE break long lines
	* describe.lisp (describe-stream): new slot BUFFER (word-buffered)
	(describe-stream-flush-buffer): new function to flush the BUFFER
	(stream-write-char, stream-finish-output, stream-force-output):
	use it
	(stream-line-column, stream-start-line-p, stream-clear-output):
	account for BUFFER
	(describe-object): when printing the external symbols of a
	package, do not fill: DESCRIBE-STREAM does it for us
	(describe1): FINISH-OUTPUT when done to flush the buffer
	(describe-signature): terminate with a period

2001-12-25  Sam Steingold  <sds@gnu.org>

	* makemake.in (MAKE): set from the environment variable, if any

2001-12-25  Sam Steingold  <sds@gnu.org>

	The 2001-08-25 patch (autoconf-2.52 upgrade) broke FreeBSD build.
	This patch appears to fix it.
	* unixconf.h.in (ICONV_CONST): use #define, not undef

2001-12-24  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-FLET, c-FUNCTION-MACRO-LET, traverse-anode):
	use NEW-CONST

2001-12-21  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-DIRECT-FUNCTION-CALL): added a flet
	COMMUTE-WITH-REST-P (a minor simplification)

2001-12-20  Sam Steingold  <sds@gnu.org>

	optimize away COMPLEMENT in :TEST (COMPLEMENT ...)
	* compiler.lisp (c-TEST/TEST-NOT): new function
	(c-form-table): map the functions with :TEST/:TEST-NOT keys
	listed in <http://www.lisp.org/HyperSpec/Body/sec_1-8-2.html>
	to c-TEST/TEST-NOT

2001-12-20  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-seqop): do not need to check whether the user
	rebound NOT (this optimization does not depend on it)

2001-12-20  Sam Steingold  <sds@gnu.org>

	* makemake.in (unixconf.h): a separate target
	(makemake): recreate only makemake, not the whole configuration

2001-12-20  Sam Steingold  <sds@gnu.org>

	* type.lisp (canonicalize-type): canonicalize EXTENDED-CHAR
	to (OR), not to NIL

2001-12-20  Sam Steingold  <sds@gnu.org>

	* compiler.lisp: Minor code tweaks and simplifications:
	(analyze-lambdalist): new MACROLET macro PUSH-OPT
	(closuredummy-add-stack-slot): new function
	(c-LAMBDABODY, c-LET/LET*, c-MULTIPLE-VALUE-BIND, c-FLET)
	(c-LABELS, c-FUNCTION-MACRO-LET, c-GENERIC-FLET, c-GENERIC-LABELS)
	(c-FUNCALL-INLINE): use it
	(lambda-form-p): new function
	(c-form, inline-callable-function-lambda-p, c-FUNCTION): use it
	(shift-vars): new function
	(c-MAP-on-CARs, c-MAP-on-LISTs, c-MAPC, c-MAPL): use it
	(c-FLET, c-LABELS, c-FUNCTION-MACRO-LET, c-GENERIC-FLET)
	(c-GENERIC-LABELS): new macro GET-ANODE in their common macrolet
	(inlinable-function-operation-form-p): new function
	(c-FUNCTION-CALL, c-APPLY, c-seqop): use it

2001-12-20  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (version) [CROSS]: updated (19071996 --> 20010726)

2001-12-20  Arseny Slobodjuck  <ampy@ich.dvo.ru>

	* lispbibl.d (OS_error): use asciz_out_s(), not asciz_out_1(),
	to output a string

2001-12-19  Stefan Kain  <stefan.kain@freenet.de>

	* compiler.lisp: translated all comments

2001-12-17  Sam Steingold  <sds@gnu.org>

	* type.lisp (canonicalize-type): extensive treatment of AND/OR
	and NOT (with flattening and special cases)
	(subtypep): a hack for NOT added; corrected T & NIL special cases

2001-12-17  Sam Steingold  <sds@gnu.org>

	* predtype.d (expand_deftype): check that (CAR TYPE-SPEC) is a
	symbol before calling GET

2001-12-12  Sam Steingold  <sds@gnu.org>

	simplify pathname directory lists
	* pathname.d (subst_coerce_normal_ss, subst_up_dotdot): folded
	into simplify_directory()
	(simplify_directory): new function: coerce to normal simple
	strings, replace ".." with :UP and collapse "foo/../"
	(parse_logical_pathnamestring, PARSE-NAMESTRING, merge_dirs): call it
	(subdir_namestring_parts): handle :UP
	(directory_list_valid_p): extracted from MAKE-PATHNAME
	(MAKE-PATHNAME): call simplify_directory() and
	directory_list_valid_p();
	Also: reverted the 2001-08-29 change: do NOT return a logical
	pathname when defaults is logical, but `logical' is false

2001-12-11  Sam Steingold  <sds@gnu.org>

	* socket.d (socket_getlocalname): when not resolving, init
	truename to a zero-length string
	Reported by Ian Wild <ian_wild@yahoo.com>

2001-11-29  Sam Steingold  <sds@gnu.org>

	* configure (link): remove the target ($2) first
	(maybe_mkdir): new function
	* makemake.in (echotab_mkdir_maybe): new function

2001-11-28  Sam Steingold  <sds@gnu.org>

	* configure, makemake.in, lndir: the idiom `cd $path; pwd` breaks
	down when cd prints something -- redirect its output to /dev/null
	From William Harold Newman <william.newman@airmail.net>

2001-11-28  Sam Steingold  <sds@gnu.org>

	* pathname.d (wild_char_p): new macro
	(PARSE-NAMESTRING, MAKE-PATHNAME, wild_p): use it

2001-11-28  Sam Steingold  <sds@gnu.org>

	* pathname.d (MAKE-PATHNAME): revert the 2001-07-20 patch: :case
	applies only to strings, not pathnames in the :default arg
	Reported by Kent M Pitman <pitman@world.std.com>

2001-11-27  Sam Steingold  <sds@gnu.org>

	* array.d (SIMPLE_FILL, SIMPLE_REVERSE, SIMPLE_NREVERSE): new macros
	(elt_fill): use SIMPLE_FILL
	(elt_reverse): use SIMPLE_REVERSE
	(elt_nreverse): use SIMPLE_NREVERSE

2001-11-27  Sam Steingold  <sds@gnu.org>

	* stream.d (READ-INTEGER, READ-FLOAT, WRITE-INTEGER, WRITE-FLOAT):
	use elt_nreverse() instead of inline code

2001-11-19  Sam Steingold  <sds@gnu.org>

	more consistent floating point computations: (log -1d0) =>
	#C(0.0d0 3.141592653589793d0), not #C(0.0d0 3.1415927f0)
	* realelem.d (defaultfloatcase): accept NUM arg
	(I_float_F, RA_float_F): update accordingly
	* realtran.d (pi): accept an arg and pass it to defaultfloatcase()
	(R_R_atan_R): pass an argument to pi()
	* comptran.d (R_R_atanh_R_R, R_R_asinh_R_R, N_acos_N, N_acosh_N):
	pass an argument to pi()
	* flo_rest.d (floatcase): envelop in "do{}while(0)"
	* lisparit.d (read_float): pass Fixnum_0 to defaultfloatcase()

2001-11-19  Sam Steingold  <sds@gnu.org>

	Move all deprecated functionality to deprecated.lisp
	* compiler.lisp (*deprecated-functions-list*): took SPECIAL-FORM-P
	and GET-SETF-METHOD-MULTIPLE-VALUE out
	* init.lisp (export "EXT"): ditto
	* defs1.lisp (special-form-p): moved to deprecated.lisp
	* places.lisp (get-setf-method-multiple-value)
	(define-setf-method): ditto
	* deprecated.lisp (special-form-p, get-setf-method-multiple-value)
	(define-setf-method): added and deprecated
	* describe.lisp (describe-object): macros can be deprecated too,
	give the new name for the deprecated functionality

2001-11-11  Bruno Haible  <haible@clisp.cons.org>

	Support for Intel icc on Linux/i386.
	* autoconf/aclocal.m4 (CL_STRLEN): When checking for the return type,
	prefer size_t over int. Avoids icc warning.
	* lispbibl.d (INTEL): New macro.
	(NULL): Don't define if INTEL. Avoids icc warning.
	(ASM_get_SP_register, SP, setSP): Use same asm based statement
	expression when using Intel icc as when using gcc.
	* genclisph.d (main): Likewise.
	* arilev0.d (mulu16) [I80386]: Likewise.
	(mulu32) [I80386]: Likewise.
	(divu_3216_1616) [I80386]: Likewise.
	(divu_6432_3232) [I80386]: Likewise.
	* eval.d (LD, LR, U_operand, S_operand): Likewise.
	* int2adic.d (D_D_mal2adic_D): Likewise.
	* intlog.d (integerlength16, integerlength32, ord2_32): Likewise.
	* ari80386.d (mulu32_): Don't define when using Intel icc.
	(divu_6432_3232_): Likewise.

2001-11-14  Sam Steingold  <sds@gnu.org>

	* stream.d (init_streamvars): when stdin (resp. stdout) is not a
	terminal, set *STANDARD-INPUT* (resp. *STANDARD-OUTPUT*) to the
	actual stream, not *TERMINAL-IO* synonym stream

2001-11-14  Sam Steingold  <sds@gnu.org>

	* lispbibl.d: envelop all "{}" macros in "do{}while(0)"

2001-11-09  Sam Steingold  <sds@gnu.org>

	* pathname.d (CD): append a slash when the string does not end
	with it (compatibility with CMUCL &al); the original behavior is
	still available as (cd (pathname string))

2001-11-08  Sam Steingold  <sds@gnu.org>

	* defs1.lisp (load-lpt-many): evaluate the definition for
	AllegroCL compatibility

2001-11-07  Sam Steingold  <sds@gnu.org>

	Support CMUCL- and AllegroCL-style logical host loading
	* defs1.lisp (load-lpt-many): new function (AllegroCL-style)
	(load-lpt-one): new function (CMUCL-style)
	(*load-logical-pathname-translations-database*): new user variable
	(load-logical-pathname-translations): use them

2001-11-07  Sam Steingold  <sds@gnu.org>

	* init.lisp (search-file): handle the extension-less situations

2001-11-05  Sam Steingold  <sds@gnu.org>

	* debug.d (read_form): keep calling READ-LINE until a non-empty
	line is supplied; this fixes the C-z RET win32 problem

2001-11-04  Bruno Haible  <haible@clisp.cons.org>

	Interoperability with gcc-3.0 -fuse-cxa-atexit.
	* autoconf/aclocal.m4 (CL_GLOBAL_CONSTRUCTORS): Add test whether
	global destructors actually exist.

2001-11-02  Sam Steingold  <sds@gnu.org>

	* stream.d (check_stream, check_streamtype, check_builtin_stream):
	(check_wr_int, resolve_as_synonym): new macros
	(test_stream_args, test_input_stream_args, SYNONYM-STREAM-SYMBOL)
	(BROADCAST-STREAM-STREAMS, CONCATENATED-STREAM-STREAMS)
	(TWO-WAY-STREAM-INPUT-STREAM, TWO-WAY-STREAM-OUTPUT-STREAM)
	(ECHO-STREAM-INPUT-STREAM, ECHO-STREAM-OUTPUT-STREAM)
	(GENERIC-STREAM-P, bitbuff_ixu_sub, bitbuff_ixs_sub)
	(wr_by_iau8_unbuffered, wr_by_iau8_buffered, TERMINAL-RAW)
	(BUILT-IN-STREAM-OPEN-P, INPUT-STREAM-P, OUTPUT-STREAM-P)
	(BUILT-IN-STREAM-ELEMENT-TYPE, BUILT-IN-STREAM-SET-ELEMENT-TYPE)
	(STREAM-EXTERNAL-FORMAT, SET-STREAM-EXTERNAL-FORMAT)
	(interactive_stream_p, INTERACTIVE-STREAM-P, BUILT-IN-STREAM-CLOSE)
	(get_line_position, READ-BYTE, READ-BYTE-LOOKAHEAD)
	(READ-BYTE-WILL-HANG-P, READ-BYTE-NO-HANG, READ-INTEGER)
	(READ-FLOAT, WRITE-BYTE, WRITE-INTEGER, WRITE-FLOAT, LINE-NUMBER)
	(ALLOW-READ-EVAL): use them
	(decoded_el_t): renamed from decoded_eltype
	(strm_channel_extrafields_t): renamed from
	 strm_channel_extrafields_struct
	(strm_unbuffered_extrafields_t): renamed from
	 strm_unbuffered_extrafields_struct
	(strm_buffered_extrafields_t): renamed from
	 strm_buffered_extrafields_struct
	(win32_console_extrafields_t): renamed from
	 win32_console_extrafields_struct
	(CHECK_INTERRUPT, SYSCALL) [UNIX_BEOS WIN32_NATIVE]: new macros
	(low_read_unbuffered_socket, low_listen_unbuffered_socket)
	(low_read_array_unbuffered_socket, low_write_unbuffered_socket)
	(low_write_array_unbuffered_socket, low_fill_buffered_socket)
	(low_flush_buffered_socket) :use them

2001-11-02  Stefan Kain  <stefan.kain@freenet.de>

	* stream.d: translated the comments

2001-10-28  Arseny Slobodjuck  <ampy@ich.dvo.ru>
	    Sam Steingold  <sds@gnu.org>

	* stream.d (SCREEN) [WIN32_NATIVE]: w95/98 bug fixes
	(win32_console_extrafields_struct): add field handle_reused.
	(v_puts): fixed a coord bug becoming apparent on w95.
	(low_close_console): new function, closing console handle if it is
	not reused.
	(MAKE-WINDOW): on NT create new console handle, on w95/98 try to
	get standard handle (w95 returns stdout anyway). Set new field in
	stream data accordingly.  Removing obsolete ASSERT. Change stream
	closing procedure to new low_close_console.

2001-10-25  Sam Steingold  <sds@gnu.org>

	* pathname.d (MAKE-PATHNAME): STACK_* = listof()
	might not be what you think! -- avoid

2001-10-25  Sam Steingold  <sds@gnu.org>

	* socket.d (ipv6_ntop): make sure buffer is returned

2001-10-25  Sam Steingold  <sds@gnu.org>

	* stream.d (rd_ch_keyboard) [WIN32_NATIVE !UNICODE]: fixed the
	call to OemToCharBuff()
	Suggested by Arseny Slobodjuck <ampy@ich.dvo.ru>

2001-10-24  Sam Steingold  <sds@gnu.org>

	* charstrg.d (char_name, name_char): fixed for --without-unicode

2001-10-24  Sam Steingold  <sds@gnu.org>

	fixed --without-unicode on msvc
	* lispbibl.d (pseudodata_tab) [MS !UNICODE]: add a dummy member
	* spvw.d (pseudocode_anz) [MS !UNICODE]: define to 0
	* stream.d (pseudodata_tab) [MS !UNICODE]: init the dummy member

2001-10-24  Bruno Haible  <haible@clisp.cons.org>

	* clhs.lisp (*browsers*): Add an entry for :konqueror.

2001-10-23  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 474216 ]
	* misc.d (LISP-IMPLEMENTATION-VERSION): do not try to convert
	O(lisp_implementation_version_built_string) when month is not found

2001-10-23  Sam Steingold  <sds@gnu.org>

	* clisp-link.sh (LIBS): quote commas
	Suggested by Johannes Groedem <johs@bzzzt.fix.no>

2001-10-23  Sam Steingold  <sds@gnu.org>

	* io.d (pprin_object, pprin_object_dispatch): declare local

2001-10-20  Sam Steingold  <sds@gnu.org>

	* init.lisp (socket-stream-handle) [:WIN32]: do not export

2001-10-18  Sam Steingold  <sds@gnu.org>

	MAKE-INSTANCE returns the instance,
	not the return value of INITIALIZE-INSTANCE
	* clos.lisp (initial-make-instance): save & return instance
	* record.d (CLOS::%MAKE-INSTANCE): ditto

2001-10-18  Sam Steingold  <sds@gnu.org>

	pass *ARGS* to :INIT-FUNCTION when argv_execute_file is ""
	* spvw.d (init_symbol_values): define_variable EXT:*ARGS*
	(main): when argv_execute_file is "", do not call LOAD,
	just set EXT:*ARGS*

2001-10-05  Arseny Slobodjuck  <ampy@ich.dvo.ru>
	    Sam Steingold  <sds@gnu.org>

	Work with terminal/console encoding more directly in win32.
	Initialize terminal-encoding to OEM encoding.
	* stream.d (wr_ch_array_window, wr_ch_window, rd_ch_keyboard)
	[WIN32_NATIVE UNICODE]: do not convert to OEM (encodings do)
	* encoding.d (init_dependent_encodings) [WIN32_NATIVE]:
	init terminal encoding to OEM code page
	* win32aux.d (OEM2ANSI_table, ANSI2OEM_table) [UNICODE]: drop
	(init_win32): ditto
	(lowlevel_full_read, full_write) [UNICODE]: don't translate

2001-10-05  Arseny Slobodjuck  <ampy@ich.dvo.ru>
	    Sam Steingold  <sds@gnu.org>

	move win32 console attributes to non-GC-ed area to ensure
	absence of conflicts.
	* stream.d (strm_console_attrib, strm_console_size)
	(strm_console_cursor_pos, UnwrapCoord, WrapCoord, ConsolePosR)
	(ConsoleSizeR, ConsoleAttribR, ConsolePosS, ConsoleSizeS)
	(ConsoleAttribS, ConsoleHandleS) [WIN32_NATIVE]: removed macros
	(unwrap_coord): removed function
	(v_put): no need to move cursor
	(ConsoleData) [WIN32_NATIVE]: new console attrib accessor
	(win32_console_extrafields_struct): new structure, contains
	strm_channel_extrafields_struct and console state.
	(make_window, window_size, window_cursor_position)
	(set_window_cursor_position, clear_window, clear_window_to_eot)
	(clear_window_to_eol, delete_window_line, insert_window_line)
	(highlight_on, highlight_off, wr_ch_array_window): updated to
	get attributes from new structure.
	(wr_ch_array_window, make_window): fixed UNICODE mode

2001-10-15  Sam Steingold  <sds@gnu.org>

	* io.d (read_internal): clear EOF from the stream

2001-10-10  Sam Steingold  <sds@gnu.org>

	optimize #'* and #'/
	* compiler.lisp (c-form-table): map * to c-STAR and / to c-SLASH
	(c-constant-number, c-collect-numeric-constants): added
	(c-PLUS, c-MINUS): use them
	(c-STAR, c-SLASH): new functions

2001-10-08  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 462982 ]: support ipv6 on i386 (cygwin32, mingw32, msvc)
	* win32.d (HAVE_IPV6): define
	(ws2tcpip.h, winsock2.h): include
	* socket.d (in6_addr): define to in_addr6
	(ipv6_ntop): the s6_addr array is directly in struct in6_addr

2001-10-08  Sam Steingold  <sds@gnu.org>

	* savemem.lisp (saveinitmem): default image type is .mem

2001-10-05  Sam Steingold  <sds@gnu.org>

	* io.d (pr_enter_1): set indent if not skipping a newline after a TAB

2001-10-04  Sam Steingold  <sds@gnu.org>

	make COERCE error message more consistent
	* sequence.d (coerce_sequence): added a third argument error_p to
	indicate whether to return nullobj when result_type is
	not a sequence or to signal an error
	* lispbibl.d (coerce_sequence): updated the prototype
	* rexx.d (REXX-PUT): updated for the new coerce_sequence() signature
	* eval.d (SUBR-INFO, match_subr_key): ditto
	* foreign.d (convert_from_foreign): ditto
	* predtype.d (coerce_sequence_check): new function
	(COERCE): use it

2001-10-04  Sam Steingold  <sds@gnu.org>

	special file for deprecated functions
	* deprecated.lisp: added (define type-expand-1)
	* init.lisp: load deprecated.lisp
	* makemake.in (LPARTS): added deprecated

2001-10-04  Sam Steingold  <sds@gnu.org>

	expand compiler macros in C-FORM
	* compiler.lisp (expand-compiler-macro): new function
	(c-form, macroexpand-form): use it

2001-10-04  Sam Steingold  <sds@gnu.org>

	* type.lisp (clos-class): new function
	(typep, canonicalize-type, type-expand): use it

2001-10-03  Sam Steingold  <sds@gnu.org>

	limit DEFTYPE depth
	* predtype.d (expand_deftype): do not iterate more
	than (or *DEFTYPE-DEPTH-LIMIT* MOST-POSITIVE-FIXNUM) times
	* constsym.d, spvw.d (*DEFTYPE-DEPTH-LIMIT*): added

2001-10-03  Sam Steingold  <sds@gnu.org>

	EXPAND-DEFTYPE & TYPE-EXPAND accept an optional argument
	* predtype.d (expand_deftype): take the second arg once_p
	(EXPAND-DEFTYPE): take the second optional arg once-p
	* subr.d (expand-deftype): ditto
	* lispbibl.d (expand_deftype): ditto
	* sequence.d (valid_type): changed the expand_deftype() call
	* type.lisp (type-expand): take the second optional arg once-p
	* describe.lisp (describe-object): use type-expand

2001-10-03  Sam Steingold  <sds@gnu.org>

	* io.d (pr_enter_1): do not print the initial newline with
	definite single-liners

2001-10-02  Sam Steingold  <sds@gnu.org>

	* format.lisp (formatter-main-1): fixed quoting (colon-p and
	atsign-p must be under comma)

2001-10-01  Sam Steingold  <sds@gnu.org>

	* pathname.d (make-pathname): support string and
	:wild/:wild-inferiors :directory arg
	support :UP and :BACK in the directory list
	coerce name &c to normal simple string
	(legal_name): accept non-simple strings
	(subst_up_dotdot): new function
	* constsym.d (:UP, :BACK): added

2001-10-01  Sam Steingold  <sds@gnu.org>

	added EXPAND-DEFTYPE primitive, removed TYPE-EXPAND-1
	* lispbibl.d (expand_deftype): added a prototype
	* predtype.d (expand_deftype, EXPAND-DEFTYPE): implemented
	(COERCE): use expand-deftype()
	* constsym.d, subr.d (EXPAND-DEFTYPE): added
	* sequence.d (find_seq_type): new local function
	(valid_type): split into valid_type() and valid_type1(),
	use expand_deftype() and find_seq_type()
	(get_seq_type): use find_seq_type()
	* type.lisp (typep, canonicalize-type, subtype-integer)
	(type-expand-1): use EXPAND-DEFTYPE
	(type-expand-1): folded into type-expand
	* describe.lisp (describe-object): do not use type-expand-1

2001-09-24  Sam Steingold  <sds@gnu.org>

	added functionp macro predicate
	* lispbibl.d (functionp): define
	* record.d (MAKE-FUNCTION-MACRO, MAKE-MACRO): use it
	* predtype.d (COERCE): ditto

2001-09-23  Sam Steingold  <sds@gnu.org>

	optional filling of PPHELP streams
	* stream.d (wr_ch_pphelp): when filling, handle spaces specially
	(wr_ch_array_pphelp): split on NL and (when filling) on spaces
	(wr_ch_array_pphel_): renamed from wr_ch_array_pphelp
	* constsym.d (*PRINT-PRETTY-FILL*): added
	* spvw.d (init_symbol_values): defvar *PRINT-PRETTY-FILL*

2001-09-24  Stefan Kain  <stefan.kain@freenet.de>

	* lispbibl.d: translated the rest of the comments

2001-08-12  Bruno Haible  <haible@clisp.cons.org>

	* io.d (a_letterdigit, a_expodigit): New macros.
	(test_potential_number_syntax): Swap step2 and step3. Translate into
	a_letterdigit and a_expodigit. Update step4 and step6 accordingly.
	(test_number_syntax): Drop most of step4. Update step5 accordingly.

2001-08-25  Bruno Haible  <haible@clisp.cons.org>

	Make it compile in C++ mode.
	* foreign.d (free_foreign_callin): Cast free_callback argument.
	(struct_alignment): Provide alternative definition in C++.

2001-09-22  Sam Steingold  <sds@gnu.org>

	* error.d (end_error): use exit() instead of NOTREACHED to avoid
	an infinite loop reporting fatal errors

2001-09-22  Sam Steingold  <sds@gnu.org>

	new built-ins: SYS::WHITESPACEP & SYS::WRITE-SPACES
	* constsym.d, subr.d (whitespacep, write_spaces): added
	* io.d (write_spaces, whitespacep): implemented
	* lispbibl.d (cint_white_p): new macro
	* stream.d (strip_white): use it
	* compiler.lisp (stream-tab): use write-spaces
	* describe.lisp (describe-stream): ditto
	* format.lisp (whitespacep): commented out

2001-09-21  Sam Steingold  <sds@gnu.org>

	binary i/o on True64
	* stream.d (bitbuff_is_I): subtract, not add wbitm(intLsize) to
	wert before calling negfixnum
	Suggested by Kalman Reti <reti@ai.mit.edu>

2001-09-21  Sam Steingold  <sds@gnu.org>

	some bugfixes to the Pretty-Printer
	* io.d (FORMAT-TABULATE): check the optional arguments
	* format.lisp (formatter-main-1): added FORMAT-PPRINT-NEWLINE and
	FORMAT-PPRINT-INDENT
	(format-pprint-indent): fixed COUNT default value

2001-09-20  Sam Steingold  <sds@gnu.org>

	fixed WITH-COMPILATION-UNIT
	* compiler.lisp (compile-warnings-p, compile-failure-p): new
	helper functions
	(compile, compile-file): use them
	(c-report-problems): call c-reset-globals
	(with-compilation-unit): bind *error-count* *warning-count* and
	*style-warning-count* when *c-top-call*
	(compile-file): use with-compilation-unit
	(compile): flet closure-slot

2001-09-20  Sam Steingold  <sds@gnu.org>

	handle *PRINT-LEVEL* for CLOS instances correctly
	* io.d (pr_instance, pr_structure_external): do level check
	(pr_structure): do not do level check

2001-09-20  Sam Steingold  <sds@gnu.org>

	PPRINT-LOGICAL-BLOCK supports *PRINT-CIRCLE* and *PRINT-LENGTH*
	* pprint.lisp (pprint-pop): handle *PRINT-LENGTH* & *PRINT-CIRCLE*
	* constsym.d, subr.d (pcirclep): added
	* io.d (double_dots): do not set *PRIN-LINES* to :END
	(string_fit_line_p): take a third arg offset
	(pr_enter_1): do not print TAB before NL
	(pprin_object, pprin_object_dispatch): new pr_routine_t
	(pprint_lisp): removed
	(%PPRINT-LOGICAL-BLOCK): use pprin_object instead of pprint_lisp
	(%CIRCLEP): new LISPFUNN

2001-09-19  Sam Steingold  <sds@gnu.org>

	* io.d (format_tab): ASSERT that the return value is >=0

2001-09-19  Sam Steingold  <sds@gnu.org>

	* makemake.in (DEBUGGING): handle on win32msvc

2001-09-17  Sam Steingold  <sds@gnu.org>

	finished the Pretty-Printer
	* constsym.d, subr.d (FORMAT-TABULATE): added
	* format.lisp (format-tabulate): commented out
	* lispbibl.d (cons_ssstring): take args
	(PUSH_CONS, PPHELP_PUSH, PPHELP_NEW_STRING): removed
	* stream.d (make_pphelp_stream): call cons_ssstring() with args
	(wr_ch_pphelp): use cons_ssstring() instead of PPHELP_NEW_STRING()
	* io.d (strm_pphelp_strings): contains NL/indent/tab too
	(cons_ssstring): take 2 agrs - stream pointer and NL type
	(format_tab): new function
	(pprint_prefix): take an additional `prefix' arg
	(pphelp_newline): use cons_ssstring() instead of PPHELP_NEW_STRING()
	(klammer_zu): drop the newline / indentation / tab
	(mutli_line_sub_block_out): new function
	(justify_end_eng, justify_end_weit): use it
	(space_available, pphelp_length, string_fit_line_p): new functions
	(pr_enter_1): accomodate the new strm_pphelp_strings format
	(PPRINT-NEWLINE): implemented non-mandatory newlines
	(FORMAT-TABULATE): moved here from format.lisp

2001-09-17  Sam Steingold  <sds@gnu.org>

	* io.d (syntax_readtable_get, syntax_readtable_put): new macros
	(SET-SYNTAX-FROM-CHAR, GET-MACRO-CHARACTER, read_char_syntax)
	(wpeek_char_syntax, wpeek_char_eof): use them

2001-09-17  Sam Steingold  <sds@gnu.org>

	bind *PRINT-READABLY* to NIL before reporting errors
	* error.d (write_errorobject): bind *PRINT-READABLY* to NIL
	(signal_and_debug): new function; extracted from end_error(),
	ERROR, ERROR-OF-TYPE; additionally bind *PRINT-READABLY* to NIL
	(end_error, ERROR, ERROR-OF-TYPE): use it
	* debug.d (break_driver): bind *PRINT-READABLY* to NIL

2001-09-14  Sam Steingold  <sds@gnu.org>

	* modules/regexp/regexp.lisp (with-loop-split): :case-sensitive is
	a &key, not &optional, added :start and :end
	(regexp-exec): accept negative :end

2001-09-14  Sam Steingold  <sds@gnu.org>

	more work on the Pretty-Printer
	* constsym.d (*PRIN-INDENTATION*): new var
	* format.lisp (format-tabulate): use it instead of CURRENT-INDENT
	(current-indent): removed
	* io.d (cons_ssstring, pprint_prefix): new functions
	(right_margin): use pprint_prefix()
	(pphelp_newline): use PPHELP_NEW_STRING()
	(justify_empty_1): use cons_ssstring()
	(pr_enter_1): use pprint_prefix()
	(PPRINT-INDENT): add spaces when necessary
	(pprint_lisp): do level check
	* lispbibl.d (cons_ssstring, PUSH_CONS, PPHELP_PUSH)
	(PPHELP_NEW_STRING): added (for io.d and stream.d)
	* pprint.lisp (pprint-logical-block): moved binding out of lambda;
	bind *PRIN-INDENTATION* instead of *PRIN-L1* and *PRIN-LM*
	* spvw.d (init_symbol_values): defvar *PRIN-LINE-PREFIX* (forgot
	on 2001-08-17) and *PRIN-INDENTATION*
	* stream.d (wr_ch_pphelp): when given NL, start a new string
	using PPHELP_NEW_STRING
	(make_pphelp_stream): use cons_ssstring()

2001-09-13  Sam Steingold  <sds@gnu.org>

	* modules/regexp/regexp.lisp: replaced CASE-INSENSITIVE with
	CASE-SENSITIVE throughout (preserving the defaults)

2001-09-11  Sam Steingold  <sds@gnu.org>

	* makemake.in (docdir): use `share' for all $fsstnd

2001-09-10  Sam Steingold  <sds@gnu.org>

	* debug.d (read_form): check the input_len before string_eqcomp_ci()

2001-09-10  Sam Steingold  <sds@gnu.org>

	* pprint.lisp (pprint-logical-block): unroll stream-symbol (NIL ->
	*STANDARD-OUTPUT*, T -> *TERMINAL-IO*)

2001-09-10  Sam Steingold  <sds@gnu.org>

	* io.d (pr_enter_1): a GC-safety issue

2001-09-10  Sam Steingold  <sds@gnu.org>

	* macros2.lisp (Exhaustive-Case-Analysis): added CASE-LIST flet
	(gensym-list): new function
	(time, space): use it
	* compiler.lisp (c-MAP-on-CARs, c-MAP-on-LISTs, c-MAPC, c-MAPL): ditto
	* condition.lisp (handler-bind): ditto
	* format.lisp (formatter-main-1): ditto
	* places.lisp (get-setf-expansion, push, pushnew): ditto
	* clos.lisp (analyze-method-description, prototype-table)
	(compute-dispatch, compute-effective-method, generic-flet)
	(generic-labels): ditto
	(n-gensyms): removed

2001-09-10  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 458746 ]
	* format.lisp (format-float-to-string): make sure width is at
	least 2 (when given): for a digit and for the decimal point

2001-09-09  Stefan Kain  <stefan.kain@freenet.de>

	* format.lisp: translated all comments

2001-09-09  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (offsetof) [MSVC]: defined in <stddef.h>

2001-09-09  Sam Steingold  <sds@gnu.org>

	* pathname.d (host_namestring_parts): handle logical pathnames on win32

2001-09-07  Sam Steingold  <sds@gnu.org>

	* lispbibl.d, error.d, genclisph.d (conditiontype):
	renamed to `condition_t'

2001-09-07  Oliver Nee  <o.nee@t-online.de>
	    Sam Steingold  <sds@gnu.org>

	* lispbibl.d: translated half of the comments

2001-09-06  Sam Steingold  <sds@gnu.org>

	* macros1.lisp (case-expand): new function
	(case): use it
	(fcase): new macro

2001-09-05  Sam Steingold  <sds@gnu.org>

	* reploop.lisp (debug-backtrace): print the number of frames
	* debug.d (SHOW-STACK): return the number of frames examined

2001-09-05  Sam Steingold  <sds@gnu.org>

	* install.lisp (add-fas-file, add-mem-file): set the default action

2001-08-30  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (nonreturning_function) [MICROSOFT]: __declspec(noreturn)

2001-08-30  Sam Steingold  <sds@gnu.org>

	* pathname.d (MERGE-PATHNAMES): when physical directories do not
	match, check for unbound directory in pathname

2001-08-29  Sam Steingold  <sds@gnu.org>

	* pathname.d (assure_dir_exists) [WIN32_NATIVE]: signal an error
	when the path is invalid

2001-08-29  Sam Steingold  <sds@gnu.org>

	more ANSI compliance pathnames wrt HOSTS & VERSIONS
	* constobj.d (semicolon_string, zero_string): added for the
	benefit of VERSION pathname component
	* pathname.d (PARSE-NAMESTRING): fixed HOST handling
	(pathname_version_maybe, pathname_host_maybe)
	(pathname_device_maybe): new convenience macros
	(subdir_namestring_parts): take an additional logp arg
	(host_namestring_parts, directory_namestring_parts):
	handle logical pathnames
	(nametype_namestring_parts): separate version with ".", not ";"
	(directory_namestring): do not add host
	(FILE-NAMESTRING, DIRECTORY-NAMESTRING, HOST-NAMESTRING)
	(ENOUGH-NAMESTRING, NAMESTRING): handle logical pathnames
	(defaults_pathname): permit logical *DEFAULT-PATHNAME-DEFAULTS*
	(merge_dirs): new function
	(MERGE-PATHNAMES): use it; handle versions better
	(MAKE-PATHNAME): handle defaults early; pass UNBOUND instead of
	NIL to MERGE-PATHNAMES as default version

2001-08-27  Sam Steingold  <sds@gnu.org>

	* makemake.in (testsuite): add on all platforms

2001-08-27  Sam Steingold  <sds@gnu.org>

	win32gcc names libraries libFOO.a and not FOO.LIB
	* makemake.in (LIB_TYPE): new variable, used instead of $HOS
	in creating library dependecies

2001-08-27  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 455559 ]
	* defstruct.lisp (ds-arg-default): when ARG is a list and default
	is NIL, return (ARG NIL) and not (ARG)
	(ds-arg-with-default): pass VAR instead of ARG to DS-ARG-DEFAULT

2001-08-25  Bruno Haible  <haible@clisp.cons.org>

	Upgrade to autoconf-2.52.
	* autoconf/autoconf: Upgrade to autoconf-2.52.
	* autoconf/acgeneral.m4: Remove file.
	* autoconf/acspecific.m4: Remove file.
	* autoconf/autoconf.m4f: New file, from autoconf-2.52.
	* autoconf/aclocal.m4: Require autoconf-2.52.
	(CL_AS_UNDERSCORE): Avoid stupid autoconf-2.52 error "possibly
	undefined macro: AS_UNDERSCORE".
	(CL_CONFIG_SUBDIRS): Rewritten.
	(CL_CANONICAL_HOST): Call AC_CANONICAL_HOST. Don't cache the result,
	AC_CANONICAL_HOST does it itself. Add $SHELL in front of
	$ac_config_guess and $ac_config_sub.
	(CL_VOID): Define return_void to empty.
	(CL_DIR_HEADER): Inline the autoconf-2.13 AC_CHECK_HEADERS_DIRENT code.
	(CL_SIGACTION_REINSTALL): Include <string.h>, for memset declaration.
	(CL_STAT): Define STAT_INLINE outside of CL_PROTO.
	(CL_LSTAT): Likewise.
	(CL_SHM): Cast the shmat return value, to avoid error in C++ mode.
	* Makefile.devel (AUTOCONF_FILES): Remove acgeneral.m4, acspecific.m4.
	Add autoconf.m4f.
	(src/gettext/configure, src/gettext/config.h.in): Likewise.
	(src/configure): Use autoconf options -A, -l instead of -m.
	(modules/wildcard/configure): Likewise.
	(modules/regexp/configure): Likewise.
	(modules/clx/new-clx/configure): Likewise.
	(utils/hln/configure): Likewise.
	* unixconf.h.in (return_void, *_CONST, CONNECT_ADDRLEN_T): Use
	#undef instead of #define, to work around an autoconf bug.
	(DIRENT, SYSNDIR, SYSDIR, NDIR): Remove comments after #undef, to
	work around an autoconf-2.52 bug.
	* configure: Pass --cache-file=config.cache to the main configure, to
	force a cache file. Needed for grepping cl_cv_prog_cc_cplusplus and
	also for speed. Don't pass --cache-file=../config.cache to gettext's
	configure because it uses different CPPFLAGS and LDFLAGS (needed so
	that gettext gets HAVE_ICONV right).

2001-08-25  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (gettext_datadirname_sedcommand): Remove.
	(datadir): Always set to $(prefix)/share.
	(localesed): Update.
	(clean5): Also remove the varbrace executable.

2001-08-27  Sam Steingold  <sds@gnu.org>

	* init.lisp (load): when checking whether FILENAME names a
	compiled file, do not call MAKE-PATHNAME since if
	*DEFAULT-PATHNAME-DEFAULTS* has a non-trivial host, the search
	will always fail

2001-08-27  Stefan Kain  <stefan.kain@freenet.de>

	* init.lisp: translated all comments

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (Z_SHIFT, Z_AT_SLASH, Z_SUB): Parenthesize argument
	expressions.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* spvw.d (main): Use GETTEXT, not GETTEXTL, in combination with
	O(internal_encoding).

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (nonreturning_function): Define in a way that works also
	for function definitions.
	* genclisph.d (main): Update accordingly.
	* affi.d: Merge nonreturning_function declarations with definition.
	* amigaaux.d: Likewise.
	* aridecl.d: Likewise.
	* array.d: Likewise.
	* charstrg.d: Likewise.
	* control.d: Likewise.
	* debug.d: Likewise.
	* encoding.d: Likewise.
	* erramiga.d: Likewise.
	* error.d: Likewise.
	* errunix.d: Likewise.
	* errwin32.d: Likewise.
	* eval.d: Likewise.
	* flo_konv.d: Likewise.
	* foreign.d: Likewise.
	* hashtabl.d: Likewise.
	* intbyte.d: Likewise.
	* intdiv.d: Likewise.
	* intelem.d: Likewise.
	* intmal.d: Likewise.
	* io.d: Likewise.
	* lfloat.d: Likewise.
	* lisparit.d: Likewise.
	* list.d: Likewise.
	* pathname.d: Likewise.
	* record.d: Likewise.
	* rexx.d: Likewise.
	* sequence.d: Likewise.
	* spvw.d: Likewise.
	* spvw_allocate.d: Likewise.
	* stream.d: Likewise.
	* symbol.d: Likewise.

2001-08-22  Sam Steingold  <sds@gnu.org>

	* pprint.lisp (pprint-logical-block): set indentation with
	PPRINT-INDENT after printing :PREFIX

2001-08-22  Sam Steingold  <sds@gnu.org>

	* io.d (PPRINT-NEWLINE): output only to PPHELP streams
	and when *PRINT-PRETTY* is non-NIL
	(%PPRINT-LOGICAL-BLOCK): bind *PRIN-PPRINTER*, not set it

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* io.d (check_readtable): Renamed from CHECK_READTABLE. Add
	documentation.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (version_diff): Fix syntax error.

2001-08-21  Sam Steingold  <sds@gnu.org>

	* lispbibl.d, stream.d (check_direction): const argument

2001-08-21  Sam Steingold  <sds@gnu.org>

	* stream.d (stream_dummy_fill): fill the stream with error pseudofuns
	(close_dummys): a macro now, uses stream_dummy_fill()
	(make_broadcast_stream, make_concatenated_stream)
	(MAKE-STRING-INPUT-STREAM, make_string_output_stream)
	(MAKE-STRING-PUSH-STREAM, make_pphelp_stream)
	(MAKE-BUFFERED-INPUT-STREAM, MAKE-BUFFERED-OUTPUT-STREAM)
	(fill_pseudofuns_unbuffered, fill_pseudofuns_buffered)
	(make_keyboard_stream, make_terminal_stream_)
	(MAKE-WINDOW, make_printer_stream): use stream_dummy_fill()
	(ELTYPE_DISPATCH): new macro
	(canon_eltype, fill_pseudofuns_buffered): use it

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (direction_t): Explicit value assignments.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* io.d (get_readtable): Local variable zuweisung -> assignment.
	(read_char_syntax): Likewise.
	(wpeek_char_syntax): Likewise.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* eval.d (eval_fsubr): Change error message: talk about special
	operator, not special form.

2001-08-21  Sam Steingold  <sds@gnu.org>

	* makemake.in (XCFLAGS): with win32gcc, do not need
	-D_NO_OLDNAMES: there is no sleep() in stdlib.h and
	_NO_OLDNAMES_ kills struct timeb in timeb.h

2001-08-21  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 446942 ]
	* makemake.in (DISTFILE): isulate from AIX uname which does not
	have the -p option

2001-08-21  Sam Steingold  <sds@gnu.org>

	some symbols appeared in wrong packages - fix this
	* international.lisp (textdomain, textdomaindir): use package
	prefix before SET-TEXTDOMAIN and SET-TEXTDOMAINDIR
	* clos.lisp (signature): import from COMPILER

2001-08-20  Sam Steingold  <sds@gnu.org>

	* loadform.lisp (mlf-unquote, mlf-init-function): new functions
	(make-init-form): warn about errors in MLF-INIT-FUNCTION

2001-08-20  Sam Steingold  <sds@gnu.org>

	* places.lisp (setf-symbol): intern the result when the argument
	is interned

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* constsym.d: Reorder according to the definition order in the files.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* win32.d: Test __MINGW32__, not __mingw32__.

2001-08-18  Sam Steingold  <sds@gnu.org>

	* loadform.lisp (make-load-form-saving-slots): compute the slot
	list differently for STANDARD-OBJECTs and STRUCTURE-OBJECTs;
	quote slot values

2001-08-17  Sam Steingold  <sds@gnu.org>

	implemented the ANSI CL pretty-printer
	* constobj.d (version): bumped
	(type_pprint_newline, type_pprint_indent): added
	* constsym.d (PPRINT-DISPATCH, PPRINT-INDENT, PPRINT-NEWLINE)
	(%PPRINT-LOGICAL-BLOCK, :MISER-WIDTH, :PPRINT-DISPATCH, :LINEAR)
	(:FILL, :MISER, :MANDATORY, :BLOCK, :CURRENT, *PRIN-LINE-PREFIX*)
	(*PRIN-MISERP*, *PRIN-PPRINTER*): new symbols
	* defs2.lisp (with-standard-io-syntax): bind *PRINT-MISER-WIDTH*
	and *PRINT-PPRINT-DISPATCH*
	* format.lisp (format-parse-cs): added ~_ and ~I instructions
	(format-pprint-newline, format-pprint-indent, current-indent):
	new functions
	(format-tabulate): do not ignore colon-modifier
	* init.lisp: export PPRINT symbols; load pprint.lisp
	* inspect.lisp (with-gensyms): moved to pprint.lisp
	* io.d (pretty_print_call): look into *PRINT-PPRINT-DISPATCH*
	(pr_enter_1): call it, instead of calling pr_xxx directly
	respect *PRIN-LINE-PREFIX*
	(pr_external_1): bind *PRINT-MISER-WIDTH* and
	*PRINT-PPRINT-DISPATCH*
	(PPRINT-INDENT, PPRINT-NEWLINE): implemented
	(pprint_lisp): new pr_routine_t helper
	(%PPRINT-LOGICAL-BLOCK): new function
	(WRITE, WRITE-TO-STRING): accept :MISER-WIDTH and :PPRINT-DISPATCH
	* lisparit.d (fehler_not_R): made global
	* lispbibl.d (init): added the prototype
	* makemake.in (LPARTS): added pprint.lisp
	* pprint.lisp: new file
	* spvw.d (init_symbol_values): define *PRINT-MISER-WIDTH*,
	*PRIN-MISERP*, *PRIN-PPRINTER*, *PRINT-PPRINT-DISPATCH*
	* subr.d, subrkw.d (write, write_to_string): added kw(miser_width)
	and kw(pprint_dispatch)
	* subr.d (pprint_indent, pprint_newline, ppprint_logical_block): added

2001-08-17  Sam Steingold  <sds@gnu.org>

	* charstrg.d (char_name): fix the binary search to always terminate

2001-08-13  Stefan Kain  <stefan.kain@freenet.de>

	* eval.d: translated all comments

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* constsym.d (S(re_export)): Renamed from S(reexport).

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* charstrg.d (unpack_string): Rename local variable index to offset,
	to be consistent with the documentation.
	(unpack_string_ro): Add documentation.
	(SYSTEM::STORE-CHAR): Rename local variable index to offset.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* control.d (CONSTANTP): Optimize a popSTACK().

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: Update documentation of --with-[no]gettext.

2001-08-16  Sam Steingold  <sds@gnu.org>

	* loop.lisp (expand-loop): WITH vars should always be bound on top

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (Makefile): Back up Makefile before erasing it.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* spvw.d (loadmem): Take a 'const char*'.
	* spvw_memfile.d (loadmem): Take a 'const char*'. Create CYGDRIVE
	replacement using alloca. Fix oversized memmove argument.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (PARSE-NAMESTRING): Verify consp before accessing Cdr.

2001-07-31  Arseny Slobodjuck  <ampy@crosswinds.net>
	    Sam Steingold  <sds@gnu.org>

	* stream.d [WIN32_NATIVE]
	(rd_ch_keyboard): cast uAsciiChar in (*.uAsciiChar <= ' ') to
	uintB since uAsciiChar is signed in MSVC (!).
	(vktable): added 'WIN' key just to avoid 'unknown
	keyboard event' messages.
	Added keyboard OEM to local charset translation and then local
	to internal (for UNICODE). May be it will be nicer to automatically
	init *terminal-io* to OEM charset and decode input/output through
	internal encoding facility, but that should be done with care
	about other code.
	(check_window_stream): return its argument on success
	WIN32 console output:
	(console_handle, console_size, console_cursor_pos, console_needtoclose)
	(screenattr, attr) deleted global variables. 'encapsulated' them
	into window-stream. The latter changed to be channel-stream since
	iconv-based translations require channel-stream extra fields.
	(UnwrapCoord, WrapCoord, ConsolePosR, ConsoleSizeR, ConsoleAttribR)
	(ConsoleHandleR, ConsolePosS, ConsoleSizeS, ConsoleAttribS)
	(ConsoleHandleS): new macros to access new fields.
	(InitConsole) removed since two function calls left in it.
	(DoneConsole) removed since Channel stream finalization does all right.
	(unwrap_coord) new function. convert uintL to COORD.
	(move_ccp_by): new function, moves cursor position
	(v_emit_spaces): new helper function
	(v_move, v_put, v_cb, v_cs, v_ce, v_cl, v_cd, v_scroll, v_al, v_dl)
	(v_su, v_put): changed argument lists in view of absence of global
	variables.
	(v_put): processing Y overflow, subsequent output continues on
	the top of screen. It differs from DOS behavior where subsequent
	chars being written to bottom right of the screen (as far as I can
	see from code).
	(v_puts): new function, buffered console output.
	(wr_ch_array_window): new function instead of dummy which slowly
	works through v_put(). Handles newlines and bottom of screen like
	v_put does. Handles UNICODE internal format in two stages, like
	rd_ch_keyboard.
	(wr_ch_window): changed to handle UNICODE internal format
	(make_window): allocates a stream (channel stream) and sets
	strm_encoding as terminal_encoding.
	(close_window, window_size, window_cursor_position)
	(set_window_cursor_position, clear_window, clear_window_to_eot)
	(clear_window_to_eol, delete_window_line, insert_window_line)
	(highlight_on, highlight_off, window_cursor_on)
	(window_cursor_off): changed to take parameters from stream
	fields.

2001-08-16  Sam Steingold  <sds@gnu.org>
	    Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (PARSE-NAMESTRING): check CONSP before CAR & CDR

2001-08-16  Sam Steingold  <sds@gnu.org>

	* install.lisp (bat-file): use registry to get the "Common
	Desktop" location

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/acgeneral.m4 (AC_MSG_RESULTPROTO): Remove macro.
	(AC_LANG_EXTERN): Move to aclocal.m4.
	* autoconf/aclocal.m4 (AC_LANG_EXTERN): Moved here from acgeneral.m4.
	(CL_PROTO): Use AC_MSG_RESULT directly, instead of AC_MSG_RESULTPROTO.
	(CL_SILENT): No need to pushdef AC_MSG_RESULTPROTO.

2001-08-16  Sam Steingold  <sds@gnu.org>

	* disassem.lisp (disassemble): if a form is not a lambda form,
	prepend lambda before coercing to function

2001-08-15  Sam Steingold  <sds@gnu.org>

	* utils/gcc-cccp/Makefile.* (clean): new target
	* utils/gcc-cccp/Makefile (clean): new target
	adapted for CYGWIN/MINGW compilation
	* utils/gcc-cccp/cccp.c: made compilable under CYGWIN/MINGW:
	(stdlib.h, string.h, errno.h): include
	(max): define only if not yet defined
	(sys_nerr, sys_errlist): do not use on CYGWIN/MINGW, use strerror()
	code clean-up: added prototypes, fixed warnings and...
	(fancy_abort): removed (unused)
	(pipe_closed): ifndef _WIN32
	(fancy_abort): turned into a macro
	(grow_outbuf): void
	(expand_to_temp_buffer): do not return a local var
	fixed a show-stopper bug:
	(rescan): `obufp_before_macroname' is on the top level now
	(RECACHE): update `obufp_before_macroname'

2001-08-15  Sam Steingold  <sds@gnu.org>

	MT-safety: remove a static variable
	* io.d (circle_p): return a boolean and take a circle_info_t* arg
	(pr_circle): info is not a pointer now; pass it to circle_p()
	(pr_cons): pass NULL to circle_p()

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* sequence.d (seq_check_index): Remove typdescr argument. Use index,
	not STACK_0. Fix fehler_index_range argument. Add documentation.
	(ELT): Update.
	(SYSTEM::%SETELT): Update.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (legal_namechar): Treat ' ' as valid and '"' as invalid.

2001-08-14  Sam Steingold  <sds@gnu.org>

	fixed bug #[ 448817 ]
	* io.d (pr_external_1): use new macro BIND_UNLESS
	(pr_sharp_dot): new local function
	(pr_instance): use it
	do not call pr_external_[12] around a call to prin_object()
	(pr_orecord): use pr_sharp_dot() when printing Rectype_Loadtimeeval

2001-08-14  Sam Steingold  <sds@gnu.org>

	* .gdbinit: set args and define zout

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* hashtabl.d (SXHASH): Perform 32-bit -> 24-bit mapping by dividing
	through 0xFFFFFF. This does not show bad patterns mod 255.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* package.d (export_symbol_from): Fix GC safety bug.

2001-08-13  Sam Steingold  <sds@gnu.org>

	use unix file utilities and forward slashes with win32gcc
	* makemake.in (H_DOS): DOS-style filenames and file utilities

2001-08-04  Bruno Haible  <haible@clisp.cons.org>

	* eval.d (check_for_illegal_keywords): Don't signal an error for
	((LAMBDA (&KEY X) X) :X 1 :ALLOW-OTHER-KEYS NIL :ALLOW-OTHER-KEYS NIL)

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	Make it possible again to build clisp with the CFLAGS option "-x c++".
	* autoconf/acspecific.m4 (AC_C_INLINE): Add explicit return type to
	declaration.
	* lispbibl.d (export): Define.
	(strmflags_rd_by_bit_B, strmflags_wr_by_bit_B, strmflags_rd_by_B)
	(strmflags_wr_by_B, strmflags_rd_B, strmflags_wr_B): New macros,
	moved from stream.d.
	(input_stream_p, output_stream_p): Remove declarations.
	* spvwtabs.d (export): Undefine.
	* stream.d (strmflags_rd_by_bit_B, strmflags_wr_by_bit_B)
	(strmflags_rd_by_B, strmflags_wr_by_B, strmflags_rd_B, strmflags_wr_B):
	Commented out. Now in lispbibl.d.
	(input_stream_p, output_stream_p): Make local.
	(rd_by_aux_icx_buffered): Bracify so that 'goto eof' doesn't jump into
	uninitialized variables.
	(MAKE-PIPE-INPUT-STREAM): Pass a real direction_t to
	make_unbuffered_stream and make_buffered_stream.
	(MAKE-PIPE-OUTPUT-STREAM): Likewise.
	(MAKE-PIPE-IO-STREAM): Likewise.
	(SYS::MAKE-SOCKET-STREAM): Likewise.
	(make_socket_stream): Likewise.
	(sec_usec): Fix declaration so that "ansidecl" recognizes it.
	(make_terminal_io): Pass a real direction_t to make_file_stream.
	(init_streamvars): Pass a real direction_t to make_unbuffered_stream.
	* io.d (pr_stream): Don't use input_stream_p, output_stream_p.
	* unix.d (getpid): Declare only once.
	* socket.d (errno): Remove superfluous declaration.
	* misc.d (clisp_setenv): Cast malloc return value.
	(SYS::SETENV): Rename local variable 'error' to 'ret'. Ensure it is
	always initialized.
	* pathname.d (open_file): Bracify so that 'goto ergebnis_NIL' doesn't
	jump into uninitialized variables.
	* spvw_garcol.d (move_aligned_p1_p2): Don't use the gcc extension if
	compiling in C++ mode.
	* stdbool.h.in (_Bool): Define differently in C++ mode.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (pathname_to_OSdir, OSdir_to_pathname): New declarations.
	* pathname.d (pathname_to_OSdir, OSdir_to_pathname): New functions.
	* spvw_ctype.d (init_ctype): Call setlocale for all standard categories
	except LC_NUMERIC.
	* spvw_language.d (init_language): Use locale names of the form
	"ll_CC", not "ll", needed for glibc-2.2. Call setlocale for LC_MESSAGES
	in all cases.
	* i18n.d: New file.
	* misc.d (SYS::CURRENT-LANGUAGE, SYS::LANGUAGE): Move to i18n.d.
	* international.lisp: New file.
	* macros2.lisp (*all-languages*, assert-language, ensure-language)
	(deflanguage, ENGLISH, definternational, deflocalized, localized)
	(*localized-recursion*, definternational-default): Move to
	international.lisp.
	* init.lisp: Load "international".
	* makemake.in (CPARTS): Add i18n.
	(LPARTS): Add international.
	* ../doc/impext.xml: Rename section "The Language" to
	"Internationalization". Add gettext binding documentation and example.

2001-08-05  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (subr_argtype_3_2): New enum value.
	* eval.d (eval_subr): Treat it.
	(apply_subr): Likewise.
	(funcall_subr): Likewise.
	* spvw.d (subr_argtype): Likewise.

2001-08-03  Sam Steingold  <sds@gnu.org>

	some minor code rearrangements
	* compiler.lisp (c-error-c): new macro
	(analyze-lambdalist): added local macros CHECK-ITEM and SKIP-L,
	removed local macro ERR-SUPERFLU

2001-08-02  Sam Steingold  <sds@gnu.org>

	Fixed bug #[ 445286 ]
	* compiler.lisp (c-SYMBOL-MACROLET): bind *VENV* before PARSE-BODY
	because PARSE-BODY macroexpands the first form in search of
	declarations, and that macroexpansion might rely on the
	definitions of the current SYMBOL-MACROLET

2001-08-02  Bruno Haible  <haible@clisp.cons.org>

	* nls_iso8859_16.c: Regenerated from newest unicode.org table.

2001-07-25  Sam Steingold  <sds@gnu.org>

	due to the change in the WRITE signature,
	all FAS files have to be re-compiled
	* constobj.d (version): bumped

2001-07-25  Sam Steingold  <sds@gnu.org>

	Win32: understand Cygwin's /cygdrive/[letter] pathnames
	* pathname.d (parse_namestring): translate :directory (:absolute
	*device-prefix* "c" ...) to :device "C" :device (:absolute ...)
	* cfgwin32.lisp (*device-prefix*): set to "cygdrive"
	* constsym.lisp (*device-prefix*): added
	* spvw.d (*device-prefix*): defined
	* spvw_memfile.d (loadmem): check the path for "cygdrive" prefix
	and modify it if necessary in place

2001-07-25  Sam Steingold  <sds@gnu.org>

	* socket.d (create_client_socket, create_server_socket):
	 avoid warnings

2001-07-25  Sam Steingold  <sds@gnu.org>

	* defs2.lisp (with-standard-io-syntax): bind *PRINT-LINES*

2001-07-24  Sam Steingold  <sds@gnu.org>

	mingw32 compilation - kill more warnings
	* win32.d (ULONGLONG): define to OS_ULONGLONG
	 around #include <windows.h>
	(USE_SYS_TYPES_FD_SET): define around #include <winsock.h>

2001-07-24  Sam Steingold  <sds@gnu.org>

	Tweak the MAKE-LOAD-FORM patch
	* loadform.lisp: new file; moved `make-load-form',
	`make-load-form-saving-slots' and `make-init-form' here
	* init.lisp: load "loadform"
	* makemake.in (LPARTS): added "loadform"
	* clos.lisp (make-load-form, make-load-form-saving-slots): gone
	* compiler.lisp (*load-forms*): new variable
	(compile-file): bind it

2001-07-18  Arseny Slobodjuck  <ampy@crosswinds.net>
	    Sam Steingold  <sds@gnu.org>

	* pathname.d (legal_namechar): PATHNAME_WIN32:
	 permit characters 197 and 206 (legal in CP1251)

2001-07-24  Sam Steingold  <sds@gnu.org>

	* init.lisp (*terminal-encoding*): fixed the export statement spelling

2001-07-23  Sam Steingold  <sds@gnu.org>

	ANSI CL make-load-form implemented
	* clos.lisp (make-load-form, make-load-form-saving-slots): added
	(print-class): removed
	(print-object): print class readably using #.;
	 print standard-objects readably using make-load-form
	(*dynamically-modifiable-generic-function-names*):
	 added make-load-form
	* constsym.d (make_init_form): added
	* init.lisp (make-load-form, make-load-form-saving-slots): export
	(make-init-form): added
	* io.d (pr_instance): when SYS::*COMPILING*, use MAKE-INIT-FORM

2001-07-22  Sam Steingold  <sds@gnu.org>

	Implemented *PRINT-LINES*
	* io.d (pphelp_newline): incf SYS::*PRIN-LINES*
	(check_lines_limit, double_dots): new functions
	(CHECK_LINES_LIMIT): new macro
	(justify_end_eng, justify_end_weit, pr_cons, pr_vector)
	(pr_array_recursion, pr_structure_default, pr_record_ab)
	(pr_record_rest, pr_record_descr, pr_orecord)
	(pr_cclosure_codevector): use it
	(pr_enter): bind SYS::*PRIN-LINES*
	(print_vars_anz): increased to 14
	(write, write-to-string): added :LINES arg
	* constsym.d: added :LINES, *PRINT-LINES* and SYS::*PRIN-LINES*
	* init.lisp: export *PRINT-LINES*
	* inspect.lisp (inspect): bind *PRINT-LINES* to *INSPECT-PRINT-LINES*
	* spvw.d (init_symbol_values): define *PRINT-LINES*
	 and SYS::*PRIN-LINES*
	* subr.d, subrkw.d (write, write-to-string): added :LINES arg

2001-07-21  Sam Steingold  <sds@gnu.org>

	massive reindentations and code re-arrangements
	* io.d (RTCase): new macro
	(token_info_t): renamed from token_info
	(zahl_info_t): renamed from zahl_info
	(pr_routine_t): renamed from pr_routine
	(CHECK_PRINT_READABLY): new macro
	(PPHELP_STREAM_P): new macro
	(circle_info_t): renamed from circle_info
	(triple_dots): new function
	(CHECK_LENGTH_LIMIT): new macro
	(UNREADABLE_START, UNREADABLE_END): new macros
	(pr_array_info_t): renamed from pr_array_info
	(pr_array_elt_routine_t): renamed from pr_array_elt_routine
	(pr_array_elt_simple): renamed from pr_array_elt_t

2001-07-20  Sam Steingold  <sds@gnu.org>

	* package.d (export_symbol_from): made congruent to
	`one_sym_function' to avoid a compiler warning

2001-07-20  Sam Steingold  <sds@gnu.org>

	mingw32 compilation
	* dirkey.d: mingw32 does not have winldap.h
	* lispbibl.d: mingw32 defined offsetof()
	* win32.d: mingw32 does not need a separate uAsciiChar
	* makemake.in (LIBS): mingw32 does not have wldap32
	(XCFLAGS): added -D_WIN32 -D__MINGW32__

2001-07-20  Sam Steingold  <sds@gnu.org>

	* pathname.d (SUBST_RECURSE): new macro
	(subst_coerce_normal_ss, subst_common_case, subst_logical_case)
	(subst_customary_case): use it
	(make-pathname): logical arguments do not override :CASE :COMMON

2001-07-19  Sam Steingold  <sds@gnu.org>

	* list.d (ldiff): handle dotted lists correctly [bug #442739]

2001-07-16  Sam Steingold  <sds@gnu.org>

	* version.h: 2.27 is released

2001-07-16  Sam Steingold  <sds@gnu.org>

	* stream.d (previous_line_virtual): fixed an off-by-one error

2001-07-16  Sam Steingold  <sds@gnu.org>

	* defstruct.lisp (defstruct): warn when the slot accessor shadows
	the predicate (i.e., when the slot is named "P")

2001-07-13  Bruno Haible  <haible@clisp.cons.org>

	* io.d (char_reader): do not search for hyphens.

2001-07-13  Sam Steingold  <sds@gnu.org>

	* stream.d (bitbuff_is_I): fixed the bin i/o for (signed-byte n)
	with n>32 on LITTLE_ENDIAN architecture

2001-07-12  Sam Steingold  <sds@gnu.org>

	abstracted some code
	* stream.d (bitbuff_iu_I, bitbuff_is_I): new functions
	(read-integer): use them
	(rd_by_iu_I): use bitbuff_iu_I()
	(rd_by_is_I): use bitbuff_is_I()
	(bitbuff_ixu_sub, bitbuff_ixs_sub): new functions
	(write-integer): use them
	(wr_by_ixu_sub): use bitbuff_ixu_sub()
	(wr_by_ixs_sub): use bitbuff_ixs_sub()

2001-07-11  Sam Steingold  <sds@gnu.org>

	YAPT (yet another pathname tweak)
	* pathname.d (lslashp): removed, replaced with slashp
	(looks_logical_p): new local function
	(parse-namestring): with *PARSE-NAMESTRING-ANSI* non-nil, parse as
	logical when pathname contains ";" - this is what others do
	(merge-pathnames): merge to logical even when only one is logical
	(make-pathname): coerce defaults to logical when the path is
	logical already

2001-07-10  Sam Steingold  <sds@gnu.org>

	* encoding.d, hashtabl.d, stream.d: unified some error messages

2001-07-10  Sam Steingold  <sds@gnu.org>

	finished the 2001-06-21 patch
	* lispbibl.d (make_file_stream): declare direction arg as direction_t
	* stream.d (make_unbuffered_stream, make_buffered_stream)
	(make_file_stream): ditto
	* dirkey.d (open_reg_key): declare if_not_exists arg as
	if_does_not_exist_t

2001-07-10  Sam Steingold  <sds@gnu.org>

	* condition.lisp (appease-cerrors, muffle-cerrors): do not cons
	up a lambda for handler
	(exit-on-error, appease-cerrors, muffle-cerrors, batchmode-errors):
	turned comments into doc strings

2001-07-10  Sam Steingold  <sds@gnu.org>

	* eval.d (invoke_handlers): do not popSTACK twice!

2001-07-10  Sam Steingold  <sds@gnu.org>

	replaced chartcopy with memcpy
	compilation time of compiler.lisp went down 3.76%
	fixed bug #[ 438486 ]
	* charstrg.d (chartcopy): removed
	* lispbibl.d (chartcopy): defined to expand to memcpy()

2001-07-09  Sam Steingold  <sds@gnu.org>

	* stream.d (handle_isset): use listen_byte() for binary sockets

2001-07-09  Sam Steingold  <sds@gnu.org>

	fixed the 2001-05-01 patch
	* spvw.d (main): call set_ansi only
	when either -ansi or -traditional was given

2001-07-03  Sam Steingold  <sds@gnu.org>

	tweak the 2001-06-27 patch
	* debug.d (read_form): ignore only whitespace

2001-06-29  Sam Steingold  <sds@gnu.org>

	command-oriented-history-2
	* constsym.d (*TERMINAL-READ-STREAM*): added
	* spvw.d (*TERMINAL-READ-STREAM*): define
	* stream.d (terminal_stream_p): use it
	* debug.d (read_form): bind it
	* io.d (string_reader): unbind *TERMINAL-READ-OPEN-OBJECT*
	in case of an error too

2001-06-27  Sam Steingold  <sds@gnu.org>

	command-oriented-history-1
	* constsym.d (*TERMINAL-READ-OPEN-OBJECT*): added
	* spvw.d (*TERMINAL-READ-OPEN-OBJECT*): define
	* lispbibl.d (terminal_stream_p): declare
	* stream.d (terminal_stream_p): define
	(rd_ch_terminal3): when *TERMINAL-READ-OPEN-OBJECT* is bound,
	add the new lines to the old history item
	(next_line_virtual, previous_line_virtual): readline helper
	functions
	(init_streamvars): bind them to M-p and M-n
	* io.d (read_token_1, read_delimited_list, string_reader): bind
	*TERMINAL-READ-OPEN-OBJECT*

2001-06-27  Sam Steingold  <sds@gnu.org>

	Fixed the win32/emacs bug when commands were ignored because of ^M
	* debug.d (read_form): use string_eqcomp_ci() instead of
	string_equal() and skip the extra chars in the line

2001-06-27  Sam Steingold  <sds@gnu.org>

	* stream.d (strip_white): new local function
	(rd_ch_terminal3): use it to trim the line

2001-06-27  Sam Steingold  <sds@gnu.org>

	non-whole byte i/o finally works
	* stream.d (rd_by_aux_icx_buffered): fixed (rewrote)

2001-06-25  Bruno Haible  <haible@clisp.cons.org>

	Optimize away local functions that are not used.
	This fixed the CLOS consing introduced on 2000-06-11 when
	CALL-NEXT-METHOD was defined with SYSTEM::FUNCTION-MACRO-LET.
	* compiler.lisp (var): New slot 'fnode'.
	(fnode): New slots 'Tags', 'far-used-vars', 'far-assigned-vars',
	'far-used-blocks', 'far-used-tagbodys'.
	(note-far-used-var, note-far-assigned-var, note-far-used-block)
	(note-far-used-tagbody, propagate-far-used): New functions.
	(c-VAR): If variable is defined in different fnode, store var
	for later propagation, instead of setting (var-closurep var).
	(c-VARSET): Likewise.
	(bind-fixed-var-1, process-fixed-var-list, bind-movable-var): Let the
	variable point to *func*.
	(c-LAMBDABODY): Set fnode-venvconst, fnode-far-used-blocks,
	fnode-far-used-tagbodys for use by the caller.
	(c-RETURN-FROM): If block is defined in different fnode, store it
	for later propagation, instead of setting (block-used-far block).
	(c-TAGBODY): Initialize tagbody-used-far differently. Compute
	tagbody-used-far only at the end.
	(c-GO): If tag is defined in different fnode, store it for later
	propagation, instead of augmenting (tagbody-used-far tagbody).
	(c-FUNCTION): After c-lambdabody, call propagate-far-used.
	(c-%GENERIC-FUNCTION-LAMBDA): Likewise.
	(c-%OPTIMIZE-FUNCTION-LAMBDA): Likewise.
	(c-FLET): After compiling the body and before deciding about the
	closurevars, call propagate-far-used.
	(c-LABELS): Likewise.
	(c-FUNCTION-MACRO-LET): Likewise.
	(c-GENERIC-FLET): Let the variable point to *func*.
	(c-GENERIC-LABELS): Likewise.
	(traverse-anode): For GO instructions, extract tag index that was
	computed at the end of the first pass.
	(compile-lambdabody): Make sure there are no lost closure variables.

2001-06-25  Bruno Haible  <haible@clisp.cons.org>

	* condition.lisp (handler-case): After signalling a warning for
	duplicated :NO-ERROR clause, don't treat it like a regular clause.

2001-06-16  Bruno Haible  <haible@clisp.cons.org>

	Back out unneeded 2001-04-06 patch.
	* makemake.in (NLS_INCLUDES): Set to empty if not using unicode.
	* encoding.d: When not UNICODE, don't include "nls_ascii.c" and don't
	define nls_ascii_table and nls_tables.
	* pseudofun.d: When not UNICODE, don't relocate nls_ascii_table.

2001-06-16  Bruno Haible  <haible@clisp.cons.org>

	Tweak 2001-03-27 patch.
	* eval.d (coerce_function): Mark unreachable code with NOTREACHED.
	(apply): Likewise.
	(funcall): Likewise.

2001-06-16  Bruno Haible  <haible@clisp.cons.org>

	* list.d (up2_test): Don't go through funcall() if the test function
	is #'eq, #'eql or #'equal.
	(up_test): Likewise.
	(funcall_key): New macro.
	(subst, nsubst, sublis, nsublis, member, ADJOIN, assoc, rassoc): Use
	it.

2001-06-23  Bruno Haible  <haible@clisp.cons.org>

	* aclocal.m4 (CL_GETPAGESIZE): Add check for sys/param.h. For mingw32.

2001-06-22  Sam Steingold  <sds@gnu.org>

	New debug command "Reset"(:re)
	to restore the i/o - *PACKAGE* and *READTABLE*
	* reploop.lisp (debug-reset-io): new function
	(*saved-debug-package*, *saved-debug-readtable*): new variables
	(commands1): bind "Reset" and ":re" to `debug-reset-io'

2001-06-21  Sam Steingold  <sds@gnu.org>

	SOCKET-STATUS now accepts SOCKET-SERVERs too
	and the direction of the checks can be specified
	* lispbibl.d (direction_t, if_does_not_exist_t, if_exists_t):
	 new enum types
	(check_direction, check_if_does_not_exist, check_if_exists)
	(input_stream_p, output_stream_p): declare
	* pathname.d (check_direction, check_if_does_not_exist)
	(check_if_exists): new global functions
	(OPEN): use them
	(open_file): use symbolic values for direction,
	if_exists and if_does_not_exist
	* stream.d (input_stream_p, output_stream_p): global functions now
	(READ_P, RO_P, WRITE_P, DIRECTION_FLAGS): new macros on direction_t
	(make_unbuffered_stream, make_buffered_stream, make_file_stream):
	 use them
	(socket_handle): new local function
	(handle_set, handle_isset): turned into functions
	(SOCKET-STATUS): accept socket servers too,
	 allow request specialization (just :INPUT or just :OUTPUT)
	* io.d (pr_stream): print stream direction
	* constobj.d (printstring_(input|output|io)): new constants
	* dirkey.d (DIR_KEY_*, IDNE_*, parse_if_not_exists)
	(parse_direction): removed
	(open_reg_key): convert from direction_t to REGSAM

2001-06-19  Sam Steingold  <sds@gnu.org>

	* stream.d: use memset(3) and memcpy(3) instead of dotimes

2001-06-19  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (c-FORMAT): avoid calling FORMAT altogether when
	the destination is T and the format string is constant

2001-06-19  Sam Steingold  <sds@gnu.org>

	* makemake.in (test): strip gensyms before cmp(1)

2001-06-17  Sam Steingold  <sds@gnu.org>

	some symbols appeared in wrong packages - fix this
	* compiler.lisp (function-signature): FOREIGN-FUNCTION is in FFI
	* constobj.d: added package prefixes to non-CL symbols
	* constsym.d (MACRO): all ttype designators are in EXT
	* describe.d: FOREIGN-FUNCTION, FOREIGN-VARIABLE, FOREIGN-ADDRESS
	are in FFI, FOREIGN-POINTER is in EXT
	* foreign1.lisp: export FOREIGN-* from FFI
	* init.lisp: export MACRO from EXT

2001-06-17  Sam Steingold  <sds@gnu.org>

	* disassem.lisp (orig-fundef): new aux function
	(disassemble): moved here and made into a generic function
	handle SYMBOL-MACROs too
	* compiler.lisp (disassemble): removed
	* init.lisp: load "disassem" after CLOS
	* makemake.in (LPARTS): reorder

2001-06-15  Sam Steingold  <sds@gnu.org>

	* makemake.in (makemake, Makefile): new development targets
	(RUN): new Makefile variable
	(halfcompiled): restored; now compilation goes like this:
	*.lisp --> interpreted.mem
	*.lisp + compiler.fas --> halfcompiled.mem
	*.fas --> lispinit.mem
	(stage): create a separate memory image for compilation testing
	and reset *GENSYM-COUNTER* in it from halfcompiled.mem

2001-06-15  Sam Steingold  <sds@gnu.org>

	* threads.lisp (with-timeout, with-lock): do not use WITH-GENSYMS
	which is defined only in inspect.lisp

2001-06-14  Sam Steingold  <sds@gnu.org>

	* stream.d (stream_char_p): new macro
	(socket-status): go through `listen_char()' for
	character streams only
	Reported by Lennart Staflin.

2001-06-12  Stefan Kain  <stefan.kain@freenet.de>

	* io.d: translated all comments

2001-06-11  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (compile-file-pathname-helper): thweak the
	2001-05-30 patch making sure FILE is treated as a pathname

2001-06-09  Sam Steingold  <sds@gnu.org>

	* constpack.d: create THREADS package when MULTITHREAD
	* spvw.d: put :MT into *FEATURES* when MULTITHREAD
	* threads.lisp: new file
	* init.lisp: load it when #+MT
	* makemake.in (LPARTS): add it
	* xthread.d (xthread_init) [win32]: noop
	(xmutex_init, xmutex_destroy, xmutex_lock, xmutex_unlock)
	[win32]: use GetLastError() to get the error status

2001-06-09  Sam Steingold  <sds@gnu.org>

	some MT compilation errors fixed
	* lispbibl.d (OS_error) [macro]: use asciz_out_1()
	(SP_bound) [MULTITHREAD]: no semicolon
	* spvw_circ.d: varbrace does not work with #if,
	so expand var manually

2001-06-09  Sam Steingold  <sds@gnu.org>

	* install.lisp: create CLISP.BAT on desktop

2001-06-08  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/libtool.m4: Upgrade to libtool-1.4.

2001-06-08  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/config.guess: Update to GNU version 2001-05-11.
	* autoconf/config.sub: Likewise.

2001-06-08  Sam Steingold  <sds@gnu.org>

	Fixed MIT-CLX build.
	* modules/clx/mit-clx/dependent.lisp (conditional-store):
	GET-SETF-METHOD is in EXT now
	Reported by Paolo Amoroso <amoroso@mclink.it>
	* modules/clx/mit-clx/manager.lisp (cut-buffer): use
	DEFINE-SETF-EXPANDER instead of DEFINE-SETF-METHOD
	* modules/clx/mit-clx/resource.lisp (initialize-resource-database):
	WM-RESOURCES is not exported from XLIB
	* modules/clx/mit-clx/package.lisp: added IN-PACKAGE statement

2001-06-07  Sam Steingold  <sds@gnu.org>

	Print (c-ptr (c-function)) with arguments and correct "()"
	* foreign1.lisp (element, deref, slot, cast, typeof, sizeof)
	(bitsizeof): new local (flet) function `foreign-place-p'
	(ctype-type): new function
	(parse-c-function, prepare-c-typedecl, to-c-typedecl)
	(note-c-call-in): use it
	(flag-set-p): new function
	(deparse-c-type, note-c-call-in, count-inarguments): use it
	(flag-to-language, language-to-flag): new functions
	(deparse-c-type, parse-c-function): use them, respectively
	(deparse-c-type): new labels: `new-type' and `deparse-slot'
	(split-c-fun-arglist): new function
	(note-c-call-in): use it
	(to-c-typedecl): print the function name in () for c-prt
	and also print the arglist

2001-06-07  Sam Steingold  <sds@gnu.org>

	* modules/clx/mit-clx/clx.lisp (boolean): built-in CLISP type
	since 1998-04-08, do not redefine
	* modules/clx/mit-clx/package.lisp (boolean): do not shadow
	Reported by Paolo Amoroso <amoroso@mclink.it>

2001-06-07  Sam Steingold  <sds@gnu.org>

	* makemake.in (LPARTS): add foreign1 only when foreign is in CPARTS

2001-06-02  Sam Steingold  <sds@gnu.org>

	* foreign1.lisp (to-c-typedecl): tweak the 2001-05-30 patch.
	struct t1234 { struct t1234 * NEXT; ... }

2001-06-02  Sam Steingold  <sds@gnu.org>

	made GETENV setfable
	* lispbibl.d: declare clisp_setenv()
	* subr.d, constsym.d: added SYS::SETENV (set_env)
	* spvw_language.d: removed mysetenv, use clisp_setenv()
	* misc.d (clisp_setenv, SETENV): new functions
	(GETENV): barf on non-string arg instead of returning NIL
	* places.lisp: defsetf getenv when setenv is present

2001-06-02  Sam Steingold  <sds@gnu.org>

	* makemake.in (LPARTS): added dirkey

2001-06-01  Sam Steingold  <sds@gnu.org>

	* screen.lisp: use DEFPACKAGE instead of USE-PACKAGE since this
	file is compiled even when it is not subsequently loaded.

2001-05-30  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (compile-file-pathname-helper): return a logical
	pathname when file is a logical pathname

2001-05-30  Sam Steingold  <sds@gnu.org>

	* pathname.d (merge-pathnames): fixed the 2001-05-24 patch to
	handle unbound defaults

2001-05-30  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (*package-tasks-treat-specially*): set to NIL
	(#+CROSS subr-info): `in-package' is now an always-evaluated macro
	(c-GLOBAL-FUNCTION-CALL): remove `in-package' from the list of
	specially treated tasks.

2001-05-30  Sam Steingold  <sds@gnu.org>

	* foreign1.lisp (with-defining-c-type): new macro
	(parse-components, c-struct-constructor): new functions
	(parse-c-type): use the above
	(to-c-typedecl): handle the recursive types (like linked lists)
	(def-c-enum): make `name' a synonym for `int'

2001-05-27  Sam Steingold  <sds@gnu.org>

	* modules/regexp/regexp.lisp (mregerror): FINALIZE is in EXT

2001-05-25  Sam Steingold  <sds@gnu.org>

	* install.lisp, install.bat: bind LISP, FAS and MEM files with CLISP
	* makemake.in: added install.* to the win32 binary distribution

2001-05-25  Sam Steingold  <sds@gnu.org>

	* dirkey.lisp (dir-key-info): `dkey-info' is in LDAP, not SYS
	(with-dir-key-search): ditto for `dkey-search-iterator',
	`dkey-search-next-key', and `dkey-search-next-att'

2001-05-24  Sam Steingold  <sds@gnu.org>

	* pathname.d (merge-pathnames): if PATHNAME is a logical
	namestring, while DEFAULT is a physical pathname, coerse DEFAULT
	to logical using whole_namestring().

2001-05-24  Sam Steingold  <sds@gnu.org>

	hostname resolution is now optional in
	SOCKET-STREAM-PEER and SOCKET-STREAM-LOCAL.
	* stream.d (host_data_fetcher): accept an additional boolean argument.
	(publish_host_data): pass `resolve_p' to func
	(SOCKET-STREAM-PEER, SOCKET-STREAM-LOCAL): 1 optional argument
	* subr.d: ditto
	* socket.d (socket_getlocalname, socket_getpeername): accept an
	additional `resolve_p' argument.

2001-05-23  Sam Steingold  <sds@gnu.org>

	* makemake.in (distrib): pack in the build directory.

2001-05-23  Sam Steingold  <sds@gnu.org>

	* version.h: 2.26 is released

2001-05-21  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (dfloat): ARM saves the doubles as two little-endian
	words, in big-endian order.
	Reported by Richard Kreckel.

2001-05-21  Bruno Haible  <haible@clisp.cons.org>

	* ariarm.d: Use #0x instead of #& to designate hexadecimal constants.

2001-05-15  Sam Steingold  <sds@gnu.org>

	* modules/clx/new-clx/clx.lisp: use DEFPACKAGE to define XLIB;
	 import SYS::CONCAT-STRINGS
	* modules/clx/new-clx/demos/clx-demos.lisp: load/compile
	 sokoban.lisp only when the package XPM is present

2001-05-14  Sam Steingold  <sds@gnu.org>

	* constobj.d (current_language): use the package prefix I18N

2001-05-14  Sam Steingold  <sds@gnu.org>

	* defs2.lisp (with-standard-io-syntax): finish the 2000-12-12
	patch - bind *PRINT-RPARS* and *PRINT-INDENT-LISTS* appropriately

2001-05-12  Sam Steingold  <sds@gnu.org>

	* pathname.d (pslashp, lslashp, Z_AT_SLASH, Z_SHIFT): new macros
	(parse_as_logical): new helper function
	(logical_pathname, merge_pathnames): use it
	(merge_pathnames): new macros SPECIFIED, NAMETYPE_MATCH, and
	 VERSION_MATCH; changed the previous patch: re-parse pathname
	 as logical when the default is logical
	(make_pathname): do not translate :name :wild to :name "*"
	(has_wildcards): replaced with wild_p() which handles :WILD
	(has_word_wildcards): ditto with word_wild_p()
	(has_*_wildcards): simplified accordingly

2001-05-11  Sam Steingold  <sds@gnu.org>

	* makemake.in (cpu): set to "arm" when "$host_cpu" is "arm*"
	Reported by Ola Rinta-Koski <ola@cyberell.com>.

2001-05-10  Sam Steingold  <sds@gnu.org>

	Fixed a crash, reported by Christophe Rhodes <csr21@cam.ac.uk>
	ANSI CL compliance: (merge-pathnames lp) --> lp
	* pathname.d: more debugging instrumentation
	(string2wild, wild2string): new macros
	(split_name_type): use them; "*.*" ==> :name :wild :device :wild
	(directory_namestring_parts): :name and :type maybe :wild
	(merge-pathnames): as per ANSI CL, return a logical pathname when
	 the first argument is one.
	(directory_match, nametype_match, version_match):
	 unbound matches everything
	(directory_diff, nametype_diff, version_diff):
	 treat unbound appropriately too
	(translate_device, translate_nametype_aux): :WILD is the same as NIL

2001-05-09  Sam Steingold  <sds@gnu.org>

	Implemented the ANSI CL issue CONSTANTP-ENVIRONMENT:ADD-ARG
	* control.d (constantp): accept the optional environment arg
	* subr.d (constantp): ditto

2001-05-09  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (ARM): Recognize __arm__ as CPU indicator on Linux

2001-05-09  Sam Steingold  <sds@gnu.org>

	ANSI CL compiler macros are implemented
	* cmacros.lisp: new file
	* makemake.in (LPARTS): added cmacros
	* compiler.lisp (env, mac-exp): new aux inline functions
	(macroexpand-1, c-form, compile-toplevel-form &c): use them
	(macroexpand-form): call COMPILER-MACRO-FUNCTION
	(inline-callable-function-lambda-p, inline-callable-lambdabody-p):
	 use FUNCTION-FORM-FUNFORM
	(c-FUNCTION-CALL, c-APPLY): use SIMPLE-FUNCTION-FORM-P
	* init.lisp: load cmacros; export COMPILER-MACRO,
	 COMPILER-MACRO-FUNCTION DEFINE-COMPILER-MACRO
	* defmacro.lisp (make-macro-expansion): accept an optional
	 PRE-PROCESS argument

2001-05-06  Bruno Haible  <haible@clisp.cons.org>

	* configure: Configure and build libiconv before configuring gettext.
	While configuring gettext, add the build directory to the CPPFLAGS and
	LDFLAGS, so that HAVE_ICONV gets defined to 1.

2001-05-07  Sam Steingold  <sds@gnu.org>

	* hashtabl.d (sxhash): return a fixnum, as per ANSI CL

2001-05-06  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: Move USE_GETTEXT treatment after USE_LIBICONV treatment,
	so that $LIBS contains libintl.a before libiconv.a.

2001-05-06  Sam Steingold  <sds@gnu.org>

	* eval.d (check_for_illegal_keywords): look only at the first
	:allow-other-keys keyword

2001-05-05  Sam Steingold  <sds@gnu.org>

	handle devices in hostname translation correctly
	* pathname.d (device_diff): push_solution_with(S(Kdevice))
	(translate_device): pop (S(Kdevice))

2001-05-05  Sam Steingold  <sds@gnu.org>

	* type.lisp (subtypep): COMPILED-FUNCTION is a subtype of FUNCTION

2001-05-05  Sam Steingold  <sds@gnu.org>

	* clos.lisp (function-keywords): return 2 values: list of keywords
	and allow-other-keys-flag, as per ANSI CL

2001-05-05  Sam Steingold  <sds@gnu.org>

	Made the compiler a little less vociferous
	* clos.lisp (check-signature-congruence): extracted from
	STD-ADD-METHOD
	(std-add-method): use CHECK-SIGNATURE-CONGRUENCE

	* compiler.lisp (c-DEFUN): do not check signature for generic
	functions since this is better done at load time

2001-05-04  Sam Steingold  <sds@gnu.org>

	ANSI CL compliance: CHAR does not check for FILL-POINTER, ELT does.
	* sequence.d (seq_check_index): new function
	(elt, setelt): use it
	* charstrg.d (unpack_string): new function
	(unpack_string_rw, unpack_string_ro): use it
	(char, store_char): call unpack_string() directly
	instead of unpack_string_r[ow]

2001-05-04  Sam Steingold  <sds@gnu.org>

	Added compile-time signature checking in function calls
	* compiler.lisp (c-source-location): 2 optional arguments
	(c-source-point, c-source-point-location, current-function)
	(get-signature, sig-to-list, inline-lambdabody)
	(inline-callable-lambdabody-p, lambda-list-to-signature)
	(match-known-unknown-functions, in-defun-p): new functions
	(c-warn): use C-COMMENT and CURRENT-FUNCTION
	(c-error): use CURRENT-FUNCTION
	(signature): new defstruct
	(function-signature, signature-to-list): moved here from
	 describe.lisp
	(test-argument-syntax): reindented
	(c-DIRECT-FUNCTION-CALL, pass2): translated the comments
	(c-GLOBAL-FUNCTION-CALL, C-APPLY): always check the signature
	 always call NOTE-FUNCTION-USED, not just when compiling a file;
	 use INLINE-CALLABLE-LAMBDABODY-P and INLINE-LAMBDABODY
	(note-function-used): keep the arguments too
	(c-DEFUN): check the signature using *KNOWN-FUNCTIONS*
	(inline-callable-function-p): use INLINE-CALLABLE-LAMBDABODY-P
	(c-FUNCTION): always call NOTE-FUNCTION-USED
	(c-report-problems): use MATCH-KNOWN-UNKNOWN-FUNCTIONS
	(compile-file): call C-REPORT-PROBLEMS before reporting
	 *ERROR-COUNT* and *WARNING-COUNT*
	(c-form): use IN-DEFUN-P
	* clos.lisp: import SIGNATURE structure from COMPILER and use
	 them instead of simple lists throughout the file
	* constobj.d (version): bumped (generic functions use SIGNATUREs
	 instead of lists to store their signatures)
	* describe.lisp (function-signature, signature-to-list):
	 moved to compiler.lisp
	(arglist): use SIG-TO-LIST and GET-SIGNATURE to accommodate
	 possible future modifications
	* foreign1.lisp (DEF-CALL-OUT, DEF-LIB-CALL-OUT):
	 pass signature to C-DEFUN
	(argvector-to-signature, count-inarguments): new functions
	(foreign-function-signature): renamed to
	 FOREIGN-FUNCTION-IN-ARG-COUNT
	* init.lisp (defun): pass signature to C-DEFUN

2001-05-01  Sam Steingold  <sds@gnu.org>

	* type.lisp (subtypep): handle types NIL and T specially
	[bugfix: (subtypep 'EXTENDED-CHAR 'CHARACTER) returned (NO)]

2001-05-01  Sam Steingold  <sds@gnu.org>

	* format.lisp: pass width to ~a when a non-number is
	given to a numeric format instruction

2001-05-01  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): added "-traditional" command line
	option to override "-ansi" ("-a" deprecated)

2001-05-01  Sam Steingold  <sds@gnu.org>

	* condition.lisp (handler-case): accept :NO-ERROR clause in any
	position, not just the last one

2001-04-30  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (test-argument-syntax): call C-WARN and return NIL
	on WRONG-KEY, instead of calling C-ERROR
	(*deprecated-functions-list*): added GET-SETF-METHOD-MULTIPLE-VALUE

2001-04-25  Sam Steingold  <sds@gnu.org>

	* runprog.lisp (run-shell-command, run-program): accept :wait
	parameter (defaults to T)
	* clhs.lisp (clhs): pass :wait nil to RUN-PROGRAM

2001-04-25  Sam Steingold  <sds@gnu.org>

	* eval.d (invoke_handlers): fixed the 2001-04-18 patch for Linux

2001-04-24  Sam Steingold  <sds@gnu.org>

	* intgcd.d (I_I_xgcd_I_I_I): do not use bit operations for logical
	variables sA and sB (this caused incorrect results on alpha-tru64)

2001-04-24  Sam Steingold  <sds@gnu.org>

	* bindings/linuxlibc5/linux.lisp, bindings/linuxlibc6/linux.lisp:
	added package prefix to IN-PACKAGE and DELETE-PACKAGE

2001-04-23  Sam Steingold  <sds@gnu.org>

	* makemake.in (linkkit): rm-r it before creating links

2001-04-23  Sam Steingold  <sds@gnu.org>

	* affi1.lisp: use DEFPACKAGE to define package AFFI

2001-04-22  Sam Steingold  <sds@gnu.org>

	Finished re-packaging in the modules directory
	* bindings/amigaos/asl-load.lisp, bindings/amigaos/window.lisp,
	bindings/linuxlibc5/linux.lisp, bindings/linuxlibc6/linux.lisp,
	clx/mit-clx/package.lisp, modules/postgresql642/postgresql.
	modules/postgresql632/postgresql.lisp, modules/wildcard/wildcard.lisp:
	use DEFPACKAGE, not CLtL1 IN-PACKAGE
	* new-clx/demos/clx-demos.lisp: getenv is in EXT, not SYS now,
	use strings, not symbols in DEFPACKAGE

2001-04-20  Sam Steingold  <sds@gnu.org>

	* constobj.d (version): bump the bytecode version due to repackaging

2001-04-19  Sam Steingold  <sds@gnu.org>

	* clhs.lisp (clhs): BROWSER defaults to *BROWSER*, not :netscape

2001-04-18  Sam Steingold  <sds@gnu.org>

	* spvw.d (main): quote load_extra_file_types for `clisp file`

2001-04-18  Sam Steingold  <sds@gnu.org>

	Move EXECUTE from COMMON-LISP to EXT
	* constsym.d (EXECUTE): in EXT, not LISP
	* init.lisp (export): export EXECUTE from EXT

2001-04-18  Sam Steingold  <sds@gnu.org>

	ANSI CL compliance: HANDLER-BIND uses multiple handlers
	for the a single error
	* compiler.lisp (c-HANDLER-BIND): collect all handlers, even for
	duplicate types
	* eval.d (invoke_handlers): go over the whole list of handlers,
	not stopping after the first match has been found.

2001-04-18  Sam Steingold  <sds@gnu.org>

	* compiler.lisp (stream-tab): new function
	(disassemble-closure): use it

2001-04-16  Sam Steingold  <sds@gnu.org>

	* io.d (CHECK_READTABLE): new macro
	(unread-char, write-char): use fehler_char()

2001-04-16  Sam Steingold  <sds@gnu.org>

	* sequence.d (valid_type): CONS and NULL are sequences of type LIST

2001-04-11  Sam Steingold  <sds@gnu.org>

	* socket.d: made compilable with SAFETY=3
	(SERVENT_TO_STACK): turned into a local function servent_to_stack()
	(ADDR_TO_STRING): return NIL, not NULL, as the failure value
	(HOSTENT_TO_STACK): turned into a local function hostent_to_stack()

2001-04-11  Sam Steingold  <sds@gnu.org>

	Merged FLET with SYS::%FLET (same for LABELS & MACROLET)
	* init.lisp (flet, labels, macrolet): removed
	(%expand-form): removed flet, labels and macrolet
	do not load "defs3"
	* defs3.lisp: removed
	* compiler.lisp (skip-declarations): new function
	(c-flet, c-labels, c-macrolet): use it
	* constsym.d (pflet, plabels, pmacrolet): removed
	* control.d (skip_declarations): new function

2001-04-10  Bruno Haible  <haible@clisp.cons.org>

	Support for MacOS X.
	* lispbibl.d (RS6000): Define if __ppc__ is defined.
	(TIME_ABSOLUTE, TIME_RELATIVE): Undefine after pulling in the system
	headers.
	* socket.d (in6_u, u6_addr16) [UNIX_DARWIN]: Define as aliases.
	Thanks to Daniel Buenzli and Sunil Mishra for feedback.

2001-04-09  Sam Steingold  <sds@gnu.org>

	* spvw.d (*features*): added :LISP=CL to denote the re-packaging

2001-04-09  Sam Steingold  <sds@gnu.org>

	* type.lisp (upgraded-complex-part-type): ANSI CL compliance -
	trivial function, always returns T
	* init.lisp (upgraded-complex-part-type): exported

2001-04-09  Sam Steingold  <sds@gnu.org>

	* init.lisp (sys::*home-package*): set to NIL at the end

2001-04-06  Sam Steingold  <sds@gnu.org>

	The grand repackaging: USER+CL-USER; LISP+CL
	* amigasock.lisp, beossock.lisp: no export (done in init.lisp)
	* cfgacorn.lisp, cfgamiga.lisp, cfgdos.lisp, cfgsunux.lisp,
	cfgunix.lisp, cfgwin32.lisp, clhs.lisp: (in-package "EXT")
	* clos.lisp: use I18N temporarily (for ENGLISH)
	* compiler.lisp (c-form-table): treat sys::%flet and friends just
	like cl:flet and friends
	* condition.lisp: moved CLISP extensions, like `muffle-cerrors',
	to the EXT package
	* constobj.d (use_default): set to COMMON-LISP
	* constpack.d: added EXT, I18N, GRAY and CUSTOM,
	and, conditionally, LDAP, SOCKET and GSTREAM
	* constsym.d: moved CLISP extensions to EXT or a more specific
	package, if appropriate
	* control.d, fsubr.d:
	renamed flet->%flet; labels->%labels; macrolet->%macrolet
	* defs1.lisp (doseq, dohash): export from EXT
	(fbound-string): moved to init.lisp
	* defs2.lisp (use-default): COMMON-LISP now
	* defs3.lisp: removed everything except for flet and friends
	* dirkey.d, lisparit.d: fixed comments
	* dirkey.lisp: export everything from LDAP and re-export from EXT
	* dutch.lisp, french.lisp, german.lisp, spanish.lisp: moved to I18N
	* edit.lisp, runprog.lisp, savemem.lisp: export from EXT, not LISP
	* eval.d (FUNTAB): removed `in_package',
	added `pfind_package' and `reexport'
	* foreign1.lisp: use COMMON-LISP and EXT in FFI
	* gray.lisp: extracted from gstream.lisp
	* gstream.lisp: moved to GSTREAM package
	* init.lisp: separated LISP exported symbols into COMMON-LISP and
	EXT (and friends);
	(in-package): define here
	(flet, labels, macrolet): added temporary definitions
	* inspect.lisp: export use variables from CUSTOM
	* keyboard.lisp (with-keyboard, *keyboard-input*): export from EXT
	* loop.lisp: in COMMON-LISP
	* macros1.lisp (mapcap, maplap): export from EXT
	* macros2.lisp (without-floating-point-underflow, space)
	(with-output-to-printer): export from EXT
	(deflanguage, definternational, deflocalized, localized):
	 export from I18N
	* macros3.lisp (ethe, letf, letf*, with-collect): export from EXT
	* makemake.in (LPARTS): added gray
	* misc.d (set_ansi): do not bother with *features*
	* package.d (in_package): removed
	(reexport): new function
	(init_packages): COMMON-LISP (= LISP, CL); COMMON-LISP-USER (=
	USER, CL-USER)
	* places.lisp (*ansi*): updated the doc string
	(dir-key-value): moved here from dirkey.lisp
	* posix.lisp: re-export from EXT exported symbols
	* reploop.lisp (*prompt*): export from CUSTOM
	(*command-index*, prompt-new-package, package-short-name): export
	from EXT
	* rexx1.lisp: defpackage REXX and export everything from it
	* screen.lisp: use COMMON-LISP and EXT in SCREEN
	* spvw.d (init_symbol_tab_2): added `enum_user_index' to the enum,
	export everything in SOCKET and CUSTOM
	(*features*): replaced :cltl2 with :ansi-cl;
	add :generic-streams when GENERIC_STREAMS is defined
	and :sockets when SOCKET_STREAMS is defined
	(main): -p: is the package does not exist, do not create it;
	-a: do not call `in-package'
	* subr.d (reexport): added
	(in_package): removed
	* subrkw.d (in_package): removed
	* trace.lisp (*trace-function*, *trace-args*, *trace-form*)
	(*trace-values*): export from EXT, not LISP
	* type.lisp (type-expand-1, type-expand): export from EXT, not LISP
	* xcharin.lisp: export from EXT, not LISP

2001-04-06  Sam Steingold  <sds@gnu.org>

	Symbols in FAS files remember their home packages and do not
	depend as much on the special treatment of the package tasks,
	which is now optional.
	This constitutes a switch from the "current-package" model to the
	"home-package" model as described in COMPILE-FILE-SYMBOL-HANDLING
	<http://www.lisp.org/HyperSpec/Issues/iss063.html>
	* constsym.d (*print-symbols-long*): new variable
	* spvw.d (init_symbol_values): define it
	* io.d (pr_symbol): respect it
	* compiler.lisp (*package-tasks-treat-specially*): new variable
	(c-GLOBAL-FUNCTION-CALL, compile-toplevel-form): use it
	(compile-toplevel-form): bind *print-symbols-long* to t
	 when writing to *fasoutput-stream*

2001-03-23  Sam Steingold  <sds@gnu.org>

	Removed the obsolete `COMMON' type (not in ANSI)
	See issue COMMON-TYPE:REMOVE
	<http://www.lisp.org/HyperSpec/Issues/iss057.html>
	* constsym.d (commonp): removed
	* eval.d (FUNTAB): removed `commonp'
	* predtype.d (commonp): removed
	* subr.d (commonp): removed
	* compiler.lisp (subrinfo, c-DIRECT-FUNCTION-CALL): removed `commonp'
	(*declaration-types*): removed `common'
	* init.lisp (commonp, common): removed
	* type.lisp (common): removed
	(canonicalize-type): removed `common'

2001-04-06  Sam Steingold  <sds@gnu.org>

	* version.h: 2.25.1 is released

2001-04-06  Sam Steingold  <sds@gnu.org>

	fixed the --without-unicode build
	* makemake.in (NLS_INCLUDES): always has `nls_ascii'
	* encoding.d: include "nls_ascii.c" and define `nls_tables'
	even without unicode
	* pseudofun.d: define `nls_ascii_table' even without unicode

2001-04-05  Sam Steingold  <sds@gnu.org>

	* clos.lisp (initialize-instance): [ANSI] added &key and
	&allow-other-keys to the lambda-list

2001-03-28  Sam Steingold  <sds@gnu.org>

	* condition.lisp (simple-type-error): [ANSI]
	inherit from `simple-condition', not `simple-error'

2001-03-28  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (translate_pathname): Fix invalid use of ## in GET_ITEM_S.

2001-03-27  Sam Steingold  <sds@gnu.org>

	fixed a bug: macros were reported as special forms by funcall &Co
	* eval.d (fehler_specialform): report special operators as such,
	not as special forms
	(coerce_function, funcall, apply): not all orecords are
	special operators
	* control.d (FMAKUNBOUND): error message spelling
	* trace.lisp (trace1): ditto
	* init.lisp (defun): ditto
	* defs1.lisp (fbound-string): ditto

2001-03-27  Sam Steingold  <sds@gnu.org>

	* package.d (symtab_lookup, shadowing_lookup):
	check sym_ for being non-NULL
	(inherited_lookup, inherited_find): new local functions
	(accessiblep, find_symbol, import, unexport, export): use them

2001-03-27  Bruno Haible  <haible@clisp.cons.org>

	* package.d (SYSTEM::PACKAGE-ITERATE): When looking for inherited
	symbols, ignore symbols that are simultaneously exported from the
	used package and present in the main package.
	Reported by Sam Steingold.

2001-03-22  Sam Steingold  <sds@gnu.org>

	fixed a bug: a single value was sometimes returned by `read-line'
	* io.d (eof_handling): mv_count argument added
	(read_w, READ-CHAR, PEEK-CHAR, READ-CHAR-NO-HANG): respect that
	(READ-LINE): always return 2 values

2001-03-22  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (sstring_normal_p): Fix typo.

2001-03-21  Bruno Haible  <haible@clisp.cons.org>

	Make it possible to compile gstream.lisp with interpreted.mem.
	* compiler.lisp: Compile #'venv-search.

2001-03-21  Bruno Haible  <haible@clisp.cons.org>

	* misc.d: Include <stdio.h>.

2001-03-21  Bruno Haible  <haible@clisp.cons.org>

	Make --without-unicode work again.
	* error.d (write_errorasciz_substring): Fix typo.
	* init.lisp: Load "spanish" only if UNICODE.
	* makemake.in (LPARTS): Add "spanish" only if UNICODE is enabled.
	* type.lisp (charset-subtypep): Avoid warning.
	* stream.d (test_external_format_arg) [!UNICODE]: Accept and ignore
	any symbols in the CHARSET package.

2001-03-20  Bruno Haible  <haible@clisp.cons.org>

	* configure: Add trailing slash to www.lisp.org URL.
	* cfgacorn.lisp (*clhs-root-default*): Likewise.
	* cfgamiga.lisp (*clhs-root-default*): Likewise.
	* cfgdos.lisp (*clhs-root-default*): Likewise.
	* cfgwin32.lisp (*clhs-root-default*): Likewise.
	* makemake.in (HSDEFAULT): Likewise.
	(hyperspec): Check existence of directory if it's an absolute
	directory. Remove trailing slash afterwards.
	* clhs.lisp (clhs): Accept a clhs-root with or without trailing slash.

2001-03-20  Bruno Haible  <haible@clisp.cons.org>

	* compiler.lisp (compile-file-pathname-helper): Rewritten. Obey
	output-file's directory even if it is a relative directory.

2001-03-19  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (find_executable): Use strcpy instead of sprintf.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* spvw_memfile.d (DUMPHOST_LEN): New macro.
	(memdump_header): Make _dumphost size OS independent.
	(savemem): Simplify filling of hostname and _dumphost. Use UTF-8
	encoding.
	(loadmem): Move extraction of _dumptime and _dumphost to the end.
	Use UTF-8 encoding.

	* socket.d (MACHINE-INSTANCE): Return hostname as returned by
	gethostbyname, i.e. including the domainname.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* clhs.lisp: Export CLHS-ROOT.
	* cfgunix.lisp: Export CLHS-ROOT and *CLHS-ROOT-DEFAULT*.
	* cfgacorn.lisp: Likewise.
	* cfgamiga.lisp: Likewise.
	* cfgdos.lisp: Likewise.
	* cfgsunux.lisp: Likewise.
	* cfgwin32.lisp: Likewise.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* clisp-link.in: Pass -B argument to all lisp.run invocations.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* .clisp: New file.
	* makemake.in: Link .clisp and .gdbinit into the build dir.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Cache $host_alias. Needed
	by AC_CANONICAL_BUILD. Call config.guess and config.sub via
	$CONFIG_SHELL if set.

2001-03-18  Bruno Haible  <haible@clisp.cons.org>

	* condition.lisp (interrupt-condition, simple-interrupt-condition):
	New condition classes.
	(%defclcs): Add interrupt-condition -> simple-interrupt-condition
	mapping.
	(exitunconditionally): New function.
	(exitonerror): Use it.
	(exit-on-error): Don't bind *BREAK-DRIVER*, as that impacts saved
	memory images. Instead, establish a handler for INTERRUPT-CONDITION.
	Generalize the normal handler from ERROR to SERIOUS-CONDITION.
	(batchmode-break-driver): Remove function.
	* lispbibl.d (conditiontype): Add interrupt_condition.
	* error.d (tast_break): When (and (null *error-handler*) *use-clcs*),
	signal a condition of type INTERRUPT-CONDITION.
	* spvw_sigint.d (react_on_sigint, interrupt_handler): Signal an
	INTERRUPT-CONDITION, more specific than a SERIOUS-CONDITION.
	* stream.d (fehler_interrupt): Likewise.

	* savemem.lisp (saveinitmem): Also reset SYSTEM::*ACTIVE-RESTARTS* and
	SYSTEM::*CONDITION-RESTARTS*. Reset the dynamic variables in the new
	image, not in the old.

2001-03-19  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (PARSE-NAMESTRING): Coerce string to normal-simple-string
	before calling parse_logical_host_prefix.

	* lispbibl.d (sstring_normal_p): New macro.
	* pathname.d (parse_logical_word, parse_logical_host_prefix)
	(legal_logical_word, legal_name, legal_type, wildcard_match)
	(wildcard_diff): assert that the simple-string is normal.

2001-03-19  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/libtool.m4: Upgrade to libtool-1.3.5.
	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Always define
	ac_config_guess and ac_config_sub. Then ignore requests for
	AC_CONFIG_AUX_DIR_DEFAULT or AC_CANONICAL_HOST.

2001-03-18  Sam Steingold  <sds@gnu.org>

	* init.lisp: do not export `interpreter' & `compiler' from LISP
	for `*features*', since they are keywords now.

2001-03-17  Sam Steingold  <sds@gnu.org>

	load-inside-load bug fix
	* pathname.d (parse_logical_word, parse_logical_host_prefix)
	(legal_logical_word, legal_name, legal_type, wildcard_match)
	(wildcard_diff): make sure that the `simple-string' is normal.

2001-03-16  Sam Steingold  <sds@gnu.org>

	`compile-file-pathname' bug fix
	* compiler.lisp (compile-file-pathname-helper): new function
	(compile-file-pathname, compile-file): use it

2001-03-15  Bruno Haible  <haible@clisp.cons.org>

	* Makefile.devel (all): Depend on src/VERSION instead of src/version.h.
	(ffcall-i386): New target.
	* spvw_memfile.d (savemem): Zero-fill the rest of _dumphost.
	* spvw.d (main): Do complain about missing -B in all cases.
	(usage): Internationalize.

2001-03-14  Sam Steingold  <sds@gnu.org>

	New versioning system adopted.
	* spvw.d (main): --version works without -B and -M
	  we are now GNU CLISP!
	  do not complain about missing -B when given -x
	* constobj.d (lisp_implementation_version_month_string): removed
	(lisp_implementation_version_date_string): set to VERSION_DATE
	(lisp_implementation_version_number_string): set to VERSION_NUMBER
	(lisp_implementation_version_built_string): set to __DATE__
	(memory_image_timestamp, memory_image_host): new objects
	* makemake.in: VERSION depends on version.h now
	* Makefile.devel: ditto; remove `update-version', unused for 2.5 years
	* misc.d (lisp-implementation-version): return "2.25 (2001-03-15)"
	  and then either the build date of the build host
	* spvw_memfile.d (memdump_header): added `_dumptime' and `_dumphost'
	(savemem, loadmem_from_handle): use them for
	  `memory_image_timestamp' and `memory_image_host'

2001-03-13  Sam Steingold  <sds@gnu.org>

	X3J13 vote <72> unconditionally implemented.
	* compiler.lisp (c-form): do not check (package-use-list *package*)
	* eval.d (other_self_evaluating_p): removed
	(eval1): do not call it

2001-03-09  Sam Steingold  <sds@gnu.org>

	A Logical Pathnames bug fixed.
	* pathname.d (host_diff): when HAS_HOST, push `:host' onto solutions
	(device_diff): when HAS_DEVICE, push `:device' onto solutions
	(translate_host): respect and expect `:host' in `subst'
	(translate_device): respect and expect `:device' in `subst'
	also, added a pathname translation debugging infrastructure
	also, translated some German coments

2001-03-09  Sam Steingold  <sds@gnu.org>

	* posix.lisp (sysinfo): Export structure accessors.

2001-03-07  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (lisp_completion): Remove end_callback() call from last
	  patch.

2001-03-06  Sam Steingold  <sds@gnu.org>

	* stream.d (lisp_completion): [Bug #221956] check the return value
	of `sys::completion'.

2001-03-06  Bruno Haible  <haible@clisp.cons.org>

	* unix.d (EDQUOT): Undefine if it is negative.

2001-03-02  Sam Steingold  <sds@gnu.org>

	* dirkey.d: include winldap.h on WIN32_NATIVE and define LDAP there
	(LDAP_PORT): conditionally define
	(dir_key_open): early LDAP support
	do not barf on ACCESS_DENIED in search:
	(IDNE_IGNORE): new constant for `init_iteration_node'
	(open_reg_key): handle it
	(init_iteration_node): use it; return 2 values
	(state_next_key): pop stack on NULL handle
	(dkey_search_next_key): return 2 values
	Bruno's memory fixes
	(MAKE_OBJECT_LIST, dir_key_value, dkey_info): alloca may be a macro
	* constsym.d (:LDAP): define on WIN32_NATIVE
	* makemake.in (LIBS): link with wldap32 on WIN32_NATIVE
	* dirkey.lisp (dir-key-dump-tree): reflect the new iteration interface

2001-03-02  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (lisp_completion_ignore): New function.
	(lisp_completion): Use CATCH and HANDLER-BIND to catch conversion
	  errors. Skip symbols that are not convertible to *terminal-encoding*.

2001-02-28  Bruno Haible  <haible@clisp.cons.org>
	    Sam Steingold  <sds@gnu.org>

	* defmacro.lisp (analyze-rest): Allow destructuring for the
	  &REST/&BODY variable.

2001-02-21  Bruno Haible  <haible@clisp.cons.org>

	* places.lisp (PROGN, LOCALLY, IF): New defsetf expanders.

2001-02-17  Arseny Slobodjuck  <ampy@crosswinds.net>
	    Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (SCREEN): Also define on WIN32_NATIVE.
	* stream.d [WIN32_NATIVE]: Implement window streams for SCREEN package.
	(console_handle, console_size, console_cursor_pos)
	(console_needtoclose, screenattr, attr_table, attr): New variables.
	(InitConsole, DoneConsole, v_up, v_cb, v_cs, v_ce, v_cl, v_cd)
	(v_scroll, v_al, v_dl, v_su, v_move, v_put, wr_ch_window)
	(MAKE-WINDOW, close_window, WINDOW-*): New functions.

2001-02-08  Bruno Haible  <haible@clisp.cons.org>

	* cfgunix.lisp: Mark the file as being UTF-8 encoded, so it can be
	  loaded and compiled in any locale.
	* cfgacorn.lisp: Likewise.
	* cfgamiga.lisp: Likewise.
	* cfgdos.lisp: Likewise.
	* cfgsunux.lisp: Likewise.
	* cfgwin32.lisp: Likewise.
	Reported by Ulrich Drepper <drepper@redhat.com>.

2001-02-07  Sam Steingold  <sds@gnu.org>

	* inspect.lisp: Fixed bug #[ 130567 ]: unbound slots.
	(*inspect-unbound-value*): new internal variable
	(inspect-cllib): bind it
	(inspect-backend): use it for unbound symbols and slots
	(get-insp): call `insp-check' only when `insp' is non-NIL

2001-02-06  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (ICONV_CONST) [!UNIX]: New macro.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (iconv_init): Remove macro, not needed any more since
	  libiconv-1.5.
	(iconv): Define as macro, to cast second argument.
	(iconv_mblen, iconv_mbstowcs, iconv_wcslen, iconv_wcstombs)
	(iconv_range, ChannelStream_init): Don't call iconv_init.

2001-02-04  Sam Steingold  <sds@gnu.org>
	    Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (whole_namestring): Don't set subr_self.
	(file_namestring): New function.
	(FILE-NAMESTRING): Simplification: Call file_namestring.
	(ENOUGH-NAMESTRING): Set subr_self before calling whole_namestring.
	(assure_dir_exists): Simplification: Call directory_namestring and
	  whole_namestring.
	(change_default): Simplification: Call directory_namestring.
	(NAMESTRING): Set subr_self before calling whole_namestring.
	(directory_exists): Simplification: Call directory_namestring.
	(directory_search): Simplification: Call file_namestring.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_STDBOOL_H): New macro.
	* configure.in: Invoke it.
	* unixconf.h.in (HAVE_STDBOOL_H): New macro.
	* makemake.in (EVERY_INCLUDES_H): Add stdbool.h, unless the system
	  has it.
	(stdbool.h): New rule.
	(clean4): Remove stdbool.h.
	* lispbibl.d (boolean, FALSE, TRUE): Remove definitions. Include
	  stdbool.h instead.
	* All *.d: Use bool/false/true instead of boolean/FALSE/TRUE.
	* genclisph.d (main): Include or copy stdbool.h instead of defining
	  boolean/FALSE/TRUE.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (translate_directory): Don't choke if 'subst' doesn't
	  specify any pieces for the directory.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (PARSE-NAMESTRING): Make treatment of :HOST argument CLHS
	  compliant.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* spvw.d (init_symbol_values): Initialize
	  SYS::*LOGICAL-PATHNAME-TRANSLATIONS* to an EQUALP hash table.

2001-02-04  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d: Back out Sam's 2001-01-03 and 2001-01-04 patches.
	(host_namestring_parts): Use "\\\\" instead of twice "\\".
	(directory_namestring): Include the host namestring parts.
	(MERGE-PATHNAMES): If pathname's host is NIL but pathname's device
	  is non-NIL, on Win32, don't take the defaults' host+device.
	(MAKE-PATHNAME): If pathname's host and device are both non-NIL on
	  Win32, signal an error.
	(use_default_dir) [OS2, WIN32]: If the pathname already has a host:
	  1. Don't insert the default drive. 2. Resolve :RELATIVE to
	  :ABSOLUTE.
	(assure_dir_exists): Include host_namestring_parts.
	(directory_exists): Likewise.
	(CD): Signal error if pathname includes a host.

2001-02-03  Bruno Haible  <haible@clisp.cons.org>

	* configure: Also copy gettext/autoconf.
	* makemake.in (libintl.h): Link to gettext/intl/libintl.h.
	* lispbibl.d (GETTEXTL): New macro.
	(clgettextl): New declaration.
	* amigaaux.d: Use GETTEXTL instead of GETTEXT for strings to be output
	  via asciz_out().
	* spvw.d: Likewise.
	* spvw_alloca.d: Likewise.
	* spvw_allocate.d: Likewise.
	* spvw_fault.d: Likewise.
	* spvw_garcol.d: Likewise.
	* spvw_memfile.d: Likewise.
	* spvw_mmap.d: Likewise.
	* spvw_multimap.d: Likewise.
	* spvw_sigsegv.d: Likewise.
	* spvw_language.d (init_language): Call bindtextdomain also for domain
	  "clisplow". Remove textdomain() call. Call bind_textdomain_codeset.
	(to_latin_table, from_latin_table, cvgettext): Remove.
	(clgettext): Call dgettext with domain "clisp".
	(clgettextl): New function.
	(localized_string): Check argument must be in ASCII. clgettext()
	  returns value in UTF-8.
	(localized_object): Likewise.
	* error.d (write_errorasciz_substring): New function.
	(write_errorasciz): Use it.
	(write_errorstring): Move into string segment after segment, not
	  byte after byte.
	* errunix.d (get_errormsg): Use GETTEXTL instead of GETTEXT, so the
	  strings end up in both clisp.mo and clisplow.mo.
	(OS_error_internal): Define 'translate' as clgettext, for UTF-8
	  converted translation.
	(errno_out): Define 'translate' as clgettextl, for locale dependent
	  encoded translation.

2001-02-01  Bruno Haible  <haible@clisp.cons.org>

	* io.d (pr_sstring_ab): Make GC safe.

2001-02-01  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (read_line): When EOF was reached, always set
	  strm_rd_ch_last to eof_value.

2001-01-29  Sam Steingold  <sds@gnu.org>

	* pathname.d (PARSE-NAMESTRING): use `slashp' when parsing UNC
	pathnames, so that //host/dir/file is the same as \\host\fir\file.

2001-01-27  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d: Add IA-64 support.
	(object) [WIDE_HARD]: Use the 1-element struct or directly 'void *'.
	* spvw_mmap.d (mmap_init_pagesize): On IA-64, always use 64 KB.
	* spvw_page.d (oint_addr_relevant_len): Set to 32, to limit
	  std_page_size to 64 KB.

	* predtype.d: Include arilev0.c, needed for R_sign when TYPECODES is
	  defined.

2001-01-28  Bruno Haible  <haible@clisp.cons.org>

	* foreign.d (convert_function_to_foreign, free_foreign_callin)
	(convert_function_from_foreign, callback): Add cast, to avoid
	  warning on 64-bit machines.

2001-01-17  Bruno Haible  <haible@clisp.cons.org>

	* spvw.d (main): Restore functionality broken by last patch.

2001-01-17  Sam Steingold  <sds@gnu.org>

	* posix.lisp (sysinfo, rlimit, limits, usage): unix-specific,
	do not define on other systems

	* spvw.d (main): handle `argv_expr' ("-x") similar to
	`argv_execute_file', as if wrapped in `exit-on-error'

2001-01-15  Bruno Haible  <haible@clisp.cons.org>

	* init.lisp (load): Additional keyword argument :extra-file-types.
	* spvw.d (main) [WIN32_NATIVE]: Pass :extra-file-types '(".bat") to
	  LOAD.

2001-01-14  Bruno Haible  <haible@clisp.cons.org>

	* configure: In avcall and callback, do "make check" instead of
	  "make minicheck".
	* makemake.in: Likewise.

2001-01-04  Sam Steingold  <sds@gnu.org>

	* pathname.d (pathname_check_remote): replaced with
	(pathname_fix_remote): reset device to NIL and make the
	path :absolute
	(merge-pathnames, make-pathname): use it

2001-01-03  Sam Steingold  <sds@gnu.org>

	* pathname.d (use_default_dir win32): do not use `default_drive'
	or `default_directory_of' for UNC paths
	(pathname_check_remote, namestring_host_dir): new local functions
	(assure_dir_exists, directory_exists):
	use `namestring_host_dir' instead of `directory_namestring' and
	`whole_namestring' instead of
	`directory_namestring_parts'+`file_namestring_parts'
	(change_default): barf on remote arguments
	* inspect.lisp (inspect-frontend): bind `keep-alive'

2001-01-03  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (USER-HOMEDIR-PATHNAME): If HAS_HOST is defined but the
	host is NIL, use the homedir on the local machine.

2001-01-02  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (HAS_HOST): Set to 1 for PATHNAME_WIN32.
	* pathname.d (legal_hostchar): Add a definition for PATHNAME_WIN32.
	(PARSE-NAMESTRING): For PATHNAME_WIN32, parse hosts in \\hostname
	  syntax.
	(host_namestring_parts): For PATHNAME_WIN32, use \\hostname syntax.
	(USER-HOMEDIR-PATHNAME): Add dummy definition for PATHNAME_WIN32.

2001-01-03  Sam Steingold  <sds@gnu.org>

	* pathname.d (assure_dir_exists, change_default):
	Use `directory_namestring' instead of
	`directory_namestring_parts'+`string_concat'.

2000-12-28  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: encoding.o depends on libcharset.h.
	(libcharset.h): New rule.
	* encoding.d: Include libcharset.h.
	(encoding_from_name): Argument is now canonicalized like
	  locale_charset(), not like X11.
	(init_dependent_encodings): Call locale_charset().
	* spvw_ctype.d (locale_charset): Remove variable.
	(init_ctype): Remove initialization of locale_charset.
	* constsym.d: Add JOHAB and AIX specific encoding.

2000-12-29  Bruno Haible  <haible@clisp.cons.org>

	* utils/gen-uninames: New file.
	* Makefile.devel (all): Depend on src/uninames.c.
	(src/uninames.c): New rule.
	* makemake.in (UNICODE_INCLUDES): Add uninames.
	* charstrg.d: Include uninames.c.
	(unicode_name_word, unicode_name_word_lookup): New functions.
	(jamo_initial_short_name, jamo_medial_short_name)
	(jamo_final_short_name): New tables.
	(char_name, name_char): Add support for Unicode character names.

2000-12-21  Sam Steingold  <sds@gnu.org>

	* dirkey.d: made the second half of the file GC safe
	(registry_value_to_object): Fixed the bugs introduced yesterday:
	extra "" at the end of a REG_MULTI_SZ and a += instead of =.
	(scope_error): Replaced with `parse_scope'.

2000-12-20  Bruno Haible  <haible@clisp.cons.org>

	* dirkey.d (registry_value_to_object): Make GC safe. Fix possible
	  buffer overrun.
	(struct root): Add length field.
	(MKKEY): Store string length as well.
	(parse_registry_path): Use memcmp instead of strncmp.
	(DIR-KEY-OPEN): Make GC safe.
	(MAKE_OBJECT_LIST): Make GC safe.

2000-12-20  Bruno Haible  <haible@clisp.cons.org>

	* charstrg.d (nonspacing_table_data): Update to match glibc 2.2 width
	  definition.

2000-12-19  Bruno Haible  <haible@clisp.cons.org>

	* time.d (SYS::DEFAULT-TIME-ZONE) [WIN32]: Don't produce time_t values
	  >= 2^31.

2000-12-13  Sam Steingold  <sds@gnu.org>

	Remote registry access:
	* dirkey.d (test_dir_key): Return obj.
	(roots): Check whether the constants are defined.
	(parse_registry_path): new function to extract the host name and
	the top-level handle-key.
	(dir_key_open): Use it.
	(open_reg_key): Use the IDNE_* constants.
	(dir_key_subkeys): Return the list of the local top-level keys
	when the argument is :win32.
	(itst_current): Ignore zero-length names.
	(scope_error): New nonreturning_function.
	(dkey_search_iterator): Use it.
	(state_next_key): Pop the iteration stack when closing the hangle.
	(dkey_search_next_key): Rely on this change; use `scope_error'.
	* dirkey.lisp: Export `dir-key-values' and `dir-key-children'
	(with-dir-key-search): Make sure `att-iter' is a symbol.

2000-12-12  Sam Steingold  <sds@gnu.org>

	* spvw.d (init_symbol_values): Set *PRINT-RPARS* to NIL and
	*PRINT-INDENT-LISTS* to 1.

2000-12-05  Bruno Haible  <haible@clisp.cons.org>

	* io.d (JUSTIFY_START): Add argument.
	(JUSTIFY_LAST): New macro.
	(justify_start): Add traillength argument. Bind
	  SYS::*PRIN-TRAILLENGTH* and SYS::*PRIN-PREV-TRAILLENGTH*.
	(justify_end_eng): Respect SYS::*PRIN-PREV-TRAILLENGTH*.
	  Unbind SYS::*PRIN-TRAILLENGTH* and SYS::*PRIN-PREV-TRAILLENGTH*.
	(justify_end_weit): Likewise.
	(justify_last): New function.
	(pr_enter): Bind SYS::*PRIN-TRAILLENGTH* to 0.
	(pr_cons): Add argument to JUSTIFY_START. Call JUSTIFY_LAST.
	(pr_number, pr_array_nil, pr_vector, pr_array_rekursion, pr_array)
	(pr_structure_default, pr_hex6_obj, pr_readlabel, pr_record_ab)
	(pr_record_rest, pr_record_descr, pr_orecord, pr_other_obj, pr_subr)
	(pr_closure, pr_cclosure_lang, pr_cclosure_codevector, pr_stream)
	(SYSTEM::WRITE-UNREADABLE): Likewise.
	(some_printable_slots): New function.
	* spvw.d (init_symbol_values): Define SYS::*PRIN-TRAILLENGTH* and
	  SYS::*PRIN-PREV-TRAILLENGTH* as special.

2000-12-04  Sam Steingold  <sds@gnu.org>

	* misc.d (registry): do not goto outsize `with_string_0'
	* dirkey.d (dir_key_value): ditto

2000-12-04  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (dir_key_length): Set to 3.

2000-12-03  Sam Steingold  <sds@gnu.org>

	--with-export-syscalls works on win32 under MSVC5 now
	* socket.d (resolve-host-ipaddr): MSVC doesn't have `gethostent'
	* posixmath.d (erf, erfc, gamma, lgamma): MSVC doesn't have these
	* posixmisc.d: ditto
	* constsym.d, subr.d: kill the exported calls not found under MSVC

2000-12-02  Sam Steingold  <sds@gnu.org>

	Directory access (LDAP, Win32 registry, gnome config.)
	Only Win32 registry works at this time.
	* lispbibl.d (FOREIGN): define when DIR_KEY is defined.
	(Dir_Key): new record type.
	* constobj.d (hs_dir_key, type_dir_key, type_scope)
	(printstring_dir_key): added.
	(slash_string): define when DIR_KEY id defined.
	* constsym.d, subr.d, subrkw.d: define the dirkey functions.
	* predtype.d: recognize the new rectype.
	* io.d: print the new rectype.
	* spvw.d: added :DIR-KEY to `*features*' when DIR_KEY is defined.
	* places.lisp (dir-key-value): new defsetf.
	* init.lisp: load dirkey.lisp.
	* dirkey.lisp, dirkey.d: new files.
	* makemake.in: added --with-dir-key.

2000-11-30  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (convert_time_to_universal): New declaration.
	* time.d (convert_time_to_universal): New function.
	* pathname.d (FILE-WRITE-DATE): Use it.

2000-11-29  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (set_start_time): Remove declaration.
	* time.d (internal_time_to_I): New function.
	(GET-INTERNAL-REAL-TIME, GET-INTERNAL-RUN-TIME): Use
	internal_time_to_I.
	(encode_universal_time): New function.
	(calc_start_UT): Remove function.
	(get_start_time): New function.
	(universal_time_sec): New function.
	(GET-UNIVERSAL-TIME): Call universal_time_sec.

2000-11-25  Sam Steingold  <sds@gnu.org>

	* lispbibl.d (UNIX_LISP_TIME_DIFF): new macro
	* time.d (real_time_sec): use it
	* pathname.d (file_stat_): ditto

2000-11-20  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (lisp.exe): Make the stack 3 MB large.

2000-11-16  Bruno Haible  <haible@clisp.cons.org>

	* array.d (elt_move_T): Use eq instead of ==.
	(elt_move_Char, elt_move_Bit, elt_move_2Bit, elt_move_4Bit)
	(elt_move_8Bit, elt_move_16Bit, elt_move_32Bit): Likewise.
	* sequence.d (copy_seqpart_into): Likewise.

2000-11-15  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: If TSYS=win32msvc, introduce a Makefile variable MFLAGS.
	(lisp.exe): Don't use /MD flag; use MFLAGS instead.

2000-11-14  Bruno Haible  <haible@clisp.cons.org>

	* Makefile.devel (PERL): New macro.
	(acorn/makefile.cc, acorn/makefile.gcc): Use it.

2000-11-14  Sam Steingold  <sds@gnu.org>

	* win32msvc/makefile.msvc4, win32msvc/makefile.msvc5:
	libinconv/iconv.h and libinconv/iconv.lib are now
	in include and src respectively.

2000-11-13  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (UNIX_MACOSX): Renamed from UNIX_RHAPSODY.
	(UNIX_RHAPSODY, UNIX_DARWIN): New macros.

2000-11-12  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d: Undefine TIME_ABSOLUTE and TIME_RELATIVE first.
	* autoconf/config.guess, autoconf/config.sub: Upgrade to newest
	  version from GNU CVS.

2000-11-10  Sam Steingold  <sds@gnu.org>

	* inspect.lisp: workaround for the Linux bug.
	(crlf, flush-http): new functions.
	(with-http-output): new macro.
	(print-inspection): added &rest opts.
	(http-command): handle `keep-alive'.
	(inspect-frontend :http): ditto.

	* clhs.lisp (*browser*): the default browser.
	(browse-url): `browser' defaults to `*browser*' and can be NIL.

2000-11-10  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: Increase optimization for SUNPRO compilers to O3.

2000-11-08  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (delete_file_if_exists) [WIN32_NATIVE]: Treat
	ERROR_BAD_NETPATH like ERROR_PATH_NOT_FOUND.
	(rename_file_to_nonexisting) [WIN32_NATIVE]: Likewise.
	(assure_dir_exists) [WIN32_NATIVE]: Likewise.
	(directory_exists) [WIN32_NATIVE]: Likewise.
	(open_input_file) [WIN32_NATIVE]: Likewise.
	(READDIR_findfirst) [WIN32_NATIVE]: Likewise.
	(check_stat_directory) [WIN32_NATIVE]: Likewise.
	(FILE-WRITE-DATE) [WIN32_NATIVE]: Likewise.

2000-11-08  Bruno Haible  <haible@clisp.cons.org>

	* aclocal.m4 (CL_SIGNAL_UNBLOCK): Enable 'volatile' for gotsig,
	wasblocked.
	(CL_SIGNAL_BLOCK_OTHERS): Enable 'volatile' for gotsig,
	somewereblocked.
	(CL_SIGACTION_UNBLOCK): Enable 'volatile' for gotsig, wasblocked.

2000-10-23  Bruno Haible  <haible@clisp.cons.org>

	* constsym.d (CHARSET:GB18030, CHARSET:BIG5HKSCS): New symbols.

2000-10-22  Bruno Haible  <haible@clisp.cons.org>

	* encoding.d (init_encodings): Set O(internal_encoding) to UTF-8.
	* makemake.in: Default file encoding for all CLISP sources is now
	UTF-8.

2000-10-22  Bruno Haible  <haible@clisp.cons.org>

	* spvw_language.d (init_language_from): Accept french and spanish
	names in both ISO-8859-1 and UTF-8.
	* spvw_ctype.d (init_ctype): Likewise.

2000-10-22  Bruno Haible  <haible@clisp.cons.org>

	* spvw.d (print_banner): Don't use non-ASCII argument of gettext.
	* spvw_global.d (check_gc_consistency): Don't use non-ASCII error
	message.

2000-10-09  Bruno Haible  <haible@clisp.cons.org>

	CPU recognition on OpenBSD.
	* lispbibl.d (VAX): Define if __vax__ is defined.
	(MC680X0): Define if __m68k__ is defined.
	(MC680Y0): Define if __mc68020__ is defined.
	(MIPS): Define if __mips__ is defined.
	(M88000): Define if __m88k__ is defined.
	* autoconf/aclocal.m4 (CL_WORDS_LITTLEENDIAN): Recognize __m68k__,
	__mc68020__, __MIPSEB__, __MIPSEL__, __m88k__ as CPU indicators.

2000-09-29  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Fix bug in 2000-05-23
	change.

2000-09-28  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in: On AIX without gcc, use gcc-cccp.
	(XCPP_POSTPROCESS): New variable.

	* autoconf/aclocal.m4 (CL_SOCKLEN_T): New macro.
	* configure.in: Call it.
	* unixconf.h.in (SOCKLEN_T): New macro.
	* win32.d (SOCKLEN_T): Define as int.
	* socket.d (socket_getlocalname_aux, socket_getpeername)
	(create_server_socket, accept_connection): Use the SOCKLEN_T type.

	* stream.d (iconv_mblen): Cast to avoid warning.
	(iconv_wcstombs): Likewise.
	(rd_ch_terminal3): Likewise.

2000-09-25  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (I80386): Define if __i386__ is defined. On OpenBSD,
	i386 and __i386 are not defined, only __i386__.
	* autoconf/aclocal.m4 (CL_WORDS_LITTLEENDIAN): Recognize __i386__
	as equivalent to __i386. For OpenBSD.

2000-09-21  Martin Atzmueller  <martin@atzmueller.net>

	* reploop.lisp (debug-backtrace): cleanup of unused variable.

2000-09-12  Bruno Haible  <haible@clisp.cons.org>

	Followup to Sam's 1999-04-07 patch.
	* compiler.lisp (c-form): Accept arrays as self-evaluating forms,
	consistently with eval.d:eva11().

2000-09-12  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (listen_char): Renamed from stream_listen.
	(listen_byte): New declaration.
	* debug.d (read_form): Update.
	* io.d (LISTEN, READ-CHAR-WILL-HANG-P, READ-CHAR-NO-HANG): Update.
	* stream.d (listen_char_synonym): Renamed from listen_synonym.
	(listen_byte_synonym): New function.
	(listen_char_concat): Renamed from listen_concat.
	(listen_byte_concat): New function.
	(listen_char_twoway): Renamed from listen_twoway.
	(listen_byte_twoway): New function.
	(listen_char_str_in): Renamed from listen_str_in.
	(listen_char_buff_in): Renamed from listen_buff_in.
	(listen_char_generic): Renamed from listen_generic.
	(listen_byte_ia8_unbuffered): New function.
	(listen_char_unbuffered): Renamed from listen_unbuffered.
	(listen_char_buffered): Renamed from listen_buffered.
	(listen_byte_ia8_buffered): New function.
	(listen_char_keyboard): Renamed from listen_keyboard.
	(listen_char_terminal): Renamed from listen_terminal.
	(listen_char_terminal1): Renamed from listen_terminal1.
	(listen_char_terminal2): Renamed from listen_terminal2.
	(listen_char_terminal3): Renamed from listen_terminal3.
	(SYSTEM::LISTEN-BYTE): Remove function.
	(listen_char): Renamed from stream_listen.
	(listen_byte): New function.
	(READ-BYTE-LOOKAHEAD, READ-BYTE-WILL-HANG-P, READ-BYTE-NO-HANG): New
	functions.
	* gstream.lisp: Export STREAM-READ-BYTE-LOOKAHEAD,
	STREAM-READ-BYTE-WILL-HANG-P, STREAM-READ-BYTE-NO-HANG.
	(STREAM-READ-BYTE-LOOKAHEAD, STREAM-READ-BYTE-WILL-HANG-P)
	(STREAM-READ-BYTE-NO-HANG): New generic functions.
	* modules/clx/mit-clx/depdefs.lisp: Remove feature test for
	sys::listen-byte. Add feature test for read-byte-lookahead.
	* modules/clx/mit-clx/dependent.lisp (buffer-read-default) [CLISP]:
	Use read-byte-lookahead instead of sys::listen-byte.

2000-09-06  Sam Steingold  <sds@gnu.org>

	Followup to Sam's 1999-04-07 patch.
	* compiler.lisp (c-form): Handle simple vectors as a constant.

2000-09-02  Bruno Haible  <haible@clisp.cons.org>

	* savemem.lisp (saveinitmem): Bind *home-package* to nil while saving
	  the image. Needed because the new image may be started with -a,
	  thus with a different value of *package*.
	  Reported by Valeriy E. Ushakov <uwe@ptc.spbu.ru>.

2000-09-02  Bruno Haible  <haible@clisp.cons.org>

	* modules/clx/new-clx/configure.in: When checking for Xpm and XShape,
	  temporarily add $X_CFLAGS to the CFLAGS. Needed on FreeBSD, which
	  has X_CFLAGS=-I/usr/X11R6/include.
	  Reported by Valeriy E. Ushakov <uwe@ptc.spbu.ru>.

2000-09-01  Bruno Haible  <haible@clisp.cons.org>

	Fix line numbers in generated C code.
	* utils/varbrace.d (out_line): New function.
	(ifdef_line_repeat): New variable.
	(line_emit, line_repeat_else, line_repeat_endif): New functions.
	(next_token): Call them.
	(convert): Initialize ifdef_line_repeat. Call line_emit to emit a
	#line directive.

2000-09-01  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (lisp_completion): Put end_callback() at the right place,
	and protect malloc() and free() with begin/end_system_call().
	Fixes a crash in cstombs on i386 platforms.
	Reported by Valeriy E. Ushakov <uwe@ptc.spbu.ru>.

2000-09-01  Bruno Haible  <haible@clisp.cons.org>

	* eval.d (interpret_bytecode_): Don't produce "testb %edx,%edx" or
	"testb %eax,%eax" any more.

2000-08-19  Bruno Haible  <haible@clisp.cons.org>

	* utils/ccpaux.c: main() returns int. Call fflush(stdout) before
	  testing ferror(stdout).
	* utils/deema.c: Likewise.
	* utils/txt2c.c: Call fflush(stdout) before testing ferror(stdout).
	* utils/comment5.d: Call fflush(outfile) before testing
	  ferror(outfile).

2000-08-26  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/acgeneral.m4 (AC_OUTPUT): Use braces in exec_prefix default
	  value, not parens.

2000-08-18  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (parse_logical_host_prefix): Renamed from logical_host.
	(string_logical_path_p): Remove function.
	(parse_namestring): Integrate it here. When recognizing a logical
	host, don't overwrite the :host argument.

	ANSI CL wants (PATHNAME (OPEN filename ...)) to return filename if
	filename is a logical pathname.
	* pathname.d (open_file): Expect the original filename on the stack.
	(OPEN): When the filename argument is a logical pathname, pass it
	to open_file.

2000-08-17  Sam Steingold  <sds@gnu.org>

	ANSI `parse-namestring' when LISP:*PARSE-NAMESTRING-ANSI* is non-NIL
	* pathname.d (logical_host): New function.
	(parse_logical_pathnamestring): Use it.
	(string_logical_path_p): New function.
	(parse_namestring): Use it.
	* constsym.d (parse_namestring_ansi): New variable.
	* spvw.d (init_symbol_values): Define it.
	* misc.d (set_ansi): Set it.
	* places.lisp (*ansi*): Added it to the doc.

2000-08-17  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (open_file): Pass tolerantp = TRUE to assure_dir_exists
	also if if_not_exists = 2 and direction != 0.

2000-07-27  Bruno Haible  <haible@clisp.cons.org>

	* foreign.d (walk_foreign_pointers): C-FUNCTION values can be NULL.
	(convert_to_foreign): When converting C-FUNCTION, convert NIL to
	NULL.

2000-07-27  Bruno Haible  <haible@clisp.cons.org>

	* predtype.d (eql): When comparing long-floats, also compare the sign.
	Reported by Bernard Urban <Bernard.Urban@meteo.fr>.

2000-07-26  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (DESTDIR): Renamed from 'install_root'.

2000-07-20  Sam Steingold  <sds@gnu.org>

	* inspect.lisp (insp-check): `warn' instead of `assert'
	(*inspect-browser*): default to nil
	(inspect-frontend :http): hardcode host 127.0.0.1
	print URL when `*inspect-browser*' is nil - permits
	CLISP and browser running on different machines

2000-07-19  Sam Steingold  <sds@gnu.org>

	* socket.d (create_server_socket): use "0.0.0.0" instead of the
	current host to allow anyone to connect to our server

2000-06-23  Sam Steingold  <sds@gnu.org>

	* type.lisp (canonicalize-type, subtypep-integer):
	use (ash 1 *) instead of (expt 2 *)

2000-06-22  Sam Steingold  <sds@gnu.org>

	* stream.d (stream_element_type_eq): new function
	(built_in_stream_element_type): use it
	* constsym.d, subr.d: mention `stream_element_type_eq'

2000-06-21  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (built_in_stream_element_type): Fix the last patch.

2000-06-21  Sam Steingold  <sds@gnu.org>

	* stream.d (socket_status): minor tweaks
	(built_in_stream_element_type): fixed the last patch

2000-06-21  Sam Steingold  <sds@gnu.org>

	* stream.d (built_in_stream_element_type): Special case for
	two-way and echo streams.

2000-06-16  Thomas Klausner  <wiz@danbala.ifoer.tuwien.ac.at>
	    Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (unix): Define on NetBSD.
	* modules/clx/new-clx/e2d.c: Treat __MACH__, __NetBSD__, __BeOS__ as
	Unix.
	* makemake.in (fsstnd): New variant netbsd.
	(install, installdirs, uninstall): For fsstnd=netbsd, install the
	html files in $(lispdocdir), not $(htmldir), and the extra
	documentation in $(lispdocdir), not $(lispdocdir)/doc.

2000-06-12  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (LIBGCC): Set to empty on BeOS.
	(interpreted.mem, lispinit.mem, lispinit2.mem): On BeOS, copy the
	executable before running it (workaround BeOS kernel bug).

	* unix.d (sock_read, sock_write, closesocket): Don't #define on BeOS.
	* unixaux.d (sock_read, sock_write): New functions.
	* stream.d (low_listen_unbuffered_handle): On BeOS, don't use select
	on file handles. Use O_NONBLOCK as a preferred alternative to
	O_NDELAY.
	(rd_ch_keyboard): On BeOS, don't use select on file handles.
	(low_close_socket, low_read_unbuffered_socket):
	(low_listen_unbuffered_socket, low_clear_input_unbuffered_socket):
	(low_read_array_unbuffered_socket, low_write_unbuffered_socket):
	(low_write_array_unbuffered_socket, low_fill_buffered_socket):
	(low_flush_buffered_socket): Define on BeOS, differently from the
	file handles analogs.

2000-06-11  Bruno Haible  <haible@clisp.cons.org>

	* clos.lisp (analyze-method-description): Generate code expanding into
	  SYSTEM::FUNCTION-MACRO-LET instead of MACROLET.

	* fsubr.d (system::function-macro-let): New special form.
	* control.d (system::function-macro-let): Likewise.
	* init.lisp (%expand-form): Handle SYSTEM::FUNCTION-MACRO-LET.
	(%expand-funmacdefs-1, %expand-funmacdefs-2): New functions.
	* compiler.lisp (c-form-table): Add SYSTEM::FUNCTION-MACRO-LET.
	(c-FUNCTION-MACRO-LET): New function.

	* lispbibl.d (Rectype_Macro, Rectype_FunctionMacro): New enumeration
	items.
	(Macro, FunctionMacro): New types.
	(macro_length, functionmacro_length): New macros.
	(TheMacro, TheFunctionMacro): New macros.
	(macrop, functionmacrop): New macros.
	(allocate_macro, allocate_functionmacro): New macros.
	(fehler_function): New declaration.
	* error.d (fehler_function): New function.
	* predtype.d (TYPE-OF, CLOS:CLASS-OF): Treat Rectype_Macro and
	  Rectype_FunctionMacro.
	(COERCE): When the symbol has both a function and a macro, use the
	  function.
	(enum_hs_macro, enum_hs_function_macro): New enum items.
	(heap_statistics_mapper): Update.
	* io.d (pr_orecord): Treat Rectype_Macro and Rectype_FunctionMacro.
	* record.d (SYS::MAKE-MACRO, SYS::MACROP, SYS::MACRO-EXPANDER)
	(SYS::MAKE-FUNCTION-MACRO, SYS::FUNCTION-MACRO-P)
	(SYS::FUNCTION-MACRO-FUNCTION, SYS::FUNCTION-MACRO-EXPANDER): New
	  functions.
	* eval.d (FUNTAB): Add SYS::FUNCTION-MACRO-FUNCTION.
	(macroexp): Test for Macro instead of cons with car = SYS::MACRO.
	(macroexp0): Likewise.
	(eval1): Treat Rectype_FunctionMacro.
	* control.d (FUNCTION): Treat Rectype_FunctionMacro.
	(MACRO-FUNCTION): Test for Macro instead of cons with car =
	  SYS::MACRO.
	* symbol.d (SYS::%PUTD): Test for Macro instead of cons with
	  car = SYS::MACRO.
	* defmacro.lisp (make-macro-expander): Renamed from
	  make-macro-expandercons.
	* init.lisp: Use function sys::make-macro instead of cons 'sys::macro.
	(%expand-form): Treat FunctionMacros like functions.
	  Test for Macro instead of cons with car = SYS::MACRO.
	(defmacro) : Use function sys::make-macro instead of cons
	  'sys::macro.
	* trace.lisp (trace1): Use function sys::make-macro instead of cons
	  'sys::macro.
	* places.lisp (MACRO-FUNCTION): Likewise.
	* compiler.lisp: Import sys::make-macro-expander.
	(funtab): Add SYS::FUNCTION-MACRO-FUNCTION.
	(fenv-search): Return more values, to deal with the FunctionMacro
	  case.
	(c-form, macroexpand-form): Update for changed fenv-search. Call
	  *macroexpand-hook* directly.
	(c-FUNCTION): Update for changed fenv-search.
	(c-MACROLET): Update.
	(c-APPLY): Update for changed fenv-search.
	(compile): Test for Macro instead of cons with car = SYS::MACRO.
	(compile-toplevel-form): Update for changed fenv-search.
	(disassemble): Test for Macro instead of cons with car = SYS::MACRO.
	* describe.lisp (describe-object): Treat SYS::MACRO and FUNCTION-MACRO.

	* init.lisp (MACRO-EXPANDER): Remove macro.
	* macros1.lisp (defmacro-special): New macro.
	(and, or, prog1, prog2, when, unless, psetq, multiple-value-list)
	(multiple-value-bind, multiple-value-setq, locally, case, cond):
	  Define macros using defmacro-special.

	* constobj.d (O(version)): Bump version number.
	(O(old_version)): Remove.
	* misc.d (SYSTEM::VERSION): Don't test for O(old_version) any more.
	* control.d (SYS::OLD-MACRO-FUNCTION): Remove function.
	* pathname.d (SYS::OLD-OPEN): Remove function.
	* record.d (CLOS::OLD-%ALLOCATE-INSTANCE): Remove function.
	* subrkw.d: Remove SYS::OLD-OPEN initialization.
	* eval.d (FUNTAB): Remove SYS::OLD-MACRO-FUNCTION, SYS::OLD-OPEN,
	  CLOS::OLD-%ALLOCATE-INSTANCE. Add MACRO-FUNCTION, OPEN. Move
	  SYS::%COPY-GENERIC-FUNCTION.
	(FUNTABR): Add CLOS::%ALLOCATE-INSTANCE.
	* compiler.lisp (funtab, c-DIRECT-FUNCTION-CALL): Update accordingly.

2000-05-30  Bruno Haible  <haible@clisp.cons.org>

	* pathname.d (MERGE-PATHNAMES): New variable called_from_make_pathname.
	  Accept unbound slot values in this case.
	(MAKE-PATHNAME): If a :DEFAULTS argument is given, don't fill in
	  default values. Call MERGE-PATHNAMES with magic arguments
	  :wild #'make-pathname.

2000-05-30  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (install-bin): Use $(INSTALL_PROGRAM) or $(INSTALL_DATA)
	  instead of "cp -p".
	Reported by Thomas Klausner <wiz@danbala.ifoer.tuwien.ac.at>.

2000-05-29  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_PROG_INSTALL): Fix typo.
	Reported by Thomas Klausner <wiz@danbala.ifoer.tuwien.ac.at>.

2000-05-26  Bruno Haible  <haible@clisp.cons.org>

	* array.d (elt_move): Add "break" in switch statement.

2000-05-25  Bruno Haible  <haible@clisp.cons.org>

	* makemake.in (MSVCDIR): Change value.
	(TOUCH): On Win32, permit touch to fail.
	(iconv.h, iconv.lib): Fix win32 rules.
	(lisp${LEXE}): Depend on ${XCL_ICONVLIB}.
	(impnotes.html, clisp.html): On Win32, don't use sed.
	(distrib): On Win32, postprocess impnotes.html and clisp.html.

2000-05-23  Bruno Haible  <haible@clisp.cons.org>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST): Determine host_cpu,
	  host_vendor, host_os correctly if $host has more than two hyphens.

2000-05-21  Bruno Haible  <haible@clisp.cons.org>

	* type.lisp (canonicalize-type): Treat STREAM and subclasses like
	  CLOS classes, not like other built-in classes.
	(subtypep): Remove special code for STREAM and subclasses.

2000-05-21  Bruno Haible  <haible@clisp.cons.org>

	* init.lisp (LOAD): Add :external-format argument and conditionally
	  pass it to OPEN.

2000-05-20  Bruno Haible  <haible@clisp.cons.org>

	* type.lisp (canonicalize-type): Recognize the encodings UTF-16 and
	  UTF-7 as covering all of Unicode.

2000-05-20  Bruno Haible  <haible@clisp.cons.org>

	* type.lisp (subtype-integer): Inline the canonicalize-type call.

2000-05-20  Bruno Haible  <haible@clisp.cons.org>

	* sequence.d (SYSTEM::COERCED-SUBSEQ): New function.
	* encoding.d (CONVERT-STRING-FROM-BYTES, CONVERT-STRING-TO-BYTES): New
	  functions.

2000-05-17  Bruno Haible  <haible@clisp.cons.org>

	* reploop.lisp (break-loop): terpri to *debug-io*, not *error-output*.

2000-05-16  Sam Steingold  <sds@gnu.org>

	* reploop.lisp (break-loop): terpri *debug-io* even when it is
	not interactive.

2000-05-16  Sam Steingold  <sds@gnu.org>

	* stream.d (sec_usec, socket_connect): treat NIL as unbound

2000-05-15  Sam Steingold  <sds@gnu.org>

	* init.lisp (defun): emit `c-defun' for not inlined functions too

2000-05-15  Sam Steingold  <sds@gnu.org>

	* socket.d (H_ERRMSG): fixed duplicate test for NO_DATA.

2000-05-15  Sam Steingold  <sds@gnu.org>

	* makemake.in: fixed the previous patch.

2000-05-12  Martin Atzmueller  <marty@cs.utexas.edu>

	* makemake.in: link clhs in the build-directory to the right place.

2000-05-11  Sam Steingold  <sds@gnu.org>

	* stream.d (socket_status): use HANDLE_SET & HANDLE_ISSET macros.
	* ../doc/impext.xml: document LISP:SOCKET-STATUS.

2000-05-09  Sam Steingold  <sds@gnu.org>

	* stream.d (sec_usec): new helper function.
	(socket_wait): use it.
	(socket_status): new Lisp function: interface to select(3).
	(stream_listen): listen properly on binary streams too.
	* constsym.d, subr.d: added LISP:SOCKET-STATUS.

2000-05-09  Sam Steingold  <sds@gnu.org>

	* disassem.lisp (disassemble-machine-code): do not call
	the pager when running under Emacs.

2000-05-03  Guilherme Manika  <gwm@conectiva.com.br>

	* makemake.in (install-bin): Fix duplicate \$(install_root).

2000-04-25  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* spvw.d (print_license): Add paragraph pointing to copyright.html.

2000-04-18  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* lispbibl.d: On BeOS, define UTF8_CHS, not ISOLATIN_CHS.
	* encoding.d (encoding_from_name): If UTF8_CHS is defined, use
	  CHARSET:UTF-8.

2000-04-14  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_PROG_HLN): Redirect ln's error output.

2000-04-13  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	Support NO_TYPECODES on m68k.
	* lispbibl.d (oint_type_*, oint_data_*): Define differently on
	  m68k-linux.
	(subr_): Add a dummy field to force size a multiple of 4.
	(TheMachineCode): After shifting right, add the missing leftmost
	  bits.
	* spvw.d (main): When determining the heap bounds, compute 'end' with
	  garcol_bit set to 0, even if garcol_bit_o < oint_addr_len-1.
	* encoding.d (nls_table) [NO_TYPECODES]: Force variables of this type,
	  defined in nls_*.c, to be 4-aligned.

2000-04-04  Sam Steingold  <sds@gnu.org>

	* init.lisp (*source-file-types*): added #".cl"
	(search-file <first def>): do not call `reverse'
	(load): swap `*compiled-file-types*' and
	`*source-file-types*' accordingly.

2000-04-05  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* io.d (eof_handling): eof-value defaults to NIL.
	* stream.d (READ-BYTE, READ-INTEGER, READ-FLOAT): Likewise.

2000-04-04  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* unix.d (O_BINARY): Undefine on BeOS.

2000-04-03  Martin Atzmueller  <marty@cs.utexas.edu>

	* _impnotes.html: documented the (abbreviated) keyword-commands
	for the debugger.

	* reploop.lisp (commands1): fixed a typo

2000-04-03  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* lispbibl.d (addressbus_mask) [UNIX_OSF]: Define to
	  0xFFFFFF01FFFFFFFFUL instead of 0xFFFFFFC1FFFFFFFFUL.

2000-04-02  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* clhs.lisp (*browsers*): Add support for w3m.

2000-04-02  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* stream.d (finish_tty_output, force_tty_output): Ignore errno value
	  after calling fsync() on BeOS.

	* lispbibl.d (STACK_register): Don't define on BeOS.
	(oint_type_*, oint_data_*): Define differently on BeOS.

	* socket.d (SERVENT_TO_STACK, LISP:SOCKET-SERVICE-PORT): Don't define
	  if UNIX_BEOS. BeOS5 lacks getservent() and getservbyport().
	* spvw.d (main): On BeOS, add :BEOS to *features*.
	* beossock.lisp: New file.
	* init.lisp: On BeOS, load beossock.lisp.
	* makemake.in (LPARTS): Add beossock.
	* gettext/po/Makefile.devel (LISPSOURCES): Add beossock.

	* autoconf/aclocal.m4 (CL_GETHOSTNAME, CL_TCPCONN): For the prototypes
	  of gethostname and inet_addr, on BeOS, include <sys/socket.h> and
	  <netdb.h>.

2000-04-02  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	Allow building on filesystems lacking symlinks and hard links.
	* autoconf/acgeneral.m4 (AC_OUTPUT_LINKS): If "ln" fails, try "cp -p".
	* autoconf/aclocal.m4 (CL_PROG_CP): Renamed from CL_CP.
	(CL_PROG_LN, CL_PROG_LN_S): New macros.
	(CL_PROG_HLN): Renamed from CL_PROG_LN. Rename cache variable to
	  cl_cv_prog_hln. AC_SUBST HLN instead of LN.
	* configure.in: Update.
	* lndir (link): If "ln" fails, try "cp -p".
	* makemake.in (HLN): Renamed from LN. Use @HLN@ instead of @LN@.
	(LN_S): Renamed from LN.
	(init): Don't create linkkit.
	(linkkit): New rule.
	(modular): Depend on linkkit.
	(UnicodeData.txt): cd into directory before linking.
	(clhs.txt): Likewise. Simplify the symlink. Omit if building
	  in-place.
	* clisp-link.in (link): If "ln" fails, try "cp -p". Redirect stderr
	  to /dev/null.
	(create-module-set): If "ln" fails, try "cp -p".
	* Makefile.devel (src/gettext/configure, src/gettext/config.h.in):
	  Update dependencies.

2000-04-02  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* Makefile.devel (src--distrib): Create a single tar.gz file.
	(SOURCES): Add clisp.spec, modules, readline, sigsegv, libiconv,
	  all of doc.

2000-04-02  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_TERMCAP): When both libtermcap and
	  libncurses exist, prefer the latter.

2000-03-12  Bruno Haible  <haible@clisp.cons.org>

	Add support for S390 CPU.
	* lispbibl.d (S390): New macro.

2000-03-31  Bruno Haible  <haible@clisp.cons.org>

	Renamed all *.lsp files to *.lisp.
	* Makefile.devel, configure: Update.
	* _README.en, _README.de, _README.es: Update.
	* _clisp.1, _clisp.html, _clisp.c, _impnotes.html: Update.
	* constobj.d (O(source_file_type)): Change to #".lisp".
	* cfg*.lisp (editor-tempfile): Return "lisptemp.lisp".
	* edit.lisp (editor-tempfile): Likewise.
	* compiler.lisp (compile-file, compile-file-pathname): Use ".lisp"
	  as default pathname type.
	* defs1.lsp (default logical pathname translations): Map ".LISP" to
	  ".lisp".
	* init.lsp (*source-file-types*): Set to (#".lisp" #".lsp").
	* clisp-link.in: Update.
	* makemake.in: Update.
	* gettext/po/{Makefile.devel,clisp-xgettext}: Update.
	* acorn/swap-ext.pl: Update.
	* nextapp/Lisp/Coordinator.m: Update.
	* os2/{convert.bax,interpreted.in}: Update.
	* modules/bindings/linuxlibc5/Makefile: Update.
	* modules/bindings/linuxlibc6/Makefile: Update.
	* modules/clx/mit-clx/{Makefile*,README.CLISP,link.sh}: Update.
	* modules/clx/new-clx/{Makefile.in,README,link.sh.in,clx.f,
	  clx-ini.lisp,clx.lisp,demos/sokoban.lisp}: Update.
	* modules/regexp/{Makefile.in,README,configure.in}: Update.
	* modules/wildcard/{Makefile.in,configure.in}: Update.
	* modules/postgresql642/Makefile: update

2000-03-30  Bruno Haible  <haible@clisp.cons.org>

	* lispbibl.d (hz): Undefine.

2000-03-30  Bruno Haible  <haible@clisp.cons.org>

	* stream.d (oconv_unshift_output_unbuffered_)
	(oconv_unshift_output_buffered_): Remove junk after #undef.

2000-03-29  Sam Steingold  <sds@gnu.org>

	concatenated-stream-streams compiles with ANSI now
	* stream.d (concatenated_stream_streams): return
	`strm_concat_list', not `strm_concat_totallist'

2000-03-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Change distribution of *_frame_info values: merge
	  CBLOCK_frame_info and CTAGBODY_frame_info into
	  CBLOCK_CTAGBODY_frame_info. Change CALLBACK_frame_info so that it
	  has skip2_bit set to 0.
	(callback_bit_t): Change meaning and value.
	(fun_bit_t): Change value.
	(cframe_bit_t, nested_bit_t): Swap values.
	* eval.d (unwind): Update.
	* debug.d (print_stackitem): Update. For a CBLOCK_frame, print the
	  block name, not the entire block cons.

2000-03-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clisp-link.in: Always pass "-norc" flag to lisp.run.

2000-03-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clisp-link.in (create-module-set): Remove generation of variables
	  wfiles_o and wfile_list.

2000-03-21  Sam Steingold  <sds@gnu.org>

	* inspect.lsp: use a vector instead of a hash for inspected
	objects.
	* clhs.lsp (*browsers*): support more browsers
	* makemake.in: fixed installation of clhs.txt

2000-03-20  Sam Steingold  <sds@gnu.org>

	* modules/clx/new-clx/Makefile.in:
	(CLISP): call clisp with '-norc -q'
	(clx.d): `e2d' bug workaround: remove ^e_$

2000-03-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_STRERROR): New macro.
	* configure.in: Call it.
	* unixconf.h.in (HAVE_STRERROR): New macro.
	* unix.d (strerror): New declaration.
	* lispbibl.d (init_errormsg_table): Remove declaration.
	* errunix.d (sys_nerr, sys_errlist): Don't declare if HAVE_STRERROR.
	(strerror) [!HAVE_STRERROR]: New function.
	(errormsg_table): Remove variable.
	(init_errormsg_table): Remove function.
	(get_errormsg): New function.
	(OS_error_internal, errno_out): Use get_errormsg instead of
	  errormsg_table.
	* spvw.d (main): Don't call init_errormsg_table.

2000-03-14  Sam Steingold  <sds@gnu.org>

	Integrated inspect
	* inspect.lsp: new file
	* init.lsp: load inspect
	* makemake.in (LPARTS): added inspect

2000-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Add BeOS support.
	  Based on patch by Alexis Rivera Rios <ahrivera@yahoo.com>.
	* unix.d: Likewise.

	* autoconf/aclocal.m4 (CL_READLINK): Check the return type as well;
	  it may be 'int' or 'ssize_t'. Define RETREADLINKTYPE.
	* unixconf.h.in (RETREADLINKTYPE): New macro.
	* unix.d (readlink): Use it.

	* autoconf/aclocal.m4 (CL_GETHOSTNAME): Try 'unsigned int' as well.

	* autoconf/aclocal.m4 (RL_SELECT, CL_SELECT): Include <sys/socket.h>.
	  Try 'struct fd_set' as well.

2000-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (compile-file): Don't pass a third argument to the
	  "~%~D error~:P, ~D warning~:P" format string.

	* lisparit.d: Don't use invalid syntax "## ".
	* posixmath.d: Don't use invalid syntax "## ".
	(POSIX:BOGOMIPS): Set mv_count after computing value1, not before.

	* clhs.lsp: The code lives in package SYSTEM, not LISP.
	  Bind *package* while reading clhs.txt.
	  Verify that the COMMON-LISP symbol is an exported one.

	* lndir: Fix defaultIFS, broken by Sam's previous patch 1999-12-23.

	* nls_iso8859_8.c: Regenerate using newest unicode.org table.

	* cc_sparc.il: Remove obsolete file.

2000-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Makefile.devel, configure, makemake.in: Drop oldoldreadline and
	  oldreadline.

2000-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (main): Emit warning if run without -B command line argument.

2000-03-08  Sam Steingold  <sds@gnu.org>

	* stream.d (socket-server): treat NIL as unbound.

2000-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove DOS (EMUNIX && !EMUNIX_PORTABEL, DJUNIX, WATCOM) ports.
	* errdjgpp.d: Remove file.
	* lispbibl.d: Remove support for DOS ports.
	(OS2): Renamed from DOSPC.
	(EMUNIX_PORTABEL): Remove macro, assume it defined whenever EMUNIX
	  is defined.
	(DJUNIX, WATCOM): Remove macros.
	(PATHNAME_MSDOS, PATHNAME_EXT83): Remove macro.
	* msdos.d: Likewise.
	* aridecl.d, arilev0.d, arilev1.d, constobj.d, constsym.d, error.d,
	  errunix.d, genclisph.d, hashtabl.d, pathname.d, spvw.d,
	  spvw_memfile.d, spvw_sigint.d, spvw_sigwinch.d, stream.d, time.d:
	  Update.
	* cfgdos.lsp, complete.lsp, defs1.lsp, describe.lsp, edit.lsp,
	  format.lsp, init.lsp, keyboard.lsp, macros2.lsp, runprog.lsp:
	  Remove DOS feature dependencies.
	* makemake.in: Remove support for dos, dosdjgpp, doswatcom.
	(INCLUDEDIR): Remove variable.
	* gettext/po/Makefile.devel (DSOURCES): Remove errdjgpp.
	* FILES.1: Update.

2000-03-08  Martin Atzmueller  <marty@cs.utexas.edu>

	* posix.lsp (resolve-host-ipaddr):
	use :addrtype everywhere
	(hostent): define struct-slot "addrtype" instead of "addr-type"

2000-03-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-object) [FUNCTION]: If the function's name
	  names a macro, recommend (DISASSEMBLE (MACRO-FUNCTION 'name))
	  instead of (DISASSEMBLE #'name).
	  Reported by Tijs van Bakel <smoke@casema.net>.

2000-03-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_terminal_stream_, rl_memory_abort): Use
	  rl_gnu_readline_p instead of rl_present_p.
	(init_streamvars): Call _rl_enable_paren_matching.
	* noreadline.d (rl_gnu_readline_p): Renamed from rl_present_p.

2000-03-03  Sam Steingold  <sds@gnu.org>

	* clhs.lsp (browse-url): expanded error message.

2000-03-02  Sam Steingold  <sds@gnu.org>

	* clos.lsp (slot-names): new function.
	* describe.lsp (describe-slotted-object): use it.
	(list-length-dotted): new function.
	(describe-object): use it.

2000-03-01  Sam Steingold  <sds@gnu.org>

	* clhs.lsp, clhs.txt: new files.
	* init.lsp: load clhs.

2000-02-29  Sam Steingold  <sds@gnu.org>

	* loop.lsp (destructure-vars, destructure-type): use tail recursion.

2000-02-28  Martin Atzmueller  <marty@cs.utexas.edu>

	* reploop.lsp: new and shorter debugger/stepper/main commands;
	('error :e) command for printing the error-message again;
	('backtrace-l, :bl, 'frame-limit, :fl) implemented something
	similar to the "print-frame-limit"-issue in the TODO list.g
	translated the comments.

2000-02-18  Sam Steingold  <sds@gnu.org>

	Implemented the ANSI CL `with-compilation-unit' macro.
	* compiler.lsp (with-compilation-unit): new macro.
	(*c-top-call*): new variable.
	(c-report-problems, c-reset-globals): new functions.
	(compile-file): use them.
	(init.lsp, defs3.lsp): export `with-compilation-unit'.

2000-03-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Version 2000-03-06 released.

2000-03-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* unix.d: Use clock_t instead of CLOCK_T.
	* encoding.d: Include <string.h>.
	* hashtabl.d (hashcode4_atom): Add default case to switch statement.

2000-03-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* dutch.lsp: New file, from Tijs van Bakel <smoke@casema.net>.
	* init.lsp: Load it.
	* makemake.in (LPARTS): Add dutch.
	* spvw_language.d (language_dutch): New macro.
	(init_language_from): Test for values NEDERLANDS and DUTCH.
	(init_language): Deal with language_dutch.

2000-03-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (charset_range): Define only if #ifdef UNICODE.
	(init_encodings): Initialize O(internal_encoding) only if #ifdef
	  UNICODE.
	* stream.d (FILE-STRING-LENGTH): If UNICODE is not defined, assume
	  min_bytes_per_char and max_bytes_per_char to be 1.

2000-03-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (SOCKET-SERVER): In the error message, output the argument,
	  not the symbol STREAM.

2000-03-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defmacro.lsp (macro-call-error): Add missing ~S to English
	translation.
	* describe.lsp (describe-object): Fix English message.
	Reported by Tijs van Bakel <smoke@casema.net>.

2000-02-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (sbNvector_atype, bNvector_atype, type_bits_to_atype):
	  New macros.
	* array.d (copy_sbvector, array_element_type, test_displaced): Use
	  sbNvector_atype and bNvector_atype.
	* hashtabl.d (hashcode_bvector): Use sbNvector_atype.
	* sequence.d (get_seq_type): Use sbNvector_atype and bNvector_atype.

2000-02-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Don't install emacs/*.el any more.

2000-02-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* arimips.d (subx_loop_down): If compiling for n32 ABI, the fifth
	  argument comes in a register, not from the stack.

2000-02-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (oint_symbolflags_shift): Remove obsolete definition.

2000-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Permit setting *terminal-encoding* to an iconv based stream.
	* lispbibl.d (set_terminalstream_external_format): New declaration.
	* stream.d (set_terminalstream_external_format): New function.
	* encoding.d (SYSTEM::SET-FOREIGN-ENCODING): Call it.

2000-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* errunix.d (init_errormsg_table): Add EILSEQ.

2000-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (encoding_from_name): Recognize ISO-8859-3.

2000-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure: Create a libiconv subdirectory, link over the configure
	  script, and run it with --enable-static --disable-shared.
	* win32msvc/INSTALL: Must pre-build libiconv.
	* makemake.in (USE_LIBICONV, XCL_ICONVLIB): New variables.
	(FILES): On Unix, add libiconv.a.
	(LIBS): Ad $XCL_ICONVLIB.
	(EVERY_INCLUDES_H): Add iconv.h.
	(iconv.h, libiconv.a): New targets.
	(clean1): Also remove libiconv.a.
	(clean4): Also remove iconv.h.
	* lispbibl.d (GNU_LIBICONV): Define always. Include "iconv.h".
	(max_bytes_per_chart): Increase to 8, for ISO-2022-CN[-EXT].
	* stream.d: Treat GNU_LIBICONV like HAVE_ICONV.
	(CLISP_INTERNAL_CHARSET): If using GNU_LIBICONV, define to
	  "UCS-2-INTERNAL".
	(iconv_init): New macro.
	(iconv_mblen): After iconv_open, call iconv_init. Treat E2BIG
	  correctly.
	(iconv_mbstowcs): After iconv_open, call iconv_init. Eliminate gcc
	  warning.
	(iconv_wcslen): After iconv_open, call iconv_init. Treat E2BIG
	  correctly.
	(iconv_wcstombs): After iconv_open, call iconv_init.
	(iconv_range): Likewise.
	(ChannelStream_init): Likewise.
	* pseudofun.d: Treat GNU_LIBICONV like HAVE_ICONV.
	* constsym.d: Add MACINTOSH alias. Add symbols for newly imported
	  encodings from libiconv.
	* encoding.d: Treat GNU_LIBICONV like HAVE_ICONV.
	(iconv_first_sym, iconv_last_sym, iconv_num_encodings): New macros.
	(MAKE-ENCODING): For iconv-based encodings, use max_bytes_per_chart,
	  not 6.
	(init_encodings): Define CHARSET:MACINTOSH and all symbols
	  corresponding to new imported encodings from libiconv.
	(encoding_from_name): Map "eucJP" etc. to the new encodings.
	* type.lsp (table filled by get-charset-range): Avoid filling the
	  cache with large interval lists (comparatively easy to compute).
	* Makefile.devel (CONFIGURES): Add libiconv/configure.
	(libiconv/autoconf/aclocal.m4, libiconv/configure): New rules.

2000-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/Makefile (ALL): Add nls_iso8859_16.c.
	(nls_iso8859_16.c): New rule.
	* nls_iso8859_16.c: New file.
	* encoding.d: Include nls_iso8859_16.c.
	(nls_tables): Add nls_iso8859_16.
	(encoding_from_name): Accept ISO-8859-16.
	* pseudofun.d (nls_iso8859_16_table): New entry.
	* makemake.in (NLS_INCLUDES): Add nls_iso8859_16.

2000-01-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* src/asmi386.sh: Terminate the here documents with EOF, not \EOF.

2000-01-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* modules/regexp/regexp.lsp (regexp-exec): Remove wrong declaration.

2000-01-12  Sam Steingold  <sds@gnu.org>

	* modules/regexp/regexp.lsp (regexp-compile): use `assert'
	(regexp-exec): `assert' that `string'  is a string

2000-01-10  Sam Steingold  <sds@gnu.org>

	* posixmisc.d: new file
	* unixaux.d (sysinfo_, resource_usage_limits_): moved to
	posixmisc.d

1999-12-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (translate_version): Don't access Car(*subst) before
	  checking whether consp(*subst).

1999-12-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_ctype.d (init_ctype): Recognize more language codes:
	  "af" (afrikaans), "ca" (catalan), "eu" (basque), "fo" (faeroese),
	  "ga" (irish), "gd" (scottish), "gl" (galician), "sq" (albanian),
	  "eo" (esperanto), "mt" (maltese), "be" (byelorussian),
	  "et" (estonian), "lt" (lithuanian), "lv" (latvian), "uk" (ukrainian).
	  Recognize more aliases: "english", "slovenian", "macedonian",
	  "serbian", "arabic".
	  Change default: KOI8-R for "ru" (russian) instead of ISO-8859-5,
	  ISO-8859-5 for "sr" instead of ISO-8859-2.

1999-12-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/Makefile (ALL): Add nls_koi8_u.c.
	(nls_koi8_u.c): New rule.
	* nls_koi8_u.c: New file.
	* spvw_ctype.d (init_ctype): Accept KOI8-U.
	* encoding.d: Include nls_koi8_u.c.
	(nls_tables): Add nls_koi8_u.
	(encoding_from_name): Accept KOI8-U.
	* pseudofun.d (nls_koi8_u_table): New entry.
	* makemake.in (NLS_INCLUDES): Add nls_koi8_u.

1999-12-29  Sam Steingold  <sds@gnu.org>

	* unixaux.d (sysinfo_): added _SC_THREAD_THREADS_MAX
	* posix.lsp (sysinfo): ditto

1999-12-28  Sam Steingold  <sds@gnu.org>

	* posixmath.d: redefine `floor' correctly
	(to_double, N_D): use functions instead of macros
	* posix.lsp: `print-object' for `rlimit' and `user-data'
	* init.lsp: load posix after clos
	* eval.d: removed all syscalls
	* constpack.d: added package POSIX
	* spvw.d, package.d: removed POSIX

1999-12-23  Sam Steingold  <sds@gnu.org>

	* subr.d, constsym.d: added `bogomips' and `resource_usage_limits_'
	* posix.lsp: export `bogomips' and `resource-usage-limits',
	reduce `sysinfo'
	* posixmath.d (bogomips): LISPFUNN now
	* unixaux.d (sysinfo): use uname(2) instead of sysinfo(2),
	(resource_usage_limits_): new LISPFUNN

1999-12-22  Sam Steingold  <sds@gnu.org>

	* unixaux.d (sysinfo): new function
	* subr.d, constsym.d: added `sysinfo'
	* eval.d: removed the posix functions
	* init.lsp: load the new file posix.lsp
	* posix.lsp: new file
	* makemake.in (LPARTS): added posix
	* pathname.d (user_data_): require argument
	* posixmath.d (bogomips): new function
	* socket.d (resolve_host_ipaddr_): require argument

1999-12-21  Sam Steingold  <sds@gnu.org>

	* posixmath.d: new file; erf(3m), bessel(3m) and gamma(3m)
	are now accessible in the package POSIX with --export-syscalls.
	* makemake.in, gettext/po/Makefile.devel: added `posixmath'.
	* lisparit.d: include posixmath.c.
	* subr.d, eval.d, constsym.d: added the functions.
	* constobj.d, package.d (init_packages), spvw.d
	(init_symbol_tab_2): added package POSIX.
	* socket.d (resolve_host_ipaddr): moved to POSIX.
	* pathname.d (file_stat, user_data): ditto.
	* compiler.lsp (c-DIRECT-FUNCTION-CALL): mention the arithmetic
	functions.
	(*deprecated-functions-list*): do not deprecate functions in POSIX.
	* init.lsp: export the functions from POSIX.

1999-12-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (iconv_wcslen): At the end, call iconv with NULL input.
	(iconv_wcstombs): At the end of the standalone case, call iconv with
	  NULL input.
	(oconv_unshift_output_unbuffered): New macro.
	(oconv_unshift_output_unbuffered_): New function.
	(finish_output_unbuffered, force_output_unbuffered, close_ochannel):
	  Call oconv_unshift_output_unbuffered.
	(oconv_unshift_output_buffered): New macro.
	(oconv_unshift_output_buffered_): New function.
	(finish_output_buffered, close_buffered): Call
	  oconv_unshift_output_buffered.

1999-12-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_WORDS_LITTLEENDIAN): Update for
	  autoconf-2.12. Use AC_CACHE_CHECK instead of AC_CHECK_VAL.

1999-12-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_ICONV): Check for the iconv function twice,
	  once in libc and once in libiconv, for OSF/1 and FreeBSD. Define
	  LIBICONV.
	* makemake.in: Use @LIBICONV@ like @LIBTERMCAP@ and @LIBDL@.

1999-12-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/ftp.unicode.org/UnicodeData.txt: Upgrade to Unicode
	  version 3.0.

1999-12-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/Makefile: Use plain-text tables instead of *.in files.
	* utils/unicode/nls_table.c: New file.
	* utils/unicode/nls_table.java, utils/unicode/nls_txt_to_in.java:
	  Remove files.
	* utils/unicode/ftp.unicode.org/*.TXT: Remove files.

1999-12-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (iconv_mbstowcs, iconv_wcstombs): When called from a
	  stream, and when valid data is followed by invalid data (EILSEQ),
	  return the converted valid data and don't signal an error yet.

1999-11-30  Sam Steingold  <sds@gnu.org>

	* spvw.d (init_object_tab): add :SYSCALLS to *FEATURES* when
	EXPORT_SYSCALLS is defined.

1999-11-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (utf8_mblen, utf8_mbstowcs): Make the UTF-8 decoder
	  "safe": Reject overlong byte sequences.

1999-11-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (char_width): New declaration.
	* charstrg.d (non_spacing_table_data, nonspacing_table_ind): New
	  arrays.
	(char_width, CHAR-WIDTH, STRING-WIDTH): New functions.
	* stream.d (wr_ss_lpos): Call char_width instead of graphic_char_p.
	  Don't assume every character increases the line position by 1.
	(write_char): Likewise.
	* io.d (pphelp_string_width): New function.
	(justify_end_eng, justify_end_weit): Use pphelp_string_width instead
	  of the string's length.
	* compiler.lsp (subr-info): Add char-width and string-width.
	* describe.lsp (write-to-short-string): Use string-width instead of
	  the string's length.
	* format.lsp (format-padded-string, format-justified-segments):
	  Likewise.

1999-11-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (Array_type_simple_bit_vector): New macro.
	(simple_bit_vector_p, bit_vector_p): Use it.
	* spvw_typealloc.d (allocate_bit_vector): Likewise.

1999-11-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* asmi386.sh and others: Use temporary files for the sed scripts.
	  GNU sed-2.05 concatenates multiple -e options to a single script
	  with embedded newlines, GNU sed-3.02 does not.

1999-11-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/acgeneral.m4 (AC_ARG_PROGRAM): Create `conftestsed' once
	  only.

1999-11-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (directory_diff_ab): Set new_piece to
	(cons ':directory subdirs), not (list ':directory subdirs).

1999-11-08  Valeriy E. Ushakov  <uwe@ptc.spbu.ru>

	* lispbibl.d (NEED_temp_mv_count, NEED_temp_value1): Define if
	  SPARC && UNIX_NETBSD.

1999-11-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (TheSarray, TheSbvector, TheCodevec): Fix typo.

1999-11-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* modules/clx/mit-clx/clx.lsp (base-char): Don't redefine in CLISP.

1999-11-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* affi.d (affi_call_argsa): Treat simple 8/16/32-bit-vectors like
	  non-simple ones. Use array_displace_check instead of
	  iarray_displace_check.
	* stream.d (test_n_bytes_args): Use array_displace_check instead of
	  iarray_displace_check.
	* sequence.d (READ-BYTE-SEQUENCE, WRITE-BYTE-SEQUENCE): Likewise.

1999-10-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp (define-condition): Accept a :DEFAULT-INITARGS option.

1999-10-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (elt_reverse, elt_nreverse): New declarations.
	* array.d (elt_reverse, elt_nreverse): New functions.
	* sequence.d (REVERSE): For vectors, use elt_reverse.
	(NREVERSE): For vectors, use elt_nreverse.

1999-10-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (uint1_p, uint2_p, uint4_p): New macros.
	(fehler_index_range, fehler_store, elt_copy, elt_move, elt_fill):
	  New declarations.
	* array.d (fehler_index_range): Make global.
	(fehler_store): New function, taken out of storagevector_store.
	(storagevector_store): Call it.
	(bit_copy, elt_copy_*_*, elt_copy): New functions.
	(elt_move_*, elt_move): New functions.
	(elt_fill): New function.
	(VECTOR-PUSH-EXTEND): Use the elt_copy_*_* functions.
	(ssbvector_push_extend): Use elt_copy_8Bit_8Bit.
	(make_storagevector): Use elt_fill.
	(reshape): Use elt_copy for speedup.
	* sequence.d (fehler_vector_index_range): New function.
	(copy_seqpart_into): For vectors, use elt_copy or elt_move.
	(MAKE-SEQUENCE, FILL): For vectors, use elt_fill.

1999-10-29  Sam Steingold  <sds@ksp.com>

	* modules/regexp/regexp.lsp (with-loop-split): New macro.
	(regexp-compile, regexp-exec, regexp-split): New functions.
	(match-once, %match): Use `regexp-compile' and `regexp-exec'.
	(regexp-compile, regexp-exec, regexp-split, with-loop-split): Export.

1999-10-22  Sam Steingold  <sds@ksp.com>

	* modules/clx/new-clx/demos/clx-demos.lsp (x-host-display):
	return 3 values (host, server, screen).
	Compile `qix' and `socoban' when compiling `clx-demos'.

1999-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (bit_op): Fix memory overrun bug. Require count > 0.
	(bit_up): Test for len==0 before calling bit_op.

1999-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (bit_compare): Fix memory overrun bug. Require count > 0.
	  Optimize the case index1 == index2 mod 8.
	* lispbibl.d (bit_compare): Require count > 0.
	* predtype.d (equal): Test for len1==0 before calling bit_compare.

1999-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Use __sun, not __sun__, as a test for Solaris.

1999-10-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (bit_compare, bit_op): Use `const'.

1999-10-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (bitpack, uint_bitpack, ...): Use 32-bit words if possible.

1999-10-18  Sam Steingold  <sds@ksp.com>

	* modules/clx/new-clx/demos/clx-demos.lsp: new file.
	define the clx-demos package and load the other demos.
	(getenv): get the environment variable.
	(x-host-display): parse $DISPLAY.
	(x-open-display): open the display according to $DISPLAY.
	* modules/clx/new-clx/demos/qix.lsp (qix): use `x-open-display'.
	* modules/clx/new-clx/demos/sokoban.lsp (init-sokoban): use
	`x-open-display'.

1999-10-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Introduce new primitive types for simple vectors with element-type
	(UNSIGNED-BYTE n), n = 2,4,8,16,32.
	* lispbibl.d (STANDARD_8BIT_TYPECODES): Define sb2vector_type etc.
	  and b2vector_type etc. Define case_sb2vector, case_ob2vector,
	  case_b2vector etc.
	(case_array): Include case_b2vector etc.
	(Rectype_b2vector, Rectype_Sb2vector, etc.): New rectype values.
	(arrayflags_notbytep_bit): Remove.
	(Array_type_b2vector, Array_type_sb2vector, etc.): New macros.
	(TheSarray, TheSbvector): Add sb2vector_type etc.
	(TheCodevec): Needs only s8bvector_type.
	(TheIarray): Add b2vector_type etc.
	(TheVarobject, ThePointer): Add sb2vector_type, b2vector_type, etc.
	(vectorp, simplep, array_simplep, simple_string_p, stringp): Update
	  for changed Rectype values.
	(simple_bit_vector_p, bit_vector_p): Take two arguments now.
	(byte_vector_p, general_byte_vector_p): Remove macros.
	(arrayp): Update for changed Rectype values.
	(cclosurep): Assume the codevector is an 8bit-vector.
	(case_Rectype_Sb2vector_above, case_Rectype_ob2vector_above)
	(case_Rectype_b2vector_above, etc.): New macros.
	(allocate_bit_vector): Take two arguments now.
	(DYNAMIC_BIT_VECTOR): Update.
	(allocate_byte_vector): Remove declaration.
	* spvw_objsize.d (size_sb2vector etc.): New macros.
	(objsize): Add cases for sb2vector, ob2vector, etc.
	(objsize_sb2vector etc.): New inline functions.
	(init_objsize_table): Add cases for sb2vector, ob2vector, etc.
	* spvw_global.d (init_mem_heaptypes): Add cases for sb2vector,
	  ob2vector, etc.
	* spvw_genera1.d (walk_area): Add cases for ob2vector etc. and
	  Rectype_b2vector, Rectype_Sb2vector etc.
	(build_old_generation_cache): Add cases for ob2vector etc. and
	  Rectype_b2vector, Rectype_Sb2vector etc.
	* spvw_update.d (update_varobject): Add cases for ob2vector etc. and
	  Rectype_b2vector, Rectype_Sb2vector etc.
	* spvw_garcol.d (gc_mark): Add cases for sb2vector, ob2vector, etc.
	  and Rectype_b2vector, Rectype_Sb2vector etc.
	* spvw_typealloc.d (allocate_bit_vector): Take two arguments now.
	(allocate_handle): Update.
	* spvw_circ.d (get_circ_mark): Add cases for b2vector etc. and
	  Rectype_b2vector etc.
	(get_circ_unmark): Likewise.
	(subst, subst_circ_mark, subst_circ_unmark): Likewise.
	* array.d (copy_sbvector): Make it work with any simple-[n]bit-vector.
	(allocate_byte_vector): Remove function.
	(iarray_displace, iarray_displace_check, array_displace_check):
	  Remove special treatment of indirect byte-arrays.
	(storagevector_aref, storagevector_store): Update: storage-vectors
	  are now always simple.
	(array_element_type): Update.
	(BIT, SBIT): Likewise.
	(bit_up): Simplify: Array_type_bvector now implies Atype_Bit. Don't
	  set arrayflags_notbytep_bit.
	(VECTOR-PUSH-EXTEND): Use allocate_bit_vector in place of
	  allocate_byte_vector.
	(allocate_bit_vector_0): Update.
	(make_ssstring): Don't set arrayflags_notbytep_bit.
	(make_ssbvector): Create an 8Bit vector.
	(ssbvector_push_extend): Update.
	(make_storagevector): Use allocate_bit_vector in place of
	  allocate_byte_vector.
	(test_displaced): Update.
	(MAKE-ARRAY): Update. Don't set arrayflags_notbytep_bit.
	(reshape): Update.
	(SYS::MAKE-BIT-VECTOR): Update.
	* eval.d (get_closure): Create an 8Bit vector.
	(eval_closure, apply_closure, funcall_closure): Assume the
	  codevector is an 8bit-vector.
	* record.d (SYS::CLOSURE-CODEVEC): Likewise.
	(SYS::MAKE-CODE-VECTOR): Create an 8bit-vector.
	(SYS::%MAKE-CLOSURE): Assume the codevector is an 8bit-vector.
	* hashtabl.d (hashcode_bvector): Remove special treatment of indirect
	  byte-arrays.
	(hashcode3_atom): Treat sb2vector_type, b2vector_type etc. and
	  Rectype_Sb2vector, Rectype_b2vector etc.
	(hashcode4_vector_2Bit etc.): Remove ->data indirection for storage
	  vectors.
	(hashcode4_vector): Update.
	(hashcode4_atom): Treat b2vector_type etc. and Rectype_b2vector etc.
	(sxhash_atom): Likewise.
	* predtype.d (equal): Simplify: Array_type_bvector now implies
	  Atype_Bit.
	(elt_compare_T_2Bit etc., elt_compare_Bit_2Bit etc. etc.): Remove
	  ->data indirection for storage vectors.
	(elt_compare): Update.
	(equalp): Treat b2vector_type etc. and Rectype_b2vector etc.
	(BIT-VECTOR-P, SIMPLE-BIT-VECTOR-P): Update.
	(TYPE-OF, CLASS-OF): Simplify: case_obvector now implies Atype_Bit.
	  Treat sb2vector etc. and ob2vector etc. and Rectype_Sb2vector etc.
	  and Rectype_ob2vector etc.
	(COERCE): Update. Optimize treatment of result-type = ARRAY/VECTOR/
	  SIMPLE-ARRAY.
	(enum_hs_simple_2bit_vector etc., enum_hs_2bit_vector): New enum
	  items.
	(enum_hs_byte_vector): Remove enum item.
	(heap_statistics_mapper): Update. Treat sb2vector etc. and ob2vector
	  etc. and Rectype_Sb2vector etc. and Rectype_ob2vector etc.
	* init.lsp: Export simple-2bit-vector etc. and 2bit-vector etc. Don't
	  export BYTE-VECTOR.
	* sequence.d (get_seq_type): Update.
	(READ-BYTE-SEQUENCE, WRITE-BYTE-SEQUENCE): Remove ->data indirection
	  for storage vectors.
	* io.d (allocate_syntax_table): Allocate an 8Bit-vector.
	(init_reader): Don't set arrayflags_notbytep_bit.
	(test_dots, read_internal, uninterned_reader): Assume an 8bit-vector.
	(bit_vector_reader, array_reader, structure_reader, closure_reader):
	  Update.
	(prin_object_dispatch): Treat b2vector like normal vector.
	(pr_orecord): Likewise.
	(pr_closure, pr_cclosure_codevector): Assume the codevector is an
	  8bit-vector.
	* encoding.d (string_to_asciz, string_to_asciz_): Create an
	  8bit-vector.
	* stream.d (make_unbuffered_stream, make_buffered_stream): Update.
	(rd_ch_terminal3): Assume ASCIZ-Strings are 8bit-vectors.
	(test_n_bytes_args): Simplify test for 8bit-vector.
	(SYS::READ-N-BYTES, SYS::WRITE-N-BYTES): Remove ->data indirection.
	(SYSTEM::BUILT-IN-STREAM-SET-ELEMENT-TYPE): Update.
	* lisparit.d (make_random_state): Update.
	* pathname.d (EXECUTE): Assume ASCIZ-Strings are 8bit-vectors.
	* foreign.d (convert_from_foreign_array_fill): Remove ->data
	  indirection.
	(convert_to_foreign): Simplify test for 8/16/32bit-vector. Remove
	  ->data indirection.
	* affi.d (affi_call_argsa, SYSTEM::MEM-READ, SYSTEM::MEM-WRITE-VECTOR):
	  Update. Simplify test for 8/16/32bit-vector.

1999-10-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make the TYPECODES model more extensible.
	* lispbibl.d (SUN4_29_1, SUN4_29_2, ACORN_1, ACORN_2, UNIX_SYSV_UHC_2):
	  Remove definitions.
	(TYPECODES): Don't define if we can force alignof(subr_) = 4.
	(oint_type_mask, oint_addr_mask): Remove most old, hand-determined
	  definitions.
	(TB7, ..., TB0): Never define TB5 to -1.
	(SUN3_TYPECODES, PACKED_TYPECODES, STANDARD_TYPECODES)
	(SIXBIT_TYPECODES, SEVENBIT_TYPECODES): Remove all. Replace with
	  STANDARD_8BIT_TYPECODES.
	(BTB7, ..., BTB0): Define.
	(addressbus_mask): Use SUN4_29 instead of SUN4_29_1.
	(subr_): Force alignment 4 if necessary.
	(vectorp, simplep, array_simplep, arrayp): Update for new typecodes.
	* genclisph.d (subr_): Force alignment 4 if necessary.
	(vectorp, arrayp): Update for new typecodes.
	* spvw.d (init_subr_tab_1): If NO_TYPECODES, verify subr_ alignment.
	* spvw_memfile.d (memflags): Update.

1999-10-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_garcol.d (update): Insert braces to avoid gcc warning.

1999-10-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* arilev0.d (sign_of_sint32): For SPARC64, define using shifts.
	(sign_of_sint16): Likewise.
	(mulu16): For SPARC64, use the builtin "umul".
	(mulu16_): Like for SPARC, also for SPARC64.
	(mulu24): For SPARC64, use the builtin "umul".
	(mulu32_): Like for SPARC, also for SPARC64.
	(divu_3216_1616, divu_3232_3232, divu_6432_3232, divu_32_rest)
	(isqrt_64_32): Like for SPARC, also for SPARC64.
	* intlog.d (integerlength8, integerlength16, integerlength32, ord2_32):
	  Don't use SPARC32 version for SPARC64.

1999-10-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/Makefile: Add nls_jisx0201.c to the targets.
	  In the iso-8859-* tables, don't make 0x80..0x9F invalid.
	  Generate nls_koi8_r.c from the ftp.unicode.org table.
	* encoding.d: Include nls_jisx0201.c.
	(nls_tables): Add nls_jisx0201_table.
	(nls_last_sym, nls_num_encodings): Update.
	* pseudofun.d (nls_jisx0201_table): New entry.
	* makemake.in (NLS_INCLUDES): Add nls_jisx0201.

1999-10-15  Sam Steingold  <sds@ksp.com>

	* modules/clx/new-clx/clx.f (get_font_info_and_display): fixed a
	typo (xatom --> xatoms).

1999-10-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (low_finish_output_unbuffered_socket)
	(low_force_output_unbuffered_socket)
	(low_clear_output_unbuffered_socket): Remove functions.
	(UnbufferedSocketStream_output_init): Use the equivalent pipe
	  functions instead. Use low_write_unbuffered_pipe instead of
	  low_write_unbuffered_handle.
	(low_flush_buffered_socket): Use low_flush_buffered_pipe instead of
	  low_flush_buffered_handle.
	* errunix.d (init_errormsg_table): Change message for EPIPE.

1999-10-05  Sam Steingold  <sds@ksp.com>

	* socket.d (ADDR_TO_STRING): new macro
	(HOSTENT_TO_STACK): use it

1999-09-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* genclisph.d (main): Define minus_bit, needed for minus_wbit. Define
	  minus_wbit, needed for framecode. In end_callback, use `framecode'
	  instead of `mtypecode'. Define uintP, needed for framebottomword,
	  needed for finish_frame, needed for begin_callback.

1999-09-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (c-GLOBAL-FUNCTION-CALL): When pushing forms onto
	  *package-tasks*, quote the arguments only when necessary.

1999-09-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (SET-DISPATCH-MACRO-CHARACTER): Call up_case on sub_char.
	(GET-DISPATCH-MACRO-CHARACTER): Likewise.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (UnbufferedStreamLow_pushfront_byte): Increment status
	  by 1, not by 2.
	(rd_ch_terminal3): Before calling readline(), stuff the pre-read
	  byte into readline's input buffer.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_CONNECT): For namelen, also try the type `socklen_t'.
	  Needed on 64-bit Solaris.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (iconv_wcslen, iconv_wcstombs): Call end_system_call()
	  before signalling an error.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (fehler_uint8): Declare always, not only ifdef HAVE_FFI.
	* error.d (fehler_uint8): Define always, not only ifdef HAVE_FFI.

	* intelem.d (Q_to_I): Define if defined(intQsize), not only if
	  defined(HAVE_FFI) && defined(intQsize). It's needed by DF_to_I.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (klammer_auf, klammer_zu, justify_start, justify_space)
	(justify_end_eng, justify_end_weit, indent_start, indent_end)
	(indentprep_start, indentprep_end, pr_enter1): Test for
	  builtin_stream_p before accessing ->strmtype.
	* encoding.d (SYSTEM::SET-TERMINAL-ENCODING): Likewise.
	* stream.d (CONCATENATED-STREAM-STREAMS, TWO-WAY-STREAM-INPUT-STREAM)
	(TWO-WAY-STREAM-OUTPUT-STREAM, ECHO-STREAM-INPUT-STREAM)
	(ECHO-STREAM-OUTPUT-STREAM): Likewise.
	(SYSTEM::BUILT-IN-STREAM-SET-ELEMENT-TYPE): If the synonym stream's
	  target is a Gray stream, recurse through (SETF STREAM-ELEMENT-TYPE).

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_language.d (init_language): Use `ascii_alphanumericp' instead
	  of `alphanumericp'.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_module.d (main_module): Fix type of declaration. Declare extern,
	  to avoid a warning.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* arisparc64.d: Take advantage of the brz and brnz instructions.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* arisparc.d (orc2_loop_up): Use the `orn' instruction.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_CANONICAL_HOST_CPU, CL_CANONICAL_HOST_CPU_FOR_FFCALL):
	  Tweak test for 64-bit sparc: cc defines `__sparcv9', whereas gcc
	  defines `__arch64__'.
	* lispbibl.d (SPARC64): Likewise.

1999-09-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_memfile.d (loadmem): Before quitting, close handle if needed.
	(loadmem_from_handle): Before quitting, always close handle.

1999-08-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_SIGNAL_REINSTALL, CL_SIGACTION_REINSTALL): Enable
	  `volatile' for gotsig.

1999-08-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/varbrace.d: New file.
	* makemake.in (NEED_ANSIDECL): Remove variable.
	(VARBRACE): New Makefile variable.
	(UTILS, XDECL_FILTER, XDECL_DEPENDENCIES): Add `varbrace'.
	* spvw_memfile.d (loadmem_from_handle): Define this function always,
	  not only on UNIX.
	* spvw_sigint.d (react_on_sigint): New function.
	(interrupt_handler, alarm_handler): Use it. Remove #if across
	  function bodies.

	* utils/modprep.d (is_if): Check for "#ifndef" as well.

1999-08-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* ansidecl.d (char_out, next_token, handle_closing_token): Turn
	  macros into inline function definitions. Speed doesn't matter here.

1999-08-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Assume size_t, pid_t, uid_t, gid_t, off_t are defined.
	* aclocal.m4 (CL_GETPWUID): Don't depend on AC_TYPE_UID_T.
	(CL_MMAP): Don't depend on AC_TYPE_SIZE_T, AC_TYPE_OFF_T.
	* configure.in: Don't call AC_TYPE_SIZE_T, AC_TYPE_PID_T,
	  AC_TYPE_UID_T, AC_TYPE_OFF_T.
	* unixconf.h.in: Don't define size_t, pid_t, uid_t, off_t.

	No compiler expands __builtin_strcmp inline.
	* aclocal.m4 (CL_BUILTIN_STRCMP): Remove.
	* configure.in: Don't call CL_BUILTIN_STRCMP.
	* unixconf.h.in: Don't define HAVE_BUILTIN_STRCMP.
	* lispbibl.d (asciz_equal): Don't define as a macro.
	* spvw.d (asciz_equal): Define as a function always.

	Assume clock_t is defined.
	* aclocal.m4 (CL_CLOCK_T): Remove.
	* configure.in: Don't call CL_CLOCK_T.
	* unixconf.h.in: Don't define CLOCK_T.
	* acorn.d: Likewise.
	* time.d (get_run_time): Use clock_t instead of CLOCK_T.

	Assume mode_t is defined.
	* aclocal.m4 (CL_MKDIR): Don't determine MODE_T, use mode_t instead.
	(CL_OPEN): Use mode_t instead of MODE_T. Don't depend on CL_MKDIR.
	* unixconf.h.in: Don't define MODE_T.
	* unix.d: Use mode_t instead of MODE_T.
	* unixaux.d (nonintr_open): Likewise.

	Assume ISC and Minix are dead.
	* configure.in: Don't call AC_ISC_POSIX and AC_MINIX.
	* unixconf.h.in: Don't define _POSIX_SOURCE, _POSIX_1_SOURCE, _MINIX.

	Assume rename() is available.
	* aclocal.m4 (CL_RENAME): Don't test for rename.
	* unixconf.h.in: Don't define HAVE_RENAME.
	* unix.d: Assume rename exists.
	* unixaux.d (rename): Remove function.

	Assume <stdlib.h> exists.
	* aclocal.m4 (CL_ACCESSFLAGS, CL_OPENFLAGS, RL_TERM, CL_MEMSET)
	(CL_MALLOC, CL_FREE, CL_SIGPROCMASK, CL_SIGNAL_REINSTALL)
	(CL_SIGNAL_UNBLOCK, CL_SIGNAL_BLOCK_OTHERS, CL_SIGACTION_REINSTALL)
	(CL_SIGACTION_UNBLOCK, CL_ABORT, CL_GETENV, CL_PUTENV, CL_SETLOCALE)
	(CL_RLIMIT, CL_VFORK, CL_EXECV, CL_EXECL, CL_WAITPID, CL_RUSAGE)
	(CL_GETCWD, CL_CHDIR, CL_MKDIR, CL_RMDIR, CL_FSTAT, CL_STAT)
	(CL_LSTAT, CL_READLINK, CL_ELOOP, CL_OPENDIR, CL_CLOSEDIR, CL_OPEN)
	(CL_READ_WRITE, CL_WRITE, CL_CHMOD, CL_RENAME, CL_UNLINK, CL_IOCTL)
	(CL_SELECT, CL_SETITIMER, CL_LOCALTIME, CL_GETPWNAM, CL_GETPWUID)
	(CL_GETHOSTNAME, CL_GETHOSTBYNAME, CL_ADDRESS_RANGE, CL_MMAP)
	(CL_MPROTECT, CL_CODEEXEC, CL_SHMGET, CL_SHMAT, CL_SHMCTL)
	(CL_SHM_RMID, CL_DYNLOAD, CL_ICONV, CL_FILECHARSET):
	  Assume <stdlib.h> exists.
	(CL_STDLIB_H): Remove.
	* configure.in: Don't call CL_STDLIB_H.
	* unixconf.h.in: Don't define HAVE_STDLIB_H.

	Assume <stddef.h> exists.
	* aclocal.m4 (CL_STDDEF_H): Remove.
	* configure.in: Don't call CL_STDDEF_H.
	* unixconf.h.in: Don't define HAVE_STDDEF_H.

	Assume waitpid() is available.
	* aclocal.m4 (CL_WAITPID): Don't test for waitpid or <sys/wait.h>.
	* unix.d: Assume waitpid exists.
	* unixaux.d (wait2): Likewise.
	* sigcld.d (end_want_sigcld): Likewise.
	* unixconf.h.in: Don't define HAVE_WAITPID and HAVE_SYS_WAIT_H.

	Assume memset() is available.
	* aclocal.m4 (CL_MEMSET): Don't test for memset.
	(CL_SIGACTION_REINSTALL, CL_SIGACTION_UNBLOCK): Assume memset exists.
	* spvw.d: Likewise.
	* unix.d: Likewise.
	* unixaux.d (install_signal_handler): Likewise.
	* unixconf.h.in: Don't define HAVE_MEMSET.
	* win32.d: Likewise.

	* configure.in: Remove AC_C_CONST call.
	* unixconf.h.in (const): Don't define.

	* aclocal.m4 (CL_RAISE): Fix harmless typo.

	* aclocal.m4 (CL_RLIMIT): Prefer RLIMIT_RESOURCE_T="int" to
	  RLIMIT_RESOURCE_T="enum __rlimit_resource".

1999-08-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (check_float_eltype, READ-FLOAT, WRITE-FLOAT): New
	  functions.
	* lispbibl.d (c_float_to_FF, FF_to_c_float, c_double_to_DF)
	(DF_to_c_double): Declare always, not only if HAVE_FFI.
	* flo_konv.d (c_float_to_FF, FF_to_c_float, c_double_to_DF)
	(DF_to_c_double): Define always, not only if HAVE_FFI.
	* floatpri.lsp (write-float-decimal): Renamed from write-float.
	* lisparit.d (print_float): Call sys::write-float-decimal instead of
	  sys::write-float.

	* type.lsp (canonicalize-type): Call typespec-error if the argument is
	  not a valid typespec.

1999-08-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aridecl.d (FF_exp_low, FF_exp_mid, FF_exp_high): Always choose the
	  IEEE values.
	(DF_exp_low, DF_exp_mid, DF_exp_high): Likewise.

1999-08-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* modules/clx/new-clx/demos/qix.lsp (draw-qix): Don't ignore nlines.
	  Improve herald message.

1999-08-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (PARSE-NAMESTRING): Don't make strong assumptions about
	  the algorithm employed by nreconc. Fixes a bug parsing "~/foo/".

1999-08-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (install_root): New variable.
	(installdirs, install-bin, install-man, install-doc, uninstall-bin)
	(uninstall-man,): Prepend $(install_root) to every installation
	  directory.

1999-07-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_ctype.d (init_ctype): Accept "he" as a new name for "iw".

1999-07-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (BINARY_DISTRIB): Also define on HP-UX 10.

1999-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (init_pathnames) [WIN32_NATIVE]: Follow documented
	  calling convention for GetVersionInfoEx.
	* misc.d (MACHINE-VERSION) [WIN32_NATIVE]: Likewise.

1999-07-26  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* screen.lsp (generic-stream-read-char-will-hang-p)
	(generic-stream-clear-input): Define the methods on
	  keyboard-controller, not screen-controller.

1999-07-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Version 1999-07-22 released.

1999-07-21  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* eval.d (interpret_bytecode_) [MC680X0]: Fix syntax error in
	  S_operand_ignore_ macro.

	* charstrg.d (stringof): Change dotimesC into dotimesL.

1999-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* init.lsp (load): Put back the call to ENGLISH. Necessary for
	  internationalization.

1999-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_RAISE): New macro.
	* unixconf.h.in (HAVE_RAISE): New macro.
	* configure.in: Call it.
	* unix.d (raise): Declare only if HAVE_RAISE is defined.
	* spvw_sigpipe.d (sigpipe_handler): Use kill(getpid(),...) if
	  HAVE_RAISE is not defined.

1999-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (distrib): If BINARY_DISTRIB is defined, distribute
	  clisp-link, linkkit, lisp.a etc. nevertheless, because we don't know
	  whether the user has a C compiler or not.

1999-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* record.d (CLOS::%ALLOCATE-INSTANCE): Fix typo in error message.

1999-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* asmi386.sh: New optional argument -no-C.
	* Makefile.devel (src/ari80386.msvc.c, src/sp80386.msvc.c): Pass
	  option -no-C to asmi386.sh.

1999-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (clisp.html): Substitute CLHSROOT, like in impnotes.html.

1999-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (wr_ch_unbuffered_dos, wr_ch_buffered_dos): Output crlf
	  only when obj is #\Newline.

1999-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* misc.d (MACHINE-VERSION) [WIN32]: On Win95, use info.dwProcessorType.

1999-07-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (XCFLAGS): Add "-fno-gcse" when using gcc-2.95 on Sparc.

1999-07-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (usage): Reorder command line options. Split into groups.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (SPARC64): New macro.
	  Treat SPARC64 mostly like DECALPHA and MIPS64.
	* arisparc64.d: New file.
	* spsparc64.d: New file.
	* arilev0.d (mulu16, mulu32, mulu32_unchecked, divu_3216_1616)
	(divu_3216_3216, divu_3232_3232, divu_6432_3232): Provide
	  implementations for SPARC64, consistently with arisparc64.d.
	* arilev1.d [SPARC64]: Include arisparc64 instead of arisparc.
	* makemake.in (cpu): Possibly set to sparc64.
	(ARI_ASMD, ARI_ASMS): Possibly add arisparc64.
	(SP_ASMD, SP_ASMS): Possibly add spsparc64.
	* FILES.1: Mention arisparc64, spsparc64, arimips64.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove support for K&R Sparc cc.
	* makemake.in: If TSYS = sun4 and not compiling with GNU C, assume
	  SunPRO C. Drop dependencies and rules for cc_sparc.il.
	* cc_sparc.il: Remove file.
	* FILES.1: Don't mention cc_sparc.il.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_WORDS_LITTLEENDIAN): Test for `__sparc__',
	  because gcc-2.95 on SparcLinux defines only `__sparc__', not `sparc'.
	* lispbibl.d: Likewise.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_CANONICAL_HOST_CPU)
	(CL_CANONICAL_HOST_CPU_FOR_FFCALL): Distinguish "sparc" and
	  "sparc64" according to the C compiler, not the uname result.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Treat gcc version 3.* like gcc version 2.95.

1999-07-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* arisparc.d (compare_loop_up) [COUNTER_LOOPS]: Bug fix.
	(shiftright_loop_up): Save 1 cycle if count==0.

1999-07-15  Joerg Hoehle  <Joerg.Hoehle@gmd.de>

	* affi.d (SYSTEM::MEM-WRITE): No need to check for integerp(wert),
	  it is done later during conversion.

	* socket.d (socket_getpeername): Fix the length argument to
	  gethostbyaddr.

1999-07-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* record.d (FINALIZE): Call coerce_function.

1999-07-09  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* stream.d (SOCKET-STREAM-HANDLE): Use TheSocket(), not TheHandle().

1999-07-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (low_clear_input_unbuffered_handle) [WIN32]: Set the
	  ignore_next_LF flag after eating a CR.
	(clear_input_unbuffered) [WIN32]: Don't reset the ignore_next_LF
	  flag.

1999-07-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* win32aux.d (interruptible_active): New variable.
	(temp_interrupt_handler): Query it and set it to FALSE.
	(DoInterruptible): Set it to TRUE only while the thread is running.

1999-07-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* misc.d (MACHINE-VERSION) [WIN32]: Use the info.wProcessorLevel field
	  only on WinNT.

1999-07-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Don't access objects in memory through `oint*' pointers.
	* spvw_mark.d (mark, unmark, marked): Use as_object/as_oint
	  conversions instead of oint* memory access.
	* spvw_update.d (update_STACKs): Use as_oint conversion instead of
	  oint* memory access.
	* spvw_garcol.d (gc_mark): Change type of `dies_' to `object*'.
	(gc_mark_stack, alive): Use as_oint conversion instead of oint*
	  memory access.
	(gc_morris3, update, update_stackobj): Use as_object/as_oint
	  conversions instead of oint* memory access.
	* spvw_memfile.d (update, loadmem_update): Likewise.
	* eval.d (nest_var, funcall_iclosure): Likewise.
	* control.d (make_variable_frame, LET, LET*, SYMBOL-MACROLET)
	(MULTIPLE-VALUE-BIND): Likewise.

1999-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/gcc-cccp/cccp.c (output_line_command): In the filename
	  being output, convert backslashes to double backslashes.

1999-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make sure the default-file-encoding is set to ISO-8859-1 during
	building, even if the user has set a different LC_CTYPE variable.
	* spvw.d (usage): Add -E option.
	(argv_encoding_file, argv_encoding_pathname, argv_encoding_terminal)
	(argv_encoding_foreign, argv_encoding_misc): New variables.
	(main): Add -E option.
	* _clisp.c (main): Handle -E option.
	* makemake.in (interpreted.mem, *.fas, lispinit.mem, lispinit2.mem)
	(testsuite, $(MODULES)): Together with option "-norc", pass
	  "-Efile ISO-8859-1".
	* encoding.d (encoding_from_name): New function, extracted from
	  init_dependent_encodings. Also accept ISO-8859-10/13/14/15.
	(init_dependent_encodings): Call it. Respect the values of
	  argv_encoding_file, argv_encoding_pathname, argv_encoding_terminal,
	  argv_encoding_foreign, argv_encoding_misc.

1999-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Fix interpretation of LC_* and LANG environment variables.
	* spvw_ctype.d (init_ctype): Treat empty environment values like
	  unset environment variables. LANG is not supposed to contain colons.
	  The encoding can be followed by other suffixes.

1999-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (GENERATIONAL_GC): Don't define on IRIX.

1999-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (NLS_INCLUDES): Add nls_iso8859_10, nls_iso8859_13.
	* encoding.d: Include them.
	(nls_tables): Refer to them.
	* pseudofun.d: Likewise.

1999-06-25  Sam Steingold  <sds@goems.com>

	* describe.lsp (apropos): print the macro for symbol-macro, no
	evaluation.
	(describe-object): ditto.
	Also, describe CAR & CDR for a simple cons.

1999-06-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Don't use Unicode API on Win32. It does not work on Win95.
	* lispbibl.d, win32.d, spvw.d, spvw_debug.d, spvw_language.d,
	  spvw_memfile.d, encoding.d, charstrg.d, pathname.d, stream.d,
	  misc.d, error.d, errwin32.d, win32aux.d: Revert most of 1999-06-20
	  patch.

1999-06-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (asciz_dir_to_pathname_): Change declaration of pathbuf.
	* errwin32.d (OS_error_internal_body): Fix compilation error.

1999-06-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Try to solve startup problems on Win95.
	* spvw.d (main) [TRIVIALMAP_MEMORY]: Call prepare_zeromap with
	  shrinkp=FALSE.

1999-06-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Determine the initial encoding by examining the user's locale.
	* lispbibl.d (init_dependent_encodings): New declaration.
	* spvw_ctype.d: New file.
	* spvw.d: Include <string.h> always.
	  Include spvw_ctype.d.
	(main): Remove LC_CTYPE code, instead call `init_ctype'. Later, call
	  `init_dependent_encodings'.
	* encoding.d (init_dependent_encodings): New function, moved out of
	  init_encodings. default-file-encoding and the others depend on
	  locale_charset.
	(init_encodings): Call init_dependent_encodings.
	* makemake.in (SPVW_INCLUDES): Add spvw_ctype.
	* gettext/po/Makefile.devel (DSOURCES): Add spvw_ctype.

1999-06-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Use Unicode API on Win32.
	* lispbibl.d (wchar, WLITERAL): New macros.
	(wgetenv): New macro.
	(wasciz_out, wasciz_length): New declaration.
	(wasciz_equal, wwasciz_equal): New declaration.
	(n_char_to_string): Renamed from make_string.
	(n_wchar_to_string): New declaration.
	(wasciz_to_string): New declaration.
	(with_string_w0, with_sstring_w0): New macros.
	(n_chart_to_wchar): New declaration.
	* win32.d (wgetenv): New macro.
	* spvw.d (wasciz_length, wasciz_equal, wwasciz_equal): New functions.
	(program_name): Change type to `wchar*'.
	(loadmem): Change declaration.
	(usage): Call wasciz_out instead of asciz_out.
	(main): On Win32 with UNICODE, rename to `wmain'. Change type of
	  argv to `wchar* []'. Change types of argv_lisplibdir, argv_memfile,
	  argv_init_files, argv_compile_files, argv_package, argv_expr,
	  argv_execute_file, argv_execute_args, argv_language, argv_localedir,
	  argv_init_files, argv_compile_files to use `wchar' instead of `char'.
	  Use wasciz_equal, wasciz_to_string, wasciz_out and WLITERAL where
	  appropriate.
	* spvw_debug.d (wasciz_out): New function.
	* spvw_language.d (init_language, init_language_from): Change
	  declarations.
	(init_language_from): Use wasciz_equal instead of asciz_equal.
	(init_language): Use wgetenv instead of getenv where appropriate.
	* spvw_memfile.d (loadmem): Change declaration. Use wasciz_equal
	  instead of asciz_equal where appropriate.
	* encoding.d (n_char_to_string): Renamed from make_string.
	(n_char_to_string_): Renamed from make_string_.
	(n_wchar_to_string_): New function.
	(asciz_to_string, asciz_to_string_): Update.
	(wasciz_to_string_): New function.
	* charstrg.d (n_chart_to_wchar): New function.
	* pathname.d (make_directory, delete_directory)
	(change_current_directory, delete_existing_file)
	(delete_file_if_exists, delete_file_before_rename)
	(rename_existing_file, rename_file_to_nonexisting): Change
	  declaration.
	(asciz_dir_to_pathname): Change declaration. Use n_wchar_to_string
	  instead of make_string.
	(good_drive): Use wchar instead of char.
	(default_drive): Return wchar instead of uintB. Use wchar instead
	  of char.
	(default_directory_of): Use wchar instead of char.
	(assure_dir_exists): Likewise. Use n_wchar_to_string instead of
	  make_string.
	(change_default): Use wchar instead of char.
	(access0): Change declaration.
	(file_exists): Use wchar instead of char.
	(directory_exists, DELETE-FILE, rename_file): Likewise.
	(create_new_file, open_input_file, open_output_file): Change
	  declaration.
	(create_backup_file): Change declaration. Use wchar instead of char.
	(open_file): Use wchar instead of char.
	(extract): Use n_char_to_string instead of make_string.
	(directory_search_1subdir): Use wchar instead of char.
	(directory_search_scandir): Use n_char_to_string instead of
	  make_string. Use wchar instead of char. Use wasciz_to_string instead
	  of asciz_to_string.
	(DIRECTORY): Use n_char_to_string instead of make_string.
	(MAKE-DIR, DELETE-DIR, ENSURE-DIRECTORIES-EXIST): Use wchar instead
	  of char.
	(init_pathnames): Use n_char_to_string instead of make_string.
	  Use wchar instead of char. Use wgetenv instead of getenv.
	(FILE-WRITE-DATE, SHELL): Use wchar instead of char.
	(argv_lisplibdir): Change declaration.
	* stream.d (make_keyboard_stream): Use wchar instead of char.
	(create_input_pipe): Change declaration.
	(MAKE-PIPE-INPUT-STREAM): Update.
	(create_output_pipe): Change declaration.
	(MAKE-PIPE-OUTPUT-STREAM): Update.
	(create_io_pipe): Change declaration.
	(MAKE-PIPE-IO-STREAM): Update.
	* misc.d (SYS::GETENV): Use wchar instead of char. On Win32 with
	  UNICODE, use _wgetenv. Use wasciz_to_string instead of
	  asciz_to_string.
	(SYS::REGISTRY): Use wchar instead of char.
	* error.d (write_errorasciz, write_errorwasciz): New functions.
	* erramiga.d (OS_error_internal): Use write_errorasciz instead of
	  write_errorstring.
	* errdjgpp.d (OS_error_internal): Likewise.
	* errunix.d (OS_error_internal): Likewise.
	* errwin32.d (OS_error_info): Remove type.
	(OS_error_info_callback): New type.
	(get_OS_error_info): Take a callback and call it, instead of
	  returning the result in a structure. Use wchar instead of char.
	(OS_error_internal_body): New function, split out of
	  OS_error_internal. Call write_errorasciz and write_errorwasciz
	  instead of write_errorstring.
	(SOCK_error): Call write_errorasciz instead of write_errorstring.
	(errno_out_body): New function, split out of errno_out. Call
	  wasciz_out.
	* rexx.d (rexx_getmsg): Use n_char_to_string instead of make_string.
	* win32aux.d (init_win32): Call non-Unicode versions of OemToChar and
	  CharToOem.
	* genclisph.d (n_char_to_string): Renamed from make_string.

1999-06-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Don't force building clisp.dvi on non-Unix OSes.
	* makemake.in (MANUALS): Remove clisp.dvi.
	(manual): Add it, on Unix only.
	(manualx): Add it, on non-Unix only.
	(install-doc, uninstall-man): Treat it like $(MANUALS).

1999-06-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* cfgacorn.lsp, cfgamiga.lsp, cfgdos.lsp, cfgwin32.lsp
	(*clhs-root-default*): Assign default value.
	* makemake.in (config.lsp): Emit "echo ... >> config.lsp" only for
	  Unix.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (low_flush_buffered_socket): Call sock_write, not
	  full_write.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (create_input_pipe): New function.
	(MAKE-PIPE-INPUT-STREAM): Call it.
	(create_output_pipe): New function.
	(MAKE-PIPE-OUTPUT-STREAM): Call it.
	(create_io_pipe): New function.
	(MAKE-PIPE-IO-STREAM): Call it.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* socket.d (inet_addr): Don't declare on WIN32.
	(setsockopt): Remove second declaration.
	(SOCKET-SERVICE-PORT): On WIN32, use a replacement for getservent().

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (callback.h): Copy also vacall_r.h and trampoline_r.h.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (GETTEXT): Define also if not using GNU_GETTEXT.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* places.lsp (MACRO-FUNCTION): Ignore `env'.

1999-06-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (strm_keyboard_len): Define as strm_len, not 0.
	(make_keyboard_stream): Don't add strm_len to strm_keyboard_len, it
	  is already included.

1999-06-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (malloc, free): Remove declarations.
	(malloca, freea): Move declarations.
	(DRIVER_frame_data): Remove type.
	* spvw_alloca.d (malloc, free): New declarations.
	* aridecl.d (HAVE_NUM_STACK, NUM_STACK, NUM_STACK_bound)
	(NUM_STACK_normal): Remove declarations.
	(num_stack_need, num_stack_need_1): Remove obsolete code. Add
	  `unused' to avoid gcc warnings.
	(NUM_STACK_normal, arith_ueberlauf, compare_NUM_STACK_bound): Remove.
	(SAVE_NUM_STACK, RESTORE_NUM_STACK. num_stack_need)
	(num_stack_need_1): New definitions, using malloca/freea.
	* intlog.d (I_I_logior_I, I_I_logxor_I, I_I_logand_I, I_I_logeqv_I)
	(I_I_lognand_I, I_I_lognor_I, I_I_logandc2_I, I_I_logorc2_I)
	(I_lognot_I): Defer RESTORE_NUM_STACK until done with the temporary
	  digit sequence.
	(I_I_ash_I): Do RESTORE_NUM_STACK before error.
	* intplus.d (DS_1_plus, DS_minus1_plus): Do RESTORE_NUM_STACK before
	  error.
	(I_1_plus_I, I_minus1_plus_I): Defer RESTORE_NUM_STACK until done
	  with the temporary digit sequence.
	(I_I_plus_I, I_minus_I, I_I_minus_I): Likewise. Do RESTORE_NUM_STACK
	  before error.
	* intbyte.d (lb_extract): Move SAVE_NUM_STACK and defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	(mkf_extract): Likewise.
	* intmal.d (UDS_square_UDS): Do RESTORE_NUM_STACK before error.
	(I_square_I): Move SAVE_NUM_STACK and defer RESTORE_NUM_STACK until
	  done with the temporary digit sequence.
	(UDS_UDS_mal_UDS): Do RESTORE_NUM_STACK before error.
	(I_I_mal_I): Move SAVE_NUM_STACK and defer RESTORE_NUM_STACK until
	  done with the temporary digit sequence.
	* intdiv.d (UDS_divide_): Move SAVE_NUM_STACK and defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	(I_I_divide_I_I): Defer SAVE_NUM_STACK until needed. Defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	* intgcd.d (I_I_gcd_I) [1]: Defer RESTORE_NUM_STACK until done with
	  the temporary digit sequence.
	(I_I_gcd_I) [3]: Likewise.
	(I_I_xgcd_I_I_I) [3]: Do RESTORE_NUM_STACK before side return.
	* intsqrt.d (UDS_sqrt_): Defer RESTORE_NUM_STACK until done with the
	  temporary digit sequence.
	(I_isqrt_I, I_sqrtp):  Move SAVE_NUM_STACK and defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	(I_rootp): Defer RESTORE_NUM_STACK until done with the temporary
	  digit sequence.
	* intread.d (DIGITS_to_I): Defer RESTORE_NUM_STACK until done with the
	  temporary digit sequence.
	* dfloat.d (DF_DF_durch_DF): Defer RESTORE_NUM_STACK until done with
	  the temporary digit sequence.
	(DF_sqrt_DF): Likewise.
	* lfloat.d (LF_ftruncate_LF, LF_futruncate_LF, LF_fround_LF): Defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	(LF_LF_plus_LF): Do RESTORE_NUM_STACK before error or return.
	(LF_square_LF): Move SAVE_NUM_STACK and defer RESTORE_NUM_STACK
	  until done with the temporary digit sequence. Do RESTORE_NUM_STACK
	  before error or return.
	(LF_LF_mal_LF): Likewise.
	(LF_LF_durch_LF): Likewise.
	(LF_sqrt_LF): Likewise.
	(LF_to_I): Move SAVE_NUM_STACK.
	* realrand.d (I_random_I): Move SAVE_NUM_STACK and defer
	  RESTORE_NUM_STACK until done with the temporary digit sequence.
	* lisparit.d (mal_10_plus_x): Defer RESTORE_NUM_STACK until done with
	  the temporary digit sequence. Do RESTORE_NUM_STACK before error.
	(decimal_string): Defer RESTORE_NUM_STACK until done with the
	  temporary digit sequence.
	* eval.d (unwind): No need to reset NUM_STACK when reaching a
	  DRIVER_frame.
	* debug.d (driver): No need to save current NUM_STACK in the frame.
	(break_driver): No need to save and restore NUM_STACK.
	* control.d (SYS::DRIVER): No need to save current NUM_STACK in the
	  frame.
	* spvw.d: No need any more for include "aridecl.c".
	(main): Remove teile_NUM_STACK, assume it is 0.

1999-06-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intlog.d (I_I_ash_I): Restrict begin/end_arith_call() to the case
	  where it is needed.
	* intbyte.d (lb_extract): Restrict begin/end_arith_call() to the case
	  where it is needed.
	* intmal.d (I_square_I): Move begin_arith_call() until after
	  num_stack_need.
	* intgcd.d (I_I_gcd_I) [3]: Move begin_arith_call() until after
	  num_stack_need.
	(I_I_xgcd_I_I_I) [3]: Likewise.
	* intsqrt.d (UDS_sqrt_): Move begin_arith_call() until after
	  num_stack_need.
	(I_rootp): Likewise.
	* lfloat.d (LF_LF_plus_LF): Move begin_arith_call() until after
	  num_stack_need.
	(LF_sqrt_LF): Restrict begin/end_arith_call() to the case where it
	  is needed.
	* realelem.d (R_R_gleich): Restrict begin/end_arith_call() to the case
	  where it is needed.
	* lisparit.d (mal_10_plus_x): Restrict begin/end_arith_call().

1999-06-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intelem.d (FN_to_NDS_nocopy, I_to_NDS_nocopy): Expand into more
	  efficient code.
	(FN_to_NDS_nocopy_): New macro.
	(BN_to_NDS_nocopy): Add `unused' to avoid gcc warnings.
	* intmal.d (I_I_mal_I): Put brace around I_to_NDS_nocopy.
	* intdiv.d (I_I_divide_I_I): Put brace around I_to_NDS_nocopy.
	* intsqrt.d (I_rootp): Put brace around I_to_NDS_nocopy.

1999-06-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_sigsegv.d (stackoverflow_handler): Restore the STACK on Solaris
	  and OSF/1 as well.
	* lispbibl.d: After sigsegv.h is included, undefine DS, SP, EAX.

1999-06-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (UNIX_OPENBSD): New macro.
	* eval.d (interpret_bytecode_): Use hairy gas assembler syntax only
	  on Linux and *BSD, never on other OSes.

1999-06-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* eval.d (interpret_bytecode_): Use "\n\t" as assembler statement
	  separator instead of ";".

1999-06-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-object): Put back i18n call around
	  punctuation strings.
	* socket.d (resolve_host_ipaddr): Likewise.

1999-06-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d, genclisph.d: Prepare for __GNUC__ == 3.

1999-06-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (macroexpand-1): Do not pass ENV to `macro-function'.
	(c-form): Do not pass ENV to `macro-function'.

	* places.lsp (MACRO-FUNCTION): Add optional, ignored env argument.

	* control.d (SYSTEM::OLD-MACRO-FUNCTION): New function.
	* eval.d (FUNTAB): Use it instead of MACRO-FUNCTION.
	* compiler.lsp (funtab): Likewise.

	* sequence.d (test_count_arg): Simplify.

1999-06-10  Sam Steingold  <sds@goems.com>

	* describe.lsp (describe-object): dump `ENGLISH' before ".".

	* socket.d (resolve_host_ipaddr): correct the order of arguments
	in the `fehler' call.

	* init.lsp (*load-level*): new variable.
	(load): use it to indent the verbose printout nicely.

1999-06-10  Sam Steingold  <sds@goems.com>

	* list.d (nreconc): be as smart about `nreconc' as we are about
	`nreverse'.

1999-06-09  Sam Steingold  <sds@goems.com>

	* misc.d (set-ansi): set `*coerce-fixnum-char-ansi*',
	`*sequence-count-ansi*', and `*print-pathnames-ansi*'.
	* constsym.d: added `*coerce-fixnum-char-ansi*',
	`*sequence-count-ansi*', and `*print-pathnames-ansi*'.
	* spvw.d: added `*coerce-fixnum-char-ansi*',
	`*sequence-count-ansi*', and `*print-pathnames-ansi*'.
	* sequence.d (test_count_arg): check `*sequence-count-ansi*'.
	* io.d (pr_orecord): check `*print-pathnames-ansi*'.
	* charstrg.d (coerce_char): check `*coerce-fixnum-char-ansi*'.
	* places.lsp: added documentation for `*ansi*'.

1999-06-09  Sam Steingold  <sds@goems.com>

	Implemented the ANSI CL Issue MACRO-FUNCTION-ENVIRONMENT:YES
	* control.d (macro_function): optional second argument.
	* subr.d (macro_function): ditto.
	* compiler.lsp (macroexpand-1): pass ENV to `macro-function'
	(subr-info): optional second argument of `macro-function'.
	(c-form): pass ENV to `macro-function'.

1999-06-08  Sam Steingold  <sds@goems.com>

	* describe.lsp (apropos-do-more): new function.
	(apropos): use it.
	(describe-object package): `*describe-nesting*' should be checked
	for being 0, not 1.

1999-06-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (*toplevel-environment*, *toplevel-denv*): Move
	  variables...
	* init.lsp (*toplevel-environment*, *toplevel-denv*): ... to here.

1999-06-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intparam.d (printf_underscored): Change argument type to
	  `const char*'.

1999-06-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* init.lsp (defun): Don't use get-funname-symbol, to avoid
	  bootstrapping problems.

1999-06-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	SOCK_error() generates an error of type `os-error'.
	* errwin32.d (SOCK_error): use `simple_os_error'.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make DEFUN behave the same way w.r.t. inlining, whether executing
	compiled or interpreted.
	* compiler.lsp (compile-form-in-toplevel-environment): New function.
	* init.lsp (load): Call it, don't pass nil as %denv% to compile-form.
	(defun): Save the lambdabody for inline compilation also when
	  running interpreted.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	New command-line option "-w".
	* spvw.d (usage): Mention "-w".
	(argv_wait_keypress): New variable.
	(main): Set it if option "-w" is given.
	(quit): If argv_wait_keypress, emit a message and call WAIT-KEYPRESS.
	* _clisp.c (main): Accept "-w".
	* keyboard.lsp (wait-keypress): New function.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-object): Treat FOREIGN-FUNCTION, SYMBOL-MACRO,
	  ENCODING.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make DESCRIBE more robust against interruptions.
	* describe.lsp (describe-stream): New stream class.
	(stream-*): New methods on describe-stream.
	(describe-slotted-object): Omit all *describe-nesting* indentations.
	  Add *print-indent-lists* to tabpos. Call describe with stream, not
	  *standard-output*.
	(describe-object): Omit all *describe-nesting* indentations.
	  Call describe with stream, not *standard-output*.
	(describe-object) [PACKAGE]: Tweak spacing.
	(describe1): New function.
	(describe): Bind *describe-nesting* and *describe-done* instead of
	  setting them. In top-level calls, create a describe-stream.
	(describe-signature): Omit all *describe-nesting* indentations.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* room.lsp (room, space-tabulate): Use *print-right-margin* instead of
	  sys::*prin-linelength* when it is non-NIL.
	* describe.lsp (describe): Likewise.
	* compiler.lsp (compile-file): Likewise.

1999-06-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-slotted-object, describe-object, describe)
	(describe-signature): Fix amount of indentation white space.
	(describe): Bind *describe-nesting* instead of setting it. This
	  ensures it goes back to 0 after describe signalled an error.

1999-06-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (READ-CHAR-STATUS): Remove function.
	(READ-CHAR-WILL-HANG-P): New function.
	* stream.d (listen_generic): Call GENERIC-STREAM-READ-CHAR-WILL-HANG-P
	  instead of GENERIC-STREAM-READ-CHAR-STATUS.
	(stream_listen): Call STREAM-READ-CHAR-WILL-HANG-P instead of
	  STREAM-READ-CHAR-STATUS.
	* gstream.lsp (stream-read-char-status): Remove function.
	(stream-read-char-will-hang-p): New function.
	(generic-stream-read-char-status): Remove function.
	(generic-stream-read-char-will-hang-p): New function.
	* screen.lsp (generic-stream-read-char-status@screen-controller):
	  Remove method.
	(generic-stream-read-char-will-hang-p@screen-controller): New method.

1999-06-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (apropos-list, *apropos-do-more*, apropos): Move.

1999-06-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* cfgwin32.lsp (clhs-root): Don't signal an error if value not defined
	  in registry.

1999-06-04  Sam Steingold  <sds@goems.com>

	* makemake.in: setq `*clhs-root-default*' in config.lsp.
	* cfgunix.lsp (clhs-root): new function.
	(*clhs-root-default*): new variable.
	* cfgacorn.lsp, cfgamiga.lsp, cfgdos.lsp, cfgsunux.lsp, cfgwin32.lsp:
	Likewise.

1999-06-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* trace.lsp (untrace1): Don't use replace-in-fenv here either.

1999-06-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (READLINELIB): Don't pass option "-r" to $(MAKE) for
	  building in subdirectory. It doesn't work with Irix 6.5 `make'
	  because readline/Makefile.in uses implicit rules.

1999-06-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (Encoding): Add enc_towcs_error, enc_tombs_error slots.
	(encoding_length): Update.
	* encoding.d (uni32_mblen, uni32be_mbstowcs, uni32le_mbstowcs)
	(utf8_mblen, utf8_mbstowcs): Error handling respects enc_towcs_error.
	(nls_asciiext_mblen, nls_asciiext_wcslen): New functions.
	(nls_mblen, nls_mbstowcs, nls_asciiext_mbstowcs): Error handling
	  respects enc_towcs_error.
	(nls_wcslen, nls_wcstombs, nls_asciiext_wcstombs): Error handling
	  respects enc_tombs_error.
	(MAKE-ENCODING): Two new keyword arguments. Fully initialize newly
	  allocated encoding.
	(init_encodings): Fully initialize newly allocated encodings.
	  Stuff in nls_asciiext_mblen, nls_asciiext_wcslen where appropriate.
	  Pass two more unbounds to C_make_encoding.
	* stream.d (test_external_format_arg): Pass two more unbounds to
	  C_make_encoding.
	(iconv_mblen, iconv_mbstowcs): EILSEQ treatment respects
	  enc_towcs_error.
	(iconv_wcslen, iconv_wcstombs): EILSEQ treatment respects
	  enc_tombs_error.
	* pseudofun.d: Add nls_asciiext_mblen, nls_asciiext_wcslen.
	* type.lsp (canonicalize-type, encoding-charset): Update
	  sys::%record-ref argument.

1999-06-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_CANONICAL_HOST_CPU, CL_CANONICAL_HOST_CPU_FOR_FFCALL):
	  Canonicalize alpha variants to alpha.

1999-05-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (CFILES): Don't include $UNICODE_INCLUDES $NLS_INCLUDES.
	(init): Instead, add them to the `init' target.

1999-05-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Libtoolify avcall and callback.
	* foreign.d: Include avcall.h and callback.h.
	* makemake.in (foreign): Depend on avcall.h and callback.h.
	(avcall.h, libavcall.a, callback.h, libcallback.a): Create by
	  doing "make install-lib" in the subdirectory.
	(clean1): Remove libavcall.* and libcallback.*.
	(clean4): Remove avcall.h and callback.h.

1999-05-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* asmi386.hh (DECLARE_FUNCTION): New macro.
	(INSN2MOVX): Fix bug with ANSI C preprocessors.
	(ALIGN): Don't put parentheses. For Solaris/x86.
	* asmi386.sh: Introduce C(...) macro calls. Recognize more jumps.
	  Introduce DECLARE_FUNCTION(...) macro calls.

1999-05-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (sigsegv.h, libsigsegv.a): Do "make install-lib" instead
	  of "make install".
	(clean1): On Win32, remove sigsegv.lib, not libsigsegv.*.

1999-05-30  Sam Steingold  <sds@goems.com>
	    Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Implement ALLOCATE-INSTANCE.
	* record.d (clos::old-%allocate-instance): Renamed from
	  clos::%allocate-instance.
	(clos::%allocate-instance): New function, with &rest arguments.
	(do_allocate_instance): New function. Remove unneeded if_classp
	  check.
	(clos::%initialize-instance): Adapt to new format of
	  *make-instance-table* entries.
	(clos::%make-instance): Likewise. Call do_allocate_instance, or
	  the effective method for allocate-instance if it is not the default
	  one.
	* eval.d (FUNTAB): clos::old-%allocate-instance replaces
	  clos::%allocate-instance.
	* compiler.lsp (funtab, c-DIRECT-FUNCTION-CALL): Likewise.
	* init.lsp: Export allocate-instance.
	* defs3.lsp: Likewise.
	* clos.lsp: Likewise.
	(*dynamically-modifiable-generic-function-names*): Add
	  `allocate-instance'.
	(|#'allocate-instance|): New variable.
	(std-add-method, std-remove-method): When changing allocate-instance,
	  call note-ai-change.
	(note-i-meta-change, note-ai-change): New functions.
	(valid-make-instance-keywords): Add the ALLOCATE-INSTANCE keywords.
	(make-instance-table-entry1): New function.
	(make-instance-table-entry2): Return 2 values.
	(initialize-instance@standard-object): Adapt to new format of
	  *make-instance-table* entries.
	(initial-initialize-instance): Create new-style *make-instance-table*
	  entry.
	(allocate-instance): New generic function.
	(initial-make-instance): Call the effective method for
	  allocate-instance. Create new-style *make-instance-table* entry.

1999-05-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Change a few occurrences of ${NEXT_M} to ${NEXT_}.

1999-05-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make --with-unicode the default.
	* makemake.in (info_help): Mention --without-unicode instead of
	  --with-unicode.
	(XCFLAGS, UNICODE_INCLUDES, NLS_INCLUDES): Test $with_nounicode
	  instead of $with_unicode.
	* configure: Don't pass --with-unicode to makemake.
	* Makefile.devel (*/makefile*): Create without --with-unicode.

1999-05-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* type.lsp: (def-atomic-type, def-compound-type): New macros.
	(c-typep-alist1, c-typep-alist2, c-typep-alist3): Fill here.
	* compiler.lsp: Not here.

1999-05-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (clean1): Remove libsigsegv.la.
	(clean4): Remove libintl.h, sigsegv.h.
	(clean5): Remove ANNOUNCE, GNU-GPL, SUMMARY, version.h, NEWS,
	  clisp.gif, MAGIC.add, ccmp2c, modprep.

1999-05-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (clean1, clean2): Don't remove wlisp* and wsuite*.

1999-05-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (sigsegv.h, libsigsegv.a): Generate by calling
	  "make install" in the subdirectory, not through symlinks.

1999-05-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure.in: Add check for groff.
	* makemake.in (GROFF): New variable.
	(htmldir, dvidir): New Makefile variables.
	(ROFF_MAN, ROFF_DVI): Set if $GROFF is nonempty.
	(ROFF_DVI): Don't define if $GROFF is empty.
	(clisp.dvi): Create if and only if $GROFF is nonempty.
	(MANUALS): Include clisp.dvi if and only if $GROFF is nonempty.
	(installdirs): Create $(htmldir) and $(dvidir) instead of
	  $(mandir)/html.
	(install-man): Clean up dependencies.
	  Use $(htmldir) and $(dvidir) instead of $(mandir)/html.
	  Install clisp.dvi and clreadline.dvi if appropriate.
	(uninstall-man): Use $(htmldir) and $(dvidir) instead of
	  $(mandir)/html. Also remove clisp.dvi and clreadline.dvi.
	(distrib): Distribute clisp.dvi if and only if $GROFF is nonempty.
	(clean1): Also remove clisp.dvi.
	* _distmakefile (htmldir, dvidir): New variables.
	(install-man): Install clisp.1 without modifications.
	  Also install clisp.html, clisp.dvi, clreadline.html, clreadline.dvi.

1999-05-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure: In avcall and callback, do "make minicheck" instead of
	  "make check".

1999-05-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* macros2.lsp (check-type): Don't quote the string argument.
	* conditio.lsp (check-type): Likewise.

1999-05-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (distrib): Reorganize. Distribute the data/ directory
	  and its contents. Distribute the `full' linking set also if
	  BINARY_DISTRIB is set.

1999-05-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make `clisp' an executable, also in the case of UNIX_BINARY_DISTRIB.
	* _clisp.c [UNIX_BINARY_DISTRIB]
	(room_for_lisplibdir, room_for_localedir): New arrays.
	(LISPLIBDIR, LOCALEDIR): New definitions, pointing into the arrays.
	* utils/hardcode.c: New file.
	* _distmakefile: Treat UNIX_BINARY_DISTRIB like other UNIX platforms.
	(install): Create `clisp' as an executable, using `hardcode', not as
	  a shell script.
	* makemake.in (BINARY_DISTRIB): Also define on HP-UX 11.
	(GOOD_SH): Remove definition.
	(distrib): Distribute `clisp' and `hardcode'.
	* spvw.d (main, usage): Option -K is now available on all Unix
	  platforms.
	* configure.in: Remove call to CL_SHELLARGS.
	* unixconf.h.in (UNIX_USE_KSH, UNIX_BROKEN_SH): Remove definitions.

1999-05-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (install-bin): Copy base/ and full/ using cp, not tar,
	  because they contain symbolic links.

1999-05-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make modules.o part of every linking set, including `base'.
	* makemake.in (lisp.a): Don't include modules.o.
	(modular): Depend on modules.o.
	(base): Link over modules.o.
	(distmakefile): Add modules.o to the BASE_LIBS and BASE_FILES
	  substitution.
	(distrib): Link over modules.o into $(TOPDIR)/base.
	* clisp-link.in (add-module-set): Check that the linking set contains
	  a file `modules.o'.
	(add-module-sets): Likewise. When no new modules, copy modules.o
	  in any case.
	(run): Check that the linking set contains a file `modules.o'.

1999-05-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (distmakefile): Don't set $wlibs, not needed any more.

1999-05-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (initmem): Don't call SYS::SET-ANSI (no need, doesn't work).

1999-05-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intlog.d (integerlength32) [RS6000]: Use new or old mnemonics
	  depending on OS.

1999-05-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Libtoolify sigsegv.
	* autoconf/libtool.m4: New file, from libtool-1.2.

1999-05-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	For Linux 2.0.x with glibc2.0.
	* aclocal.m4 (CL_SIGALTSTACK): Define HAVE_SIGALTSTACK only if the
	  sigaction flags macro SA_ONSTACK is also defined.

1999-05-13  Gilbert Baumann  <unk6@rz.uni-karlsruhe.de>

	* sequence.d (READ-CHAR-SEQUENCE): Changed calls to
	  `iarray_displace_check' to `array_displace_check'. Adjusted return
	  value: The first position not written is returned.
	(WRITE-CHAR-SEQUENCE): Likewise, uses `array_displace_check' now.
	(WRITE-BYTE-SEQUENCE): In case of (VECTOR (UNSIGNED-BYTE 8)) use
	  another indirection via '->data' before calling 'read_byte_array'.
	(READ-BYTE-SEQUENCE): Likewise. Additionally the first position not
	  written is returned.

1999-05-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (init_symbol_values): Don't call a function here, too early.
	(initmem): Call SYS::SET-ANSI here.

1999-05-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	 * lispbibl.d (stream_fd): Move declaration.
	 * stream.d (stream_fd): Move function.

1999-05-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Followup to Sam's 1999-04-07 patch.
	* eval.d (check_for_illegal_keywords): Remove misplaced symbolp test.
	* defmacro.lsp (analyze-key): Use symbolp instead of keywordp.
	* compiler.lsp (test-argument-syntax): Likewise.
	(kvalue-form-index): Likewise.
	* conditio.lsp (expand-restart-case): Likewise.
	* error.d (SYSTEM::CERROR-OF-TYPE, SYSTEM::ERROR-OF-TYPE): Likewise.

1999-05-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Followup to Sam's 1999-04-07 patch.
	* eval.d (eval1): Treat arrays as self-evaluating in all cases.
	* compiler.lsp (l-constantp, c-constantp, c-constant-value): Treat
	  arrays as constants.

1999-05-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* trace.lsp (trace1): No need to use replace-in-fenv.
	(replace-in-fenv): Remove function.

1999-05-12  Sam Steingold  <sds@goems.com>

	* format.lsp (format-integer): (format nil "~@d" 0) => "+0"

1999-05-12  Sam Steingold  <sds@goems.com>

	* loop.lsp (expand-loop): put `then-form' into `stepafter' even
	when it's the same constant as `first-form'.

1999-05-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_SIGNAL_UNBLOCK, CL_SIGNAL_BLOCK_OTHERS)
	(CL_SIGACTION_UNBLOCK): Perform the test if either POSIX or BSD
	  signal mask primitives are available. Otherwise,
	  SIGACTION_NEED_UNBLOCK would not be defined on Solaris.

1999-05-07  Sam Steingold  <sds@goems.com>

	* describe.lsp (*apropos-do-more*): new variable.
	(apropos): use it.

1999-05-07  Sam Steingold  <sds@goems.com>

	* spvw.d (usage): mention -K regardless of "UNIX_BINARY_DISTRIB".

1999-05-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Support for Apple's MacOS X Server.
	* aclocal.m4 (CL_RLIMIT): Include <sys/time.h> before
	  <sys/resource.h>.
	* lispbibl.d (unix): Define if __MACH__ is defined.
	(RS6000): Define if __ppc is defined.
	(UNIX_RHAPSODY): New macro.
	(__const): Define as const, not empty.
	* unix.d: Include <sys/time.h> before <sys/resource.h>. Treat
	  UNIX_RHAPSODY like UNIX_NEXTSTEP.
	* intlog.d (integerlength32): Don't use the cntlz instruction on
	  UNIX_RHAPSODY.

1999-05-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clos.lsp (same-specializers-p): New function.
	(specializers-agree-p): Use it.
	(dispatching-arg-p, single-dispatching-arg, dispatching-arg-type):
	  New functions.
	(no-applicable-method, no-primary-method): Signal a type-error if
	  there is only one dispatching argument.

1999-05-03  Sam Steingold  <sds@goems.com>

	* pathname.d (file_stat): use `built_in_stream_open_p' instead of
	`open_stream_p'.

1999-05-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_SIGALTSTACK): New macro.
	* lispbibl.d (NOCOST_SP_CHECK): Define whenever sigsegv.h defines
	  HAVE_STACK_OVERFLOW_RECOVERY, not only on WIN32_NATIVE.
	(near_SP_overflow) [UNIX]: New declaration.
	* spvw.d (near_SP_overflow): New function.
	* spvw_fault.d (handle_fault): Add `verbose' argument. If it is 1,
	  don't print error messages.
	* spvw_sigsegv.d (sigsegv_handler): Add `serious' argument.
	(stackoverflow_handler): Add `scp' argument. Bring back STACK to
	  a sane value.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make SYS::%GENERIC-FUNCTION-LAMBDA self-contained.
	* misc.d (SYS::VERSION), constobj.d: Bump version number.
	* record.d (SYS::%COPY-GENERIC-FUNCTION): New function.
	* eval.d (FUNTAB): Add it.
	* compiler.lsp (funtab): Likewise.
	(subr-info): Likewise.
	(c-FNODE-FUNCTION): Generate different code for generic functions.
	(create-fun-obj): The venv of generic functions is now inside
	  consts[0], from the beginning.
	* clos.lsp (install-dispatch): Simplify.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp: Add SYS::PRINT-CONDITION to
	  clos::*dynamically-modifiable-generic-function-names*.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (get_synonym_stream): Argument must be a variable.
	(rd_by_array_synonym, wr_by_array_synonym, rd_ch_array_synonym)
	(wr_ch_array_synonym, close_synonym, read_line_synonym): Update.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (stream_get_read_eval, stream_set_read_eval): New
	  declarations.
	* stream.d (read_byte, read_byte_array, write_byte, write_byte_array)
	(read_char, unread_char, peek_char, read_char_array, write_char)
	(write_char_array, var_stream): Treat instances of
	  FUNDAMENTAL-STREAM correctly.
	(listen_generic): Change error message.
	(terminal_raw, STREAM-EXTERNAL-FORMAT)
	(SYSTEM::SET-STREAM-EXTERNAL-FORMAT, interactive_stream_p)
	(read_line, stream_listen, clear_input, finish_output, force_output)
	(clear_output, get_line_position, stream_line_number): Treat
	  instances of FUNDAMENTAL-STREAM correctly.
	(stream_get_read_eval, stream_set_read_eval): New functions.
	(SYS::ALLOW-READ-EVAL): Use them.
	* io.d (read_eval_reader, load_eval_reader): Use stream_get_read_eval.
	(READ-CHAR-NO-HANG): Treat instances of FUNDAMENTAL-STREAM
	  correctly.
	(pr_enter_1, pr_orecord, pr_subr): Use stream_get_read_eval.
	* compiler.lsp (c-DIRECT-FUNCTION-CALL): Remove SYSTEM::LINE-POSITION
	  from list of side-effect-free functions.
	* gstream.lsp (fundamental-stream): Add a slot.
	(fundamental-character-stream, fundamental-binary-stream)
	(fundamental-character-input-stream)
	(fundamental-character-output-stream)
	(fundamental-binary-input-stream, fundamental-binary-output-stream):
	  New classes.
	(stream-element-type): Add method on fundamental-character-stream.
	(stream-read-char, stream-unread-char, stream-read-char-no-hang)
	(stream-peek-char, stream-listen, stream-read-char-status)
	(stream-read-char-sequence, stream-read-line, stream-clear-input)
	(stream-write-char, stream-line-column, stream-start-line-p)
	(stream-write-char-sequence, stream-write-string, stream-terpri)
	(stream-fresh-line, stream-finish-output, stream-force-output)
	(stream-clear-output, stream-advance-to-column, stream-read-byte)
	(stream-read-byte-sequence, stream-write-byte)
	(stream-write-byte-sequence): New generic functions.
	* describe.lsp (describe-object): Call open-stream-p, since
	  input-stream-p and output-stream-p don't tell whether a stream is
	  open.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Allows streams to have an unknown line position.
	* lispbibl.d (get_line_position): Can trigger GC. Can return NIL.
	* stream.d (get_line_position): Likewise.
	(MAKE-STRING-OUTPUT-STREAM): Allow LINE-POSITION argument to be NIL.
	* io.d (pr_enter_1): Update.
	* format.lsp (format-tabulate): If the stream's line position is
	  unknown, output 2 spaces.
	(do-format-justification): If the stream's line position is unknown,
	  assume it is 0.
	* compiler.lsp (disassemble-closure): If the stream's line position is
	  unknown, output 2 spaces.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (stream_line_number): Can trigger GC.
	* stream.d (stream_line_number): Likewise.
	* io.d (read_delimited_list): Update.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clos.lsp (install-dispatch): Don't assume the preliminary function
	  has a VENV. Generic functions without any method don't have one.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* init.lsp (cerror): Don't go into an interactive reploop if
	  *break-driver* is not yet set. This permits typing (load "init.lsp")
	  in an interactive lisp.run.

1999-05-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* config.guess, config.sub: Upgrade to newest version from GNU CVS.

1999-04-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* gstream.lsp (fundamental-stream, fundamental-input-stream)
	(fundamental-output-stream): New classes.
	(close, open-stream-p, stream-element-type)
	((setf stream-element-type)): Add methods on fundamental-stream.
	* lispbibl.d (instanceof): New macro.
	(streamp): Use it.
	* stream.d (input_stream_p, output_stream_p): New macros.
	(test_input_stream, test_output_stream): Use them.
	(INPUT-STREAM-P, OUTPUT-STREAM-P): Likewise.
	(SYS::%DEFGRAY): New function.

1999-04-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (builtin_stream_close): Renamed from stream_close.
	* stream.d (close_synonym): Call CLOSE instead of stream_close.
	(low_flush_buffered_handle, make_file_stream): Update.
	(SYSTEM::BUILT-IN-STREAM-OPEN-P): Renamed from OPEN-STREAM-P.
	  Stricter argument check.
	(SYSTEM::BUILT-IN-STREAM-ELEMENT-TYPE): Renamed from
	  STREAM-ELEMENT-TYPE. Stricter argument check.
	(SYSTEM::BUILT-IN-STREAM-SET-ELEMENT-TYPE): Renamed from
	  SYSTEM::SET-STREAM-ELEMENT-TYPE. Stricter argument check.
	(builtin_stream_close): Renamed from stream_close.
	(close_some_files): Update.
	(SYSTEM::BUILT-IN-STREAM-CLOSE): Renamed from CLOSE. Stricter
	  argument check.
	* debug.d (LOAD): Update.
	* misc.d (MACHINE-TYPE, MACHINE-VERSION): Update.
	* pathname.d (DELETE-FILE): Update.
	* spvw_memfile.d (WRITE, savemem): Update.
	* eval.d (FUNTAB): Update.
	* compiler.lsp (funtab, subr-info, c-DIRECT-FUNCTION-CALL): Likewise.
	* init.lsp (load): Call sys::built-in-stream-close instead of close.
	* gstream.lsp: Exports symbols from the Gray proposal.
	(close, open-stream-p, stream-element-type)
	((setf stream-element-type)): New generic functions.
	* places.lsp (stream-element-type): Remove defsetf.

	Distinguish built-in and other streams.
	* lispbibl.d (builtin_stream_p): Renamed from streamp.
	(streamp): New macro.
	(socket_stream-p): Use builtin_stream_p instead of streamp.
	* pathname.d (as_file_stream, PARSE-NAMESTRING, TRUENAME)
	(PROBE-FILE, DELETE-FILE, RENAME-FILE, OPEN, FILE-WRITE-DATE)
	(FILE-AUTHOR, FILE-STAT): Use builtin_stream_p instead of streamp.
	* stream.d (SYS::SYNONYM-STREAM-P, SYS::BROADCAST-STREAM-P)
	(SYS::CONCATENATED-STREAM-P, SYS::TWO-WAY-STREAM-P)
	(SYS::ECHO-STREAM-P, SYSTEM::STRING-INPUT-STREAM-INDEX)
	(GET-OUTPUT-STREAM-STRING, SYS::STRING-STREAM-P)
	(SYSTEM::BUFFERED-INPUT-STREAM-INDEX, SYS::FILE-STREAM-P)
	(check_window_stream, low_close_pipe, SOCKET-SERVER)
	(test_socket_stream, check_open_file_stream): Use builtin_stream_p
	  instead of streamp.
	(SYNONYM-STREAM-SYMBOL, BROADCAST-STREAM-STREAMS)
	(CONCATENATED-STREAM-STREAMS, TWO-WAY-STREAM-INPUT-STREAM)
	(TWO-WAY-STREAM-OUTPUT-STREAM, ECHO-STREAM-INPUT-STREAM)
	(ECHO-STREAM-OUTPUT-STREAM, GENERIC-STREAM-CONTROLLER)
	(SYS::LISTEN-BYTE, test_n_bytes_args): Use builtin_stream_p in the
	  first place, and streamp only for the error message.
	(GENERIC-STREAM-P, SYS::TERMINAL-RAW): Use builtin_stream_p.
	* predtype.d (SYS::BUILT-IN-STREAM-P): New function.

1999-04-29  Wolfgang Jenkner  <wolfgang@mat.univie.ac.at>

	* control.d (make_variable_frame): Treat special-declared variables
	  like special-proclaimed ones.

1999-04-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (TCPCONN): Always include <sys/types.h> before
	  <sys/socket.h>.

1999-04-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Fix a jmp_buf alignment problem on Irix 6.5.
	* foreign.d (alignof): Remove macro.
	* lispbibl.d (alignof): Move to here.
	(sp_jmp_buf_incr, sp_jmp_buf_to_jmp_buf, setjmpspl, longjmpspl): New
	  macros.
	(jmpbufsize): Add sp_jmp_buf_incr.
	(sp_jmp_buf): New type.
	(finish_entry_frame): Use setjmpspl.
	(enter_frame_at_STACK): Use longjmpsl.
	(DRIVER_frame_data): Use sp_jmp_buf instead of jmp_buf.
	* control.d (BLOCK, TAGBODY, CATCH, UNWIND-PROTECT): Use sp_jmp_buf
	  instead of jmp_buf.
	* eval.d (invoke_handlers, funcall_iclosure, eval, eval_no_hooks)
	(JMPBUF_on_SP): Use sp_jmp_buf instead of jmp_buf.

1999-04-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clos.lsp (*allow-mixing-metaclasses*): New variable.
	(initialize-instance-standard-class, make-instance-built-in-class)
	(initialize-instance-structure-class): Don't check the metaclass
	  of the direct superclasses if *allow-mixing-metaclasses* is true.

1999-04-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* reploop.lsp: Set *use-clcs* to t here.
	* conditio.lsp: Not here.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (listen_generic): Make an error message
	  internationalizable.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp (break): Use ANSI CL `:format-control' initarg.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make read_line recurse through some kinds of streams.
	* lispbibl.d (read_line): New declaration.
	* stream.d (read_line_synonym, read_line_twoway, read_line): New
	  functions.
	* io.d (READ-LINE): Call read_line. Put back the buffer after
	  copying it, not before.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (wr_ch_terminal2, wr_ch_array_terminal2) [MSDOS]: Define
	  as the _unbuffered_dos variant.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove obsolete stream primitive `wr_ss'.
	* lispbibl.d (Stream): Remove strm_wr_ss field.
	* io.d (write_sstring_ab): New function, remove macro.
	* stream.d (wr_ss_Pseudofun): Remove type definition.
	(wr_ss): Remove macro.
	(wr_ss_dummy, wr_ss_dummy_nogc): Remove functions.
	(close_dummys): Don't set strm_wr_ss field.
	(wr_ss_synonym): Remove function.
	(make_synonym_stream): Don't set strm_wr_ss field.
	(wr_ch_array_broad): Optimize.
	(wr_ss_broad): Remove function.
	(make_broadcast_stream): Don't set strm_wr_ss field.
	(make_concatenated_stream): Likewise.
	(wr_ss_twoway): Remove function.
	(make_twoway_stream, make_echo_stream): Don't set strm_wr_ss field.
	(MAKE-STRING-INPUT-STREAM): Likewise.
	(wr_ss_str_out): Remove function.
	(make_string_output_stream): Don't set strm_wr_ss field.
	(SYSTEM::MAKE-STRING-PUSH-STREAM): Likewise.
	(wr_ss_pphelp): Remove function.
	(make_pphelp_stream): Don't set strm_wr_ss field.
	(MAKE-BUFFERED-INPUT-STREAM, MAKE-BUFFERED-OUTPUT-STREAM): Likewise.
	(wr_ch_array_generic): Renamed from wr_ss_generic.
	(MAKE-GENERIC-STREAM): Don't set strm_wr_ss field.
	(wr_ss_unbuffered_unix, wr_ss_unbuffered_mac, wr_ss_unbuffered_dos):
	  Remove functions.
	(fill_pseudofuns_unbuffered): Don't set strm_wr_ss field.
	(wr_ss_buffered_unix, wr_ss_buffered_mac, wr_ss_buffered_dos):
	  Remove functions.
	(fill_pseudofuns_buffered): Don't set strm_wr_ss field.
	(make_keyboard_stream, make_terminal_stream_): Likewise.
	(wr_ch_array_terminal1): Renamed from wr_ss_terminal1.
	(wr_ch_array_terminal2): Renamed from wr_ss_terminal2.
	(wr_ch_array_terminal3): Renamed from wr_ss_terminal3
	(make_terminal_stream_): Don't set strm_wr_ss field.
	(MAKE-WINDOW, make_printer_stream, make_socket_stream): Likewise.
	* pseudofun.d: Update.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make write_char_array recurse through any kind of stream.
	* lispbibl.d (write_char_array): Change calling convention.
	* stream.d (wr_ch_array_Pseudofun): Change type definition.
	(wr_ch_array_error): Change calling convention.
	(wr_ch_array_dummy): Likewise. Loop, calling write_char.
	(write_char_array): Change calling convention.
	(wr_ch_array_synonym): Likewise.
	(wr_ch_array_broad0, wr_ch_array_broad1): Remove functions.
	(wr_ch_array_broad): New function.
	(make_broadcast_stream): Use it.
	(wr_ch_array_twoway): Change calling convention.
	(rd_ch_array_echo): Update.
	(wr_ch_array_str_out): New function.
	(make_string_output_stream): Use it.
	(wr_ch_array_pphelp): New function.
	(make_pphelp_stream): Use it.
	(wr_ch_array_unbuffered_unix): Change calling convention.
	(wr_ss_unbuffered_unix): Update.
	(wr_ch_array_unbuffered_mac): Change calling convention.
	(wr_ss_unbuffered_mac): Update.
	(wr_ch_array_unbuffered_dos): Change calling convention.
	(wr_ss_unbuffered_dos): Update.
	(wr_ch_array_buffered_unix): Change calling convention.
	(wr_ss_buffered_unix): Update.
	(wr_ch_array_buffered_mac): Change calling convention.
	(wr_ss_buffered_mac): Update.
	(wr_ch_array_buffered_dos): Change calling convention.
	(wr_ss_buffered_dos): Update.
	(wr_ss_terminal3): Update.
	* sequence.d (WRITE-CHAR-SEQUENCE): Update.
	* lisparit.d (print_integer): Update. Use DYNAMIC_STRING macro.
	* pseudofun.d: Update.

	Make read_char_array recurse through any kind of stream.
	* lispbibl.d (read_char_array): Change calling convention.
	* stream.d (rd_ch_array_Pseudofun): Change type definition.
	(rd_ch_array_error): Change calling convention.
	(rd_ch_array_dummy): Likewise. Loop, calling read_char.
	(read_char_array): Change calling convention.
	(rd_ch_array_synonym): Likewise.
	(rd_ch_array_concat): Likewise. Treat general case.
	(rd_ch_array_twoway): Change calling convention.
	(rd_ch_array_echo): New function.
	(make_echo_stream): Use it.
	(rd_ch_array_str_in): Change calling convention.
	(rd_ch_array_unbuffered, rd_ch_array_buffered): Likewise.
	* sequence.d (READ-CHAR-SEQUENCE): Update.
	* pseudofun.d: Update.

	Make write_byte_array recurse through any kind of stream.
	* lispbibl.d (write_byte_array): Change calling convention.
	* stream.d (wr_by_array_Pseudofun): Change type definition.
	(wr_by_array_error): Change calling convention.
	(wr_by_array_dummy): Likewise. Loop, calling write_byte.
	(write_byte_array): Change calling convention.
	(wr_by_array_synonym): Likewise.
	(wr_by_array_broad0, wr_by_array_broad1): Remove functions.
	(wr_by_array_broad): New function.
	(make_broadcast_stream): Use it.
	(wr_by_array_twoway): Change calling convention.
	(rd_by_array_echo): Update.
	(wr_by_array_iau8_unbuffered, wr_by_array_iau8_buffered): Change
	  calling convention.
	(SYS::WRITE-N-BYTES): Update.
	(WRITE-INTEGER): Use DYNAMIC_BIT_VECTOR. Update.
	* sequence.d (WRITE-BYTE-SEQUENCE): Update.
	* pseudofun.d: Update.

	Make read_byte_array recurse through any kind of stream.
	* lispbibl.d (read_byte_array): Change calling convention.
	* stream.d (rd_by_array_Pseudofun): Change type definition.
	(rd_by_array_error): Change calling convention.
	(rd_by_array_dummy): Likewise. Loop, calling read_byte.
	(read_byte_array): Change calling convention.
	(rd_by_array_synonym): Likewise.
	(rd_by_array_concat): Likewise. Treat general case.
	(rd_by_array_twoway): Change calling convention.
	(rd_by_array_echo): New function.
	(make_echo_stream): Use it.
	(rd_by_array_iau8_unbuffered, rd_by_array_iau8_buffered): Change
	  calling convention.
	(SYS::READ-N-BYTES): Update.
	(READ-INTEGER): Use DYNAMIC_BIT_VECTOR. Update.
	* sequence.d (READ-BYTE-SEQUENCE): Update.
	* pseudofun.d: Update.

1999-04-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_ADDRESS_RANGE): Also determine the stack address
	  range.
	* unixconf.h.in (STACK_ADDRESS_RANGE): New macro.
	* lispbibl.d (STACK_ADDRESS_RANGE): Provide a default value.
	(bias_type_pointer_object): New macro, moved here from
	  spvw_allocate.d.
	(DYNAMIC_BIT_VECTOR, FREE_DYNAMIC_BIT_VECTOR, DYNAMIC_STRING)
	(FREE_DYNAMIC_STRING): New macros.
	* spvw_allocate.d (bias_type_pointer_object): Remove macro.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (c-form-table): Treat LDB, LDB-TEST, MASK-FIELD,
	  DPB, DEPOSIT-FIELD specially.
	(c-constant-byte-p, c-LDB, c-LDB-TEST, c-MASK-FIELD, c-DPB)
	(c-DEPOSIT-FIELD): New functions.

	* compiler.lsp (c-FORMAT): Only insert a FORMATTER call if
	  FORMATTER is not defined locally.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-object): `type-of' does not need `sys::'.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intlog.d (I_I_logand_I): Optimize the case when either operand is a
	  positive fixnum, O(1) instead of O(N).
	(I_I_lognand_I): Likewise.
	(I_I_logandc2_I): Likewise for the first operand.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (make_HANDLER_frame): Fix compilation problem.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (READ-CHAR-STATUS): Renamed from SYS::REAL-LISTEN.
	* stream.d (listen_generic): Call GENERIC-STREAM-READ-CHAR-STATUS
	  instead of GENERIC-STREAM-LISTEN. Remove backward compatibility
	  hack.
	* gstream.lsp (generic-stream-read-char-status): Renamed from
	  generic-stream-listen.
	* screen.lsp: Likewise.

1999-04-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (ssstring_append_extend): New declaration.
	* array.d (ssstring_append_extend): New function.
	* stream.d (wr_ss_str_out, wr_ss_pphelp): Use it.

1999-04-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (iarray_displace): Renamed from notsimple_displace.
	(storagevector_aref): Renamed from datenvektor_aref.
	(storagevector_store): Renamed from datenvektor_store.
	(iarray_dims_sizes): Renamed from array_dims_sizes.
	(make_storagevector): Renamed from make_datenvektor.
	* io.d (pr_vector, pr_array_elt_t, pr_array): Update.

1999-04-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* macros2.lsp (space): Also print timing data, like TIME does.

1999-04-27  Sam Steingold  <sds@goems.com>

	* describe.lsp (describe): wrap `describe-object' in `unwind-protect'.
	(describe-object): fixed printing indentation.

1999-04-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Port to m68k-linux with ELF.

1999-04-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defs2.lsp (defpackage): Allow duplicates in each of the
	  export/import/... lists, but still require these lists to be
	  disjoint.

1999-04-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* places.lsp (push, pushnew): Evaluate the item form before the
	  place's subforms.

1999-04-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_GLOBAL_CONSTRUCTORS): Add check whether
	  ctor/dtor needs to be exported.

1999-04-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (rd_ch_array_buffered): Increment the stream's index and
	  position appropriately.

1999-04-13  Sam Steingold  <sds@goems.com>

	* modules/postgresql642/link.sh (have_libcrypt): do not quote ${CC}.

1999-04-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (data, UnicodeData.txt): New rules.
	(lisp${LEXE}): Depend on it.
	(installdirs): Create $(lisplibdir)/data.
	(install-bin): Install [data/]UnicodeData.txt.
	(uninstall-bin): Remove it.
	* _distmakefile (install-bin): Install data/UnicodeData.txt.
	* describe.lsp (describe-object) (character): Call unicode-attributes.
	(unicode-data-file, unicode-attributes-line, unicode-attributes):
	  New functions.

1999-04-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Add command-line option specifying $(lisplibdir).
	* _clisp.c (main): New option "-B".
	* spvw.d (main, usage): Likewise.
	* pathname.d (argv_lisplibdir): New variable.
	(SYS::LIB-DIRECTORY): New function.
	* makemake.in: Pass "-B" option to all invocations of lisp.run.

1999-04-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (installdirs): Create $(lisplibdir)/linkkit.
	(install-bin): Fix syntax error introduced on 1999-04-04.

1999-04-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (init_streamvars): Set _rl_comment_begin.

1999-04-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (c-FORMAT): Use c-constantp, not constantp, and
	  c-constant-value.

1999-04-12  Sam Steingold  <sds@goems.com>

	* macros3.lsp (with-collect): new macro.

1999-04-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* type.lsp (type-expand): Fix the second return value.

1999-04-08  Sam Steingold  <sds@goems.com>

	* compiler.lsp (c-FORMAT): check for a constant, not just a string.

1999-04-07  Sam Steingold  <sds@goems.com>

	* control.d (constantp): arrays are constants too.

1999-04-07  Sam Steingold  <sds@goems.com>

	Implemented ANSI CL issue KEYWORD-ARGUMENT-NAME-PACKAGE:ANY.
	* eval.d (get_closure, check_for_illegal_keywords): accept symbols
	as keywords.
	* compiler.lsp (analyze-lambdalist): accept symbols as keywords.

1999-04-07  Sam Steingold  <sds@goems.com>

	* compiler.lsp (c-FORMAT): signal an error when the stream
	argument is missing.
	* describe.lsp (describe-object): call `documentation'.

1999-04-06  Sam Steingold  <sds@goems.com>

	--- *ANSI* is a symbol macro now.
	* constsym.d: added `:ansi-cl', `ansi' and `set_ansi'.
	* subr.d: added `ansi' and `set_ansi'.
	* constobj.d: added `ansi'.
	* places.lsp: define *ANSI*.
	* init.lsp: export *ANSI*.
	* spvw.d: call `set_ansi' instead of setting *ANSI*.
	* misc.d (ansi, set_ansi): new LISPFUNNs.
	--- Fix `export-syscalls' damaged by recent patches.
	* socket.d (resolve_host_ipaddr): replaced `fehler_string_int'
	with `fehler_string_integer'.
	* pathname.d (user_data): ditto.  Also,
	`fehler_pathname_descriptor' --> `fehler_pathname_designator'.
	(file_stat): use `stream_fd' instead of `strm_ochannel'.
	* stream.d (file_stat): removed.
	(stream_fd): added.
	* lispbibl.d: declare `stream_fd'.
	--- fix `describe'
	* describe.lsp (describe): set `*describe-done*' and
	`*describe-nesting*' instead of binding.  Print empty arglist as
	(), not NIL.

1999-04-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Stop storing german and french translations in the source files.
	* german.lsp, french.lsp: New files.
	* makemake.in (LPARTS): Add them.
	* init.lsp: Load them.
	* *.d, *.lsp: Remove german and french translations.
	* compiler.lsp: Define macro ENGLISH instead of DEUTSCH.
	* lispbibl.d (DEUTSCH, FRANCAIS): Remove macros.
	(ENGLISH): Simplify.
	(language_deutsch, language_francais): Remove macros.
	(GETTEXT): New macro.
	* genclisph.d (main): Update.
	* constobj.d (LISPOBJ_L, LISPOBJ_LS): Simplify.
	* erramiga.d (lang3, lang1): Simplify.
	* errdjgpp.d (lang3, lang1): Likewise.
	* spvw_language.d (language_deutsch, language_francais): Define only
	  if GNU_GETTEXT.
	(init_languages_from): Treat de and fr only if GNU_GETTEXT.
	(init_language) [!GNU_GETTEXT]: Don't treat de and fr.

1999-04-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (right_margin): Update translations.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* foreign1.lsp (DEF-C-CALL-OUT, DEF-C-CALL-IN): Use language :STDC,
	  not old :C any more.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Changes to the distribution structure on Unix:
	- The default linking set is moved into subdirectory `base'.
	- Both `base' and `full' are installed.
	- All the documentation is installed.
	* _clisp.c (main): New option "-K". Drop option "-F".
	* _clisp.1: Document option "-K".
	* _clisp.html: Likewise.
	* spvw.d (usage): Mention "-K".
	(main): Accept and ignore "-K".
	* _distmakefile (fromdir): Remove variable.
	(linkingsets): New variable.
	(docdir, lispdocdir): New variables.
	(all): Depend on all lisp.runs.
	(install): Depend on install-doc.
	(install-bin): Copy all linking sets entirely. Copy clisp-link and
	  linkkit as well.
	(install-doc): New target.
	* makemake.in: $(lispdocdir) replaces $(docdir). Define $(docdir) and
	  $(lispdocdir) in all cases. Make `base' a directory containing
	  symlinks, not a symlink. `full' depends on `base'. `install' depends
	  on `install-doc'. New target `install-doc'. `installdirs' creates
	  the `base' directory and the doc directories. `install-bin' copies
	  the linking sets `base' and `full', and clisp-link and linkkit as
	  well. `install-man' installs all readmes and manual files.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* modules/clx/new-clx/link.sh: Add -L/usr/X11R6/lib -lX11 to
	  NEW_LIBS. Necessary since 1999-03-08 change.
	* modules/clx/new-clx/clx.f (pathname_encoding, misc_encoding): New
	  macros.
	(with_stringable_0): Add an encoding argument.
	(get_font, get_xatom_general, enum_error, make_xatom)
	(XLIB:OPEN-DISPLAY): Use misc_encoding.
	(XLIB:DISPLAY-AUTHORIZATION-DATA, XLIB:DISPLAY-AUTHORIZATION-NAME):
	  Allocate empty string via allocate_string.
	(XLIB:DISPLAY-VENDOR, XLIB:DISPLAY-HOST): Use misc_encoding.
	(general_draw_text): If UNICODE, use the -16 variant functions.
	(XLIB:OPEN-FONT, XLIB:FONT-PATH, XLIB:FONT-PATH-SETTER)
	(XLIB:LIST-FONT-NAMES, XLIB:LIST-FONTS, XLIB:FONT-PROPERTIES): Use
	  misc_encoding.
	(XLIB:TEXT-EXTENTS, XLIB:TEXT-WIDTH): If UNICODE, use the -16
	  variant functions.
	(XLIB:ALLOC-COLOR, XLIB:LOOKUP-COLOR, XLIB:ATOM-NAME)
	(XLIB:GET-PROPERTY, XLIB:LIST-PROPERTIES, XLIB:LIST-EXTENSIONS)
	(XLIB:QUERY-EXTENSION): Use misc_encoding.
	(XPM:READ-FILE-TO-PIXMAP): Use pathname_encoding.
	* modules/postgresql642/postgresql.lsp: Comments.
	Don't need to include <stdio.h>.
	(PGnotify): Use foreign type ffi:character, not ffi:char.
	(pqbool): Use foreign type ffi:char, not ffi:character.
	* modules/postgresql642sql.lsp (sql-error): Condition type is
	SQL-ERROR, not SQL.
	* modules/postgresql642/link.sh: Link with -lcrypt only
	if this library exists.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* _README: Refer to _README.en unconditionally.
	* makemake.in: Don't refer to `README.en'. `README' is enough.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Since make_machine and make_machine_code are different on some
	platforms...
	* pseudofun.d (LPSEUDOCODE): New macro, replaces PSEUDOFUN.
	(XPSEUDOCODE, XPSEUDODATA): New macros, replace XPSEUDO.
	(LCODE_PSEUDO_*, XCODE_PSEUDO_*, XDATA_PSEUDO_*): New macros.
	* lispbibl.d (pseudofun_tab): Remove.
	(pseudocode_tab, pseudodata_tab): New variables.
	* spvw.d (pseudocode_anz, pseudodata_anz): New macros.
	(pseudofun_anz): Change definition.
	(pseudofun_tab): Define as local variable.
	(main): Initialize pseudofun_tab from pseudocode_anz, pseudodata_anz.
	* spvw_memfile.d (loadmem_update): Compare objects, not Pseudofuns.
	* stream.d (pseudofun_tab): Remove.
	(pseudocode_tab, pseudodata_tab): New variables.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* control.d (test_env): Accept NIL, denoting the global environment.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (installdirs, install-bin, install-man): Make sure
	  the directories $(prefix) and $(exec_prefix) exist.
	* _distmakefile (install-bin, install-man): Likewise.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_file_stream): Fix the STACK offsets used to fill in
	  truename and pathname of unbuffered streams.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (SYS::MAKE-SOCKET-STREAM, init_streamvars): Pass a proper
	  encoding to make_unbuffered_stream, not the symbol :UNIX.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp: Export simple-condition-format-control.
	(coerce-to-condition): Use :format-control.
	(simple-condition): Use $format-control.
	* defs3.lsp: Export simple-condition-format-control, not
	  simple-condition-format-string.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_pipe_output_stream, make_pipe_input_stream)
	(make_pipe_stream): Revert 1999-03-26 patch.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* socket.d (atoi): Remove declaration.
	(SERVENT_TO_STACK): Add `tmp' local variable.
	(SOCKET-SERVICE-PORT): Don't accept symbols, only strings and
	  integers, as service-name. Don't call fehler_string_integer for
	  non-fixnums. Use with_string_0 instead of TheAsciz(string_to_asciz(.
	  Fix placement of begin_system_call()/end_system_call().
	* subr.d: Keep in sync.
	* constsym.d: Likewise.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (FILE-STAT): Move to pathname.d.
	* pathname.d (fehler_pathname_designator): Renamed from
	  fehler_pathname_descriptor.
	(as_file_stream): global -> local. Update.
	(fehler_file_stream_unnamed): global -> local.
	(PARSE-NAMESTRING): Update.
	(unix_user_pwd): Fix treatment of error in getpwuid call.
	(init_pathnames): Restore comments.
	(USER-DATA, FILE-DATA): Move here, before the EMX "#undef stat".
	* subr.d: Keep in sync.
	* constsym.d: Likewise.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* constobj.d (O(type_string_integer)): Renamed from O(type_gensym_arg).
	* symbol.d (GENSYM): Update.
	* lispbibl.d (fehler_string_integer): Renamed from fehler_string_int.
	* error.d (fehler_string_integer): Renamed from fehler_string_int.
	  Use O(type_string_integer). Fix error message. Update translations.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* describe.lsp (describe-slotted-object): Define code in package
	  SYSTEM, not package CLOS.
	(describe-object): Likewise. Reindent.
	(describe-object T): Treat FSUBR here.
	(describe-object FUNCTION): Not here.
	(describe-object CONS): De-obfuscate list-length determination.
	(describe-object SYMBOL): Bind *print-escape* and *print-readably*
	  only around the necessary code. Update translations. Terminate
	  sentence with a dot.
	(describe-object PACKAGE): Keep "." internationalizable. Update
	  translations. Don't sort L if all we need is its length.
	(describe): Update translations.
	(apropos-list): Reindent.

1999-04-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Change the type of FSUBRs (was COMPILED-FUNCTION, but ANSI CL
	specifies that COMPILED-FUNCTION is a subtype of FUNCTION).
	* predtype.d (COMPILED-FUNCTION-P): For FSUBRs, return NIL.
	(TYPE-OF): For FSUBRs, return SPECIAL-OPERATOR.
	(CLASS-OF): Undo 1999-03-18 patch.
	(enum_hs_special_operator): Renamed from enum_hs_special_oper.
	(heap_statistics_mapper): Update.
	* defs2.lsp (function-lambda-expression): No need to call functionp.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp (export): Mention `os-error' right after `file-error'.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* init.lsp (export): Mention `with-package-iterator' right after
	  `do-all-symbols', because that's where it is located in CLtL2.
	* defs3.lsp (export): Likewise.
	* defs1.lsp (with-package-iterator): Check all the symboltypes. Remove
	  duplicates among them.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* savemem.lsp (saveinitmem): Reindent. Declare *command-index* special,
	  because it is not defvar'ed at this point.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* loop.lsp (expand-loop) (collect/append/nconc): Generate forward-
	  consing code only for named accumulation variables. Revert to the
	  old backward-consing code for unnamed accumulation variables.
	(expand-loop) (accu-vars-nil, accu-vars-0): Kill use of `pushnew',
	  `push' and `delete-duplicates' is more efficient.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* constsym.d (*merge-pathnames-ansi*): New variable.
	* spvw.d (init_symbol_values): Initialize it to NIL.
	(main): Set it to T, if option -a given.
	* pathname.d (MERGE-PATHNAMES): If *merge-pathnames-ansi*,
	  concatenate two relative directories. Ignore *ansi*.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (impnotes.html): Only replace <HS> followed by a slash.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Accept option --with-export-syscalls, instead of
	  --export-syscalls.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Undo hack for missing rluserman.dvi.

1999-04-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clisp.spec: Remove the "--with-unicode=no" hint. It is a bad idea.

1999-03-30  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* rexx.d (rexx_getmsg): return (handle command :RESULT)
	  if ARexx OPTIONS RESULTS requested on incoming command.

1999-04-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Improve handling of /proc/self/fd/* files on Linux.
	* pathname.d (possible_symlink, my_readlink): New functions.
	(realpath): Call possible_symlink before readlink.
	(if_HAVE_LSTAT): New macro.
	(assure_dir_exists) [UNIX]: Use it. Convert namestring to asciz once
	  only. Call possible_symlink before S_ISLNK and readlink.

1999-03-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Makefile.devel: Add rules for three files in the
	  ffcall/callback/vacall_r/ directory.

1999-03-26  Sam Steingold  <sds@goems.com>

	* stream.d (make_pipe_stream): new function: merged
	make_pipe_input_stream and make_pipe_output_stream.
	(make_pipe_output_stream, make_pipe_input_stream): use it.

1999-03-22  Sam Steingold  <sds@goems.com>

	* pathname.d (merge-pathnames): be ANSI CL compliant when
	lisp:*ansi* is non-nil.
	(unix_user_pwd): extracted from init_pathnames().
	(init_pathnames): use unix_user_pwd().
	(user_data): moved here from stream.d; use unix_user_pwd().

1999-03-20  Sam Steingold  <sds@gnu.org>

	Added PostgreSQL interface.  New module: postgresql.
	* modules/postgresql/postgresql.lsp: bindings.
	* modules/postgresql/sql.lsp: example of use.
	* makemake.in: added postgresql.

1999-03-20  Sam Steingold  <sds@gnu.org>

	* describe.lsp (describe-object): handle foreign functions correctly.

1999-03-19  Sam Steingold  <sds@gnu.org>

	* savemem.lsp (saveinitmem): bind +/-/* to nil instead of setting
	them to nil.  Also, bind sys::*command-index* to 0.

1999-03-18  Sam Steingold  <sds@gnu.org>

	* compiler.lsp (*deprecated-functions-list*): new variable.
	(note-function-used): use it.
	* describe.lsp (describe-object): warn about deprecated functions.
	* predtype.d (class-of): fsubr is a function, not T.
	* constobj.d: print SPECIAL-OPERATOR instead of SPECIAL-FORM.
	* io.d (pr_fsubr): comment fix.
	* ../modules/clx/new-clx/clx.lsp: push keyword :clx-ansi-common-lisp
	into `*features*' instead of the symbol.

1999-03-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_ICONV): Add check for iconv prototype.
	* unixconf.h.in (ICONV_CONST): New macro.
	* unix.d (iconv): Use ICONV_CONST.

1999-03-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (CLISP_INTERNAL_CHARSET): For HP-UX, set it to "ucs2".

1999-03-17  Sam Steingold  <sds@gnu.org>

	* describe.lsp (describe-object): handle CLOS classes in a
	`standard-object' method.  Describe the value of the `weak-pointer'.
	* stream.d (file_stat): fixed time handling.

1999-03-16  Sam Steingold  <sds@gnu.org>

	* describe.lsp (describe-object): replaced `standard-object' with T.

1999-03-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defs1.lsp (package-iterator-function): New function, taken out of
	  with-package-iterator.
	(with-package-iterator): Adjust, add error message.

1999-03-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (nls_mbstowcs, nls_asciiext_mbstowcs, nls_wcstombs)
	(nls_asciiext_wcstombs, nls_range): Use TheMachine, not ThePseudofun.
	  Vital for hppa.
	(init_encodings): Use make_machine, not P. Vital for hppa.
	  Initialize O(internal_encoding) always to ISO-8859-1, independently
	  of the platform. If HPROMAN8_CHS is defined, use it for the other
	  encodings, instead of ASCII.

1999-03-16  Sam Steingold  <sds@gnu.org>

	implement `with-package-iterator'.
	* defs1.lsp (with-package-iterator): new ANSI CL macro.
	* defs3.lsp, init.lsp: export it.

1999-03-16  Sam Steingold  <sds@gnu.org>

	* socket.d (is_number): removed.
	(resolve_host_ipaddr): return all hosts on NIL arg.
	* stream.d (user_data): return the current user with no args.
	* _impnotes.html: document this.

1999-03-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (rd_ch_terminal2): Restructure this function. Call
	  rd_ch_unbuffered, in order to respect the stream's encoding.
	  When EOF has been reached, no need to set strm_rd_ch_last,
	  the caller already does this.
	(lisp_completion_matches): Do filename completion also after #P".
	(rd_ch_terminal3): Restructure this function. Respect the stream's
	  encoding. When EOF has been reached, no need to set strm_rd_ch_last,
	  the caller already does this.

1999-03-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Test for `__linux__', not `linux', so that even when
	  compiling with "-ansi -pedantic" the incompatible _setjmp/_longjmp
	  functions are avoided.

1999-03-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make it possible again to compile with "gcc -x c++".
	* aclocal.m4 (CL_CC_GCC): Define GCC_X_NONE.
	* intparam.d (main7): Use %lX instead of %X for a `long'.
	(main8): Adapt for C++.

	* configure: Don't configure in readline subdir if compiling
	  in C++ mode.

	* utils/modprep.d: Define `inline' to empty when compiling with
	  "gcc -ansi -pedantic".
	(String_equalsIgnoreCase): Don't use `isascii', it is not portable.

	* io.d (unicode_attribute, graphic_char_p): Remove the macros. The
	  global definition in charstrg.d is sufficient.
	(syntax_table_put): Cast one branch of the conditional expression
	  to void, to make this valid C++.

	* stream.d (host_data_fetcher): New type.
	(publish_host_data): Adjust declaration, for increased type safety.

	* charstrg.d (string_search): Change for being valid C++.

	* foreign.d (alignof): Provide alternate definition, valid C++.
	(convert_to_foreign): Cast converter_malloc result to char*.

	* avl.d (AVL(AVLID,least), AVL(AVLID,move)): Change K&R C declaration
	  into ANSI C declaration.

1999-03-14  Sam Steingold  <sds@gnu.org>

	* stream.d: removed `stream_fd';
	moved `file_stat' and `user_data' here.
	* pathname.d: renamed `fehler_thing' to `fehler_pathname_descriptor'.
	export it, `as_file_stream', `fehler_file_stream_unnamed'.
	* socket.d (resolve_host_ipaddr): handle IPv6 addresses.

1999-03-14  Sam Steingold  <sds@gnu.org>

	OS_error() generates an error of type `os-error'.
	* erramiga.d, errdjgpp.d, errunix.d, errwin32.d (OS_error): use
	`simple_os_error'.
	* lispbibl.d (conditiontype): added `os_error'.
	* constsym.d: added `simple_os_error' symbol.
	* error.d: handle `simple_os_error'.
	* conditio.lsp: added `os-error' and `simple-os-error'.

1999-03-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (strm_encoding): New macro.
	* stream.d (strm_encoding): Comment out.
	* encoding.d (SYS::[SET-]DEFAULT-FILE-ENCODING)
	(SYS::[SET-]PATHNAME-ENCODING, SYS::[SET-]TERMINAL-ENCODING)
	(SYS::[SET-]FOREIGN-ENCODING, SYS::[SET-]MISC-ENCODING): New
	  functions.
	* init.lsp: Export *default-file-encoding*, *pathname-encoding*,
	  *terminal-encoding*, *misc-encoding*.
	* places.lsp (*default-file-encoding*, *pathname-encoding*)
	(*terminal-encoding*, *misc-encoding*): New settable symbol-macros.
	* foreign1.lsp (ffi:*foreign-encoding*): New settable symbol-macro.
	* affi1.lsp (affi:*foreign-encoding*): New settable symbol-macro.

1999-03-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defs2.lsp (define-symbol-macro, check-not-special-variable-p): Move
	  to macros2.lsp.
	* macros2.lsp (define-symbol-macro, check-not-special-variable-p):
	  Moved here from defs2.lsp.

1999-03-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (test_socket_server): New argument check_open. When it is
	  TRUE, check that the handle is non-NIL.
	(SOCKET-SERVER-CLOSE): After closing, set the handle to NIL. When
	  the handle is NIL, do nothing.
	(SOCKET-SERVER-PORT, SOCKET-SERVER-HOST): Update.
	(SOCKET-ACCEPT, SOCKET-WAIT): Call test_socket_server with
	  check_open=TRUE.
	* io.d (pr_orecord): For closed socket-servers, print a "CLOSED "
	  prefix.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (init_encodings): Define some more aliases.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (fehler_uni32_invalid, uni32_mblen, uni32be_mbstowcs)
	(uni32le_mbstowcs, uni32_wcslen, uni32be_wcstombs, uni32le_wcstombs):
	  New functions.
	(init_encodings): Initialize the Unicode-32 encodings.
	* pseudofun.d: Update.
	* type.lsp (canonicalize-type): Add charset:unicode-32-big-endian and
	  charset:unicode-32-little-endian to the list of types equivalent to
	  CHARACTER.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (conditiontype): Add charset_type_error.
	* conditio.lsp (charset-type-error, simple-charset-type-error): New
	  condition types.
	(%defclcs call): Add simple-charset-type-error.
	* constsym.d (simple_*_error): Add simple_charset_type_error.
	* error.d (end_error): Treat simple_charset_type_error like
	  simple_type_error.
	* encoding.d (fehler_unencodable): Signal an error of type
	  charset_type_error.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Integrate types and encodings.
	* lispbibl.d (Encoding): Add enc_range field.
	(encoding_length): Increment by 1.
	(Encoding_range): New macro.
	(stringof): New declaration.
	* charstrg.d (stringof): New function.
	* encoding.d (all_range, nls_range): New functions.
	(iconv_range): Declare.
	(MAKE-ENCODING): Initialize the enc_range field.
	(fehler_encoding, SYS::CHARSET-TYPEP, SYS::CHARSET-RANGE): New
	  functions.
	(init_encodings): Initialize the enc_range field.
	* stream.d (iconv_mblen): Optimize and make consistent with
	  iconv_mbstowcs.
	(iconv_wcslen): Optimize and make consistent with iconv_wcstombs.
	(iconv_wcstombs): Don't loop until outsize==0. The caller may have
	  given a larger buffer than necessary.
	(iconv_range): New function.
	* pseudofun.d: Update.
	* type.lsp (typep): Accept an encoding as a type.
	(canonicalize-type, subtypep): Likewise.
	(charset-subtypep): New function.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d (SYS::ENCODINGP): New function.
	* type.lsp: Implement typep for type ENCODING.
	(subtypep): Treat ENCODING as an elementary type.
	* compiler.lsp (c-typep-alist1): Implement typep for type ENCODING.

1999-03-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_genera2.d (gc_mark_old_generation): Add braces, to avoid egcs
	  warning.
	* spvw_genera3.d (update_old_generation): Likewise.

1999-03-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (conditiontype): Add reader_error.
	* conditio.lsp (simple-reader-error): New condition type.
	(%defclcs call): Add simple-reader-error.
	* constsym.d (simple_*_error): Add simple_reader_error.
	* io.d (signal_reader_error): New function.
	(read_internal): Protect calls to read_rational and read_float with
	  a handler for ARITHMETIC-ERROR.

1999-03-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (make_HANDLER_frame, make_HANDLER_entry_frame)
	(unwind_HANDLER_frame): New macros.
	* eval.d (invoke_handlers): Distinguish handler frames with a
	  bytecoded handler and handler frames with a C function as handler.

1999-03-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* format.lsp (format-character): Don't print the name of printable
	  characters.

1999-03-12  Sam Steingold  <sds@gnu.org>

	* subr.d: arglists for `socket_service_port' and `resolve_host_ipaddr'.
	* stream.d (socket_service_port): moved from here to socket.d
	* pathname.d (user_data): use `fehler_string_int'.
	* socket.d (resolve_service): removed.
	(socket_service_port): moved here.  optional second arg - protocol.
	return all services as a list when called with no arguments.
	(resolve_host_ipaddr): when called with no args, localhost is returned.
	* error.d (fehler_string_int): new function.
	* lispbibl.d (fehler_string_int): declare.

1999-03-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d: Make UNICODE-16 an alias for UNICODE-16-BIG-ENDIAN.
	* constsym.d: Rename the CPxxx-MS symbols to CPxxx.

1999-03-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* encoding.d: Add the HP-ROMAN8 character set.

1999-03-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (FILE-STRING-LENGTH): Depend on the stream's encoding.
	  Don't look at the strm_wr_ch pointer.

1999-03-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (directory_search_scandir): Avoid calling stat() if
	  the given wildcard mask excludes a given directory entry.

1999-03-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Fix a bug: clear-input did not kill the EOF condition in terminal2
	and terminal3 streams.
	* stream.d (clear_input_keyboard): Use ls_avail_p.
	(clear_input_terminal2): Call clear_input_unbuffered, don't call
	  clear_tty_input directly. Use ls_avail_p.
	(clear_input_terminal3): Likewise.

1999-03-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Finish implementing the iconv-based encodings.
	* lispbibl.d (Encoding): Add a stream argument to the enc_mbstowcs and
	  enc_wcstombs fields.
	(Encoding_mbstowcs, Encoding_wcstombs): Update.
	(cstombs): Pass nullobj as stream.
	* error.d (write_errorstring): Likewise.
	* foreign.d (convert_from_foreign_array_fill, convert_from_foreign):
	  Likewise.
	* affi.d (SYSTEM::MEM-READ): Likewise.
	* encoding.d (MAKE-ENCODING, make_string, asciz_to_string)
	(string_to_asciz): Move to the end of the file.
	(fehler_unencodable): Declare as global.
	(uni16be_mbstowcs, uni16le_mbstowcs, uni16be_wcstombs)
	(uni16le_wcstombs, utf8_mbstowcs, utf8_wcstombs, java_mbstowcs)
	(java_wcstombs, nls_mbstowcs, nls_asciiext_mbstowcs, nls_wcstombs)
	(nls_asciiext_wcstombs): Add an unused stream argument.
	(iconv_mblen, iconv_mbstowcs, iconv_wcslen, iconv_wcstombs)
	(fehler_iconv_invalid_charset): Move to stream.d.
	* stream.d (strm_channel_extrafields_struct): Add iconvdesc,
	  oconvdesc fields.
	(ChannelStream_iconvdesc, ChannelStream_oconvdesc): New macros.
	(CLISP_INTERNAL_CHARSET): New macro.
	(fehler_iconv_invalid_charset, iconv_mblen, iconv_mbstowcs)
	(iconv_wcslen, iconv_wcstombs): New functions, moved to here from
	  encoding.d. If the stream is passed, use the iconvdesc,
	  oconvdesc fields.
	(ChannelStream_init, ChannelStream_fini): New functions.
	(rd_ch_unbuffered, listen_unbuffered, rd_ch_array_unbuffered): Pass
	  the stream to the mbstowcs function.
	(close_ichannel): Call ChannelStream_fini.
	(wr_ch_unbuffered_unix, wr_ch_array_unbuffered_unix)
	(wr_ch_unbuffered_mac, wr_ch_array_unbuffered_mac)
	(wr_ch_unbuffered_dos, wr_ch_array_unbuffered_dos): Pass the
	  stream to the wcstombs function.
	(close_ochannel): Call ChannelStream_fini.
	(make_unbuffered_stream): Call ChannelStream_init.
	(rd_ch_buffered, rd_ch_array_buffered): Pass the stream to the
	  mbstowcs function.
	(wr_ch_buffered_unix, wr_ch_array_buffered_unix, wr_ch_buffered_mac)
	(wr_ch_array_buffered_mac, wr_ch_buffered_dos)
	(wr_ch_array_buffered_dos): Pass the stream to the wcstombs function.
	(make_buffered_stream): Call ChannelStream_init.
	(closed_buffered): Erase the old iconv descriptors.
	(close_buffered): Call ChannelStream_fini.
	(make_keyboard_stream): Add O(terminal_encoding), and call
	  ChannelStream_init.
	(make_terminal_stream_): Call ChannelStream_init.
	(SYSTEM::SET-STREAM-EXTERNAL-FORMAT): Call ChannelStream_fini and
	  ChannelStream_init.
	* pseudofun.d: Update.

1999-03-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Support for IPv6 sockets.
	* aclocal.m4 (CL_TCPCONN): Add checks for IPv4 and IPv6 facilities.
	  Add checks for `inet_pton' and `inet_ntop' functions.
	* unixconf.h.in (CL_TCPCONN): Conditionally define HAVE_IPV4,
	  HAVE_IPV6, IPV6_NEED_LINUX_IN6_H, HAVE_INET_PTON, HAVE_INET_NTOP.
	* lispbibl.d (UNIXCONN, TCPCONN): Define here, not in socket.d.
	  Make SOCKET_STREAMS depend on TCPCONN.
	(host_data): Remove the `host' field. Make the `hostname' field
	  large enough for IPv6. Change the `truename' field into an array,
	  so it does not need to point to static or temporary data.
	(MAXHOSTNAMELEN): Define.
	* win32.d: Define HAVE_IPV4, don't define HAVE_IPV6.
	* stream.d (publish_host_data): Test hd.truename for being "", not
	  NULL. Allocate the temporary string on the stack, instead of malloc.
	* misc.d (MACHINE-INSTANCE): Moved to socket.d.
	* socket.d: Don't define UNIXCONN, TCPCONN, SOCKET_STREAMS here.
	  Don't define MAXHOSTNAMELEN here.
	(get_hostname): New macro.
	(ipv4_ntop, ipv6_ntop): New macros.
	(MACHINE-INSTANCE): Moved here from socket.d. Consider h->h_addrtype
	  instead of blindly assuming it's AF_INET. Use ipv4_ntop macro
	  for building the dotted address string, instead of doing it by hand.
	(CLOSESOCKET): Only define if UNIXCONN || TCPCONN.
	(saving_sock_errno): New macro.
	(all_digits_dots): New function, for distinguishing IPv4 addresses
	  and FQDNs. The old method of looking at the first character is no
	  longer valid.
	(with_hostname): New function, taken out of connect_to_x_server.
	  Support IPv6. Compare the inet_addr() return value with (uint32)(-1),
	  not (unsigned long)(-1) [matters for 64-bit platforms].
	(connect_to_x_via_ip): New function, taken out of
	  connect_to_x_server.
	(connect_to_x_server): Use with_hostname and connect_to_x_via_ip.
	  Use get_hostname.
	(memset, bzero, bcopy): Remove declarations.
	(fill_hostname): Remove function, obsoleted by ipv4_ntop.
	(sockaddr_max): New type.
	(socket_getlocalname_aux): New function, taken out of
	  socket_getlocalname. Don't need to bzero() the result. Support IPv6.
	(socket_getlocalname): Use socket_getlocalname_aux. Return the true
	  host name instead of "localhost".
	(socket_getpeername): Don't need to bzero() the result. Support IPv6.
	  If truename unknown, return it as "" instead of NULL.
	(bindlisten_via_ip): New function, taken out of create_server_socket.
	  Close the socket in case of failure.
	(create_server_socket): Use with_hostname and bindlisten_via_ip.
	  Don't need to bzero() the addr. Use the true host name instead of
	  "localhost". After calling getsockname(), support IPv6. Make the
	  final getsockname() after listen(), not before. Don't need to
	  bzero() the result.
	(accept_connection): Support IPv6.
	(connect_via_ip): New function, taken out of create_client_socket.
	  If connect() fails, save errno during closesocket.
	(create_client_socket): Don't need to bzero() the sockaddr. Use
	  with_hostname and connect_via_ip.

1999-03-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (XCFLAGS): When compiling for sparc, use
	  -fno-schedule-insns, in order to avoid egcs-1.1.1 bug which
	  miscompiles the division routine and causes an XGCD test failure.

1999-03-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_TERM): When `struct winsize' is not defined in
	  <termios.h>, check whether it is defined in <sys/ioctl.h>.
	* unixconf.h.in (WINSIZE_NEED_SYS_PTEM_H): Renamed from
	  NEED_SYS_PTEM_H.
	(WINSIZE_NEED_SYS_IOCTL_H): New macro.
	* unix.d: Use both.

1999-03-10  Sam Steingold  <sds@gnu.org>

	* ../configure: new option --export-syscalls.
	* makemake.in: ditto.
	* constsym.d, subr.d: added `RESOLVE-HOST-IPADDR', `FILE-STAT'
	and `USER-DATA'.
	* pathname.d: added `file_stat' and `user_data'.
	* socket.d: added `resolve_host_ipaddr'.
	* stream.d: added `stream_fd'.

1999-03-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make it possible to build clisp when neither libtermcap nor libncurses
	is available.
	* configure: Optionally pass/recommend --with-no-termcap-ncurses for
	  makemake.
	* makemake.in (XCFLAGS): Optionally add -DNO_TERMCAP_NCURSES.
	* lispbibl.d: If NO_TERMCAP_NCURSES is defined, don't define KEYBOARD
	  and SCREEN.
	* spvw_sigwinch.d (update_linelength): Respect NO_TERMCAP_NCURSES.

1999-03-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d: Include <string.h> also in the case of NO_READLINE,
	  in order to declare `strcpy' and `strcat'.

1999-03-11  Sam Steingold  <sds@goems.com>

	* loop.lsp (expand-loop): do not nreverse for collect/nconc/append.

1999-03-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove the graphics stuff.
	* graph.d: Remove file.
	* gettext/po/Makefile.devel (DSOURCES): Remove graph.
	* unix.d (geteuid, setreuid): Remove declarations.
	* makemake.in (LIBS): Don't add -lgraph and -lvideo on EMX.
	(CPARTS): Remove graph.
	(lisp.exe rule): Don't use emx options -aim or -acmi.
	* lispbibl.d (GRAPHICS, GRAPHICS_SWITCH): Remove definitions.
	(switch_text_mode): Remove declaration.
	* spvw.d (main): Don't drop setuid-root privilege. Don't call
	  switch_text_mode.
	* stream.d (low_read_unbuffered_handle, low_listen_unbuffered_handle)
	(low_read_array_unbuffered_handle, low_write_unbuffered_handle)
	(low_write_array_unbuffered_handle, rd_ch_terminal2)
	(rd_ch_terminal3, out_char): Don't call switch_text_mode.

1999-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure: Don't tell the user to do "cd .".

1999-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* graph.d (GRAPHICS_X, GRAPHICS_SUN): Remove unfinished code.
	* makemake.in: Don't link with ${X_LIBS}, but keep the Makefile
	  variable for possible future use.
	* clisp-link.in: Likewise.

1999-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d: Include <stdio.h>.

1999-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_FPU_CONTROL): Fix the "checking for" messages.

1999-03-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_MEMSET): Undefine memset, so we get correct types
	  with glibc-2.1.

1999-03-10  Sam Steingold  <sds@gnu.org>

	* clos.lsp: moved `describe-slotted-object' and `describe-object'
	from here to describe.lsp.
	* describe.lsp: moved the bulk from `describe' to `describe-object'.
	added variables `*describe-nesting*' and `*describe-done*'.
	`describe' now calls `describe-object' and is ANSI compliant.

1999-03-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* readline/: Upgrade to readline-4.0.
	* configure: Also copy readline/shlib/.

1999-03-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* genclisph.d (main): Modify immediate_number_p, charp, integerp,
	  fixnump, posfixnump, floatp, short_float_p according to 1999-02-02
	  lispbibl.d patch.

1999-03-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Renamed newnewreadline to readline, newreadline to oldreadline,
	  readline to oldoldreadline.
	* Makefile.devel, configure, makemake.in: Update.

1999-03-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (SOCKET-SERVICE-PORT): When not found, return NIL instead
	  of -1.

1999-03-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Handle SIGPIPE on Unix.
	* spvw_sigpipe.d: New file.
	* spvw.d: Include it.
	(main): Call install_sigpipe_handler.
	* makemake.in (SPVW_INCLUDES): Add spvw_sigpipe.
	* gettext/po/Makefile.devel (DSOURCES): Add spvw_sigpipe. Split line
	  into multiple pieces, to avoid 1023 character line length limit of
	  patch-2.1.
	* lispbibl.d (writing_to_subprocess): New declaration.
	* stream.d (low_flush_buffered_pipe): New function.
	(BufferedPipeStreamInit): New macro.
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Use it.
	(low_write_unbuffered_pipe, low_write_array_unbuffered_pipe): New
	  functions.
	(UnbufferedPipeStream_output_init): Use them.
	* error.d (begin_error, tast_break): Set writing_to_subprocess=FALSE.
	* unix.d (raise): New declaration.
	* msdos.d (raise): Likewise.
	* acorn.d (raise): Likewise.
	* errunix.d (EPIPE): Improve error messages.

1999-03-01  Sam Steingold  <sds@goems.com>

	* spvw.d: removed :IEEE-FLOATING-POINT from *features*.  Use
	`pushnew' instead of `nconc'.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (subr_argtype_t): New enumeration items subr_argtype_1_3,
	  subr_argtype_2_3.
	* spvw.d (subr_argtype): Use them.
	* eval.d (eval_subr, apply_subr, funcall_subr): Treat them.
	* stream.d (SYSTEM::SET-STREAM-ELEMENT-TYPE): Stricter restrictions.
	(check_multiple8_eltype, test_endianness_arg): New functions.
	(READ-INTEGER, WRITE-INTEGER): New functions.
	* compiler.lsp (subr-info): Add them.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Allow #0Y to occur on standard input.
	* stream.d (SYSTEM::SET-STREAM-EXTERNAL-FORMAT): Accept an optional
	  direction argument. If it is given, recurse properly.
	* io.d (closure_reader): Call it with direction :INPUT.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* io.d (syntax_table_get_notinline): Swap arguments to gethash().

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (compile-file): Create the .fas and .lib files in UTF-8.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Reader macro for switching the stream's encoding.
	* constobj.d (O(charset_package)): New variable.
	* package.d (init_packages): Create #<PACKAGE CHARSET> and initialize
	  O(charset_package).
	* constpack.d: Remove #<PACKAGE CHARSET> here.
	* spvw.d (init_symbol_tab_2): New enum item enum_charset_index.
	* io.d (closure_reader): Accept "#0Y charset" syntax.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* charstrg.d (char_name): Return #\Uxxxx as a name for every Unicode
	  character.
	(name_char): Accept #\Uxxxx as a name for any Unicode character.
	* io.d (char_reader): Remove #\Uxxxx recognition code, now done by
	  `name_char'.
	(pr_character): For graphic standard characters, don't look up the
	  name.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Improve error checking in parse-namestring.
	* pathname.d (legal_namechar): Don't accept Unicode characters which
	  are not 1 byte in the pathname_encoding.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Use the system's iconv() function if available.
	* aclocal.m4 (CL_ICONV): New macro.
	* configure.in: Call it.
	* unixconf.h.in (HAVE_ICONV): New macro.
	* unix.d: Declare iconv_open, iconv, iconv_close.
	* encoding.d (MAKE-ENCODING): Accept strings as well.
	(iconv_mblen, iconv_mbstowcs, iconv_wcslen, iconv_wcstombs): New
	  functions.
	* pseudofun.d: Add them.
	* stream.d (test_external_format_arg): Accept strings as well.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure: Recommend --with-unicode.
	* makemake.in (*/makefile*): Pass --with-unicode to makemake.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* macros2.lsp (with-output-to-printer): Declare arg as IGNORE.

1999-02-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Introduce space-efficient immutable strings.
	* lispbibl.d (Rectype_Imm_SmallSstring): New enumeration item.
	(Rectype_mdarray, Rectype_Sbvector, Rectype_bvector, Rectype_Svector)
	(Rectype_vector, Rectype_Sstring, Rectype_string)
	(Rectype_Imm_Sstring):
	  Rearrange and define rectype_unused1 so as to get fast type checks.
	(HAVE_SMALL_SSTRING): New macro.
	(small_sstring_, SmallSstring): New types.
	(Array_type_sstring): Treat Rectype_Imm_SmallSstring like
	  Rectype_Imm_Sstring.
	(TheSmallSstring): New macro.
	(vectorp, simplep, array_simplep, general_vector_p, simple_string_p)
	(stringp, byte_vector_p, arrayp): Update and optimize.
	(if_recordp): Treat Rectype_Imm_SmallSstring like
	  Rectype_Imm_Sstring.
	(case_Rectype_Sstring_above, case_Rectype_string_above)
	(case_Rectype_array_above): Likewise.
	(allocate_imm_small_string): New declaration.
	(with_string_0, with_sstring_0, with_string, with_sstring): Update
	  for unpack_string_ro change. Use unpack_sstring_alloca.
	(chartcopy, scintcopy): New declarations.
	(SstringDispatch): New macro.
	(unpack_sstring_alloca): New macro.
	(unpack_string_ro): One more argument, change return type.
	(coerce_normal_ss, coerce_imm_normal_ss): New declarations.
	(test_string_limits_rw): Remove declaration.
	(stringarg): New structure type.
	(test_string_limits_ro): Change calling convention.
	(string_eqcomp, string_eqcomp_ci): New declarations.
	* genclisph.d (main): Update vectorp, general_vector_p,
	  simple_string_p, stringp, byte_vector_p, arrayp.
	* spvw_objsize.d (size_small_sstring): New macro.
	(objsize): Treat Rectype_Imm_SmallSstring.
	* spvw_update.d (update_varobject): Treat Rectype_Imm_SmallSstring
	  like Rectype_Imm_Sstring.
	* spvw_genera1.d (walk_area, build_old_generation_cache): Likewise.
	* spvw_garcol.d (gc_mark): Likewise.
	* spvw_typealloc.d (allocate_imm_small_string): New function.
	* charstrg.d (chartcopy, scintcopy): New functions.
	(unpack_string_ro): Define always. One more argument, change return
	  type.
	(string_gleich, string_equal): Mostly rewritten.
	(copy_string, coerce_imm_ss): Mostly rewritten.
	(coerce_normal_ss, coerce_imm_normal_ss): New functions.
	(coerce_char): Update, treat small strings too.
	(CHAR, SCHAR): Likewise.
	(test_string_limits_ro): Change calling convention.
	(test_string_limits_rw): Change calling convention, make local.
	(test_2_stringsym_limits): Change calling convention.
	(string_eqcomp, string_comp): Change calling convention. Rewritten,
	  treat small strings too.
	(STRING=, STRING/=, STRING<, STRING>, STRING<=, STRING>=): Rewritten.
	(string_eqcomp_ci, string_comp_ci): Change calling convention.
	  Rewritten, treat small strings too.
	(STRING-EQUAL, STRING-NOT-EQUAL, STRING-LESSP, STRING-GREATERP)
	(STRING-NOT-GREATERP, STRING-NOT-LESSP): Rewritten.
	(eqcomp_fun): Change function type.
	(string_search): Change calling convention.
	  Treat len1==0 outside of the loop.
	(SYS::SEARCH-STRING=, SYS::SEARCH-STRING-EQUAL): Mostly rewritten.
	(NSTRING-UPCASE, NSTRING-DOWNCASE, NSTRING-CAPITALIZE): Rewritten.
	(subsstring, SUBSTRING, string_concat): Treat small strings too.
	* array.d (datenvektor_aref): Treat small strings too.
	(datenvektor_store): Treat Rectype_Imm_SmallSstring like
	  Rectype_Imm_Sstring.
	(VECTOR-PUSH-EXTEND): Treat small strings too.
	(ssstring_push_extend, ssstring_extend): Use chartcopy.
	* predtype.d (equal): Use string_eqcomp.
	(elt_compare_T_Char): Treat small strings too.
	(elt_compare_Char_Char): Use string_eqcomp_ci.
	* hashtabl.d (hashcode_string): Treat small strings too.
	(hashcode3_atom): Treat Rectype_Imm_SmallSstring like
	  Rectype_Imm_Sstring.
	(hashcode4_vector_Char): Treat small strings too.
	* package.d (string_hashcode): Treat small strings too.
	* encoding.d (string_to_asciz): Call unpack_sstring_alloca, but call
	  unpack_string_ro only once.
	(string_to_asciz_): Update.
	* sequence.d (WRITE-CHAR-SEQUENCE): Call unpack_sstring_alloca.
	* stream.d (wr_ss_dummy, wr_ss_dummy_nogc): Treat small strings too.
	(rd_ch_str_in, rd_ch_array_str_in): Likewise.
	(MAKE-STRING-INPUT-STREAM): Update.
	(wr_ss_str_out, wr_ss_pphelp): Treat small strings too.
	(rd_ch_buff_in): Likewise.
	(wr_ss_generic): Call unpack_sstring_alloca.
	(wr_ss_unbuffered_unix, wr_ss_unbuffered_mac, wr_ss_unbuffered_dos)
	(wr_ss_buffered_unix, wr_ss_buffered_mac, wr_ss_buffered_dos):
	  Likewise.
	(lisp_completion): Call unpack_sstring_alloca. Use
	  O(terminal_encoding).
	(wr_ss_terminal3): Call unpack_sstring_alloca. Treat small strings
	  too.
	(FILE-STRING-LENGTH): Treat small strings too.
	* io.d (PARSE-INTEGER): Treat small strings too.
	(write_sstring_case, pr_symbol_part, pr_sstring_ab): Likewise.
	(pr_orecord): Treat Rectype_Imm_SmallSstring like
	  Rectype_Imm_Sstring.
	(write_string_up): Update.
	* lisparit.d (read_integer): Call unpack_sstring_alloca.
	(decimal_string): Use chartcopy.
	* foreign.d (convert_to_foreign): Call unpack_sstring_alloca.
	* affi.d (affi_call_argsa, SYSTEM::MEM-WRITE-VECTOR): Likewise.
	* pathname.d (subst_coerce_normal_ss): New function.
	(test_optional_host): Use coerce_normal_ss instead of coerce_ss.
	(PARSE-NAMESTRING): When thing is a symbol, do the case conversion
	  on the :start/:end delimited part, not on the entire symbol-name.
	  Accept small strings too, convert them to normal strings.
	(MAKE-PATHNAME): Call coerce_normal_ss on the device, name and type.
	  Call subst_coerce_normal_ss on the directory.

1999-02-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* package.d (correct_packname): Convert the package name to an
	  immutable string.
	(init_packages): Use immutables strings as package names and
	  nicknames.
	* symbol.d (GENSYM): Make the symbol name immutable.

1999-02-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Bug fix for NEXTAPP model.
	* stream.d (lisp_completion): Call begin_error here.
	(lisp_completion_matches): Not here.

1999-02-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* socket.d (create_server_socket): Cast setsockopt argument.

	* modules.d (_NEXT_NULL): New macro.

1999-02-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Fix bug in parsing of --hyperspec argument.

	* makemake.in (XCC_DLOPENABLE_EXE_FLAG): Pass -export-dynamic to
	  the linker only if the linker is GNU ld.

1999-02-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* clos.lsp, init.lsp: Do export GENERIC-LABELS and GENERIC-FLET here.

1999-02-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (compile-file): Output the SYSTEM::VERSION form in
	  upper case.
	* unix/MAGIC.add: Revert last change.

1999-02-21  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Convert dotimesL with loop variables into dotimespL.
	* affi.d (bytecopy): Use dotimespL. Assume length > 0.
	(SYSTEM::MEM-READ): Use dotimespL instead of dotimesL.
	* array.d (reshape): Likewise.
	* charstrg.d (string_gleich, string_equal, SUBSTRING): Likewise.
	* control.d (PSETQ): Likewise.
	* error.d (convert_simple_condition): Likewise.
	* eval.d (sym_value, setq, sym_function, nest_env): Likewise.
	* encoding.d (make_string_, ascii_to_string): Likewise.
	* graph.d (gr_text): Likewise.
	* io.d (test_potential_number_syntax, test_number_syntax, test_dots)
	(upcase_token, uninterned_reader, bit_vector_reader)
	(write_sstring_case, klammer_zu): Likewise.
	* record.d (CLOS::ALLOCATE-STD-INSTANCE, CLOS::%ALLOCATE-INSTANCE)
	(CLOS::%MAKE-INSTANCE): Likewise.
	* spvw.d (main): Likewise.
	* foreign.d (convert_from_foreign_array_fill, convert_to_foreign):
	  Likewise.
	* hashtabl.d (clrhash): Likewise.
	* intread.d (DIGITS_to_I): Likewise.
	* pathname.d (common_case, test_optional_host, all_digits)
	(parse_logical_pathnamestring, legal_name_or_type, legal_name)
	(legal_type, MAKE-PATHNAME, has_wildcards, has_word_wildcards)
	(SYSTEM::DYNLOAD-MODULES): Likewise.
	* predtype.d (heap_statistics_result): Likewise.
	* stream.d (wr_ss_terminal3): Likewise.
	* spvw_debug.d (mem_hex_out): Likewise.
	* spvw_typealloc.d (allocate_vector): Likewise.

	Convert dotimesC with loop variables into dotimespC.
	* affi.d (affi_call_argsa): Use dotimespC instead of dotimesC.
	* arilev1i.d (shiftleft_loop_down, shiftleftcopy_loop_down)
	(shiftright_loop_up): Likewise.
	* array.d (array_dimensions, array_dims_sizes, ARRAY-IN-BOUNDS-P)
	(bit_up): Likewise.
	* eval.d (get_closure, funcall_iclosure, match_subr_key)
	(match_cclosure_key, apply_closure, funcall_subr, funcall_closure):
	  Likewise.
	* charstrg.d (string_concat): Likewise.
	* misc.d (MACHINE-INSTANCE): Likewise.
	* control.d (LET, LET*, SYMBOL-MACROLET): Likewise.
	* foreign.d (FFI::%ELEMENT): Likewise.
	* hashtabl.d (hashcode4_atom): Likewise.
	* lisparit.d (=, /=, <, >, <=, >=): Likewise.
	* record.d (CLOS::%SHARED-INITIALIZE, CLOS::%REINITIALIZE-INSTANCE)
	(do_initialize_instance, CLOS::%MAKE-INSTANCE): Likewise.
	* predtype.d (equalp): Likewise.
	* sequence.d (CONCATENATE): Likewise.
	* spvw.d (for_all_subrs, for_all_constobjs, init_subr_tab_1)
	(init_object_tab_1, init_other_modules_1, init_module_2, main)
	(dynload_modules): Likewise.
	* spvw_typealloc.d (allocate_xrecord_): Likewise.
	* stream.d (test_input_stream_args, test_output_stream_args)
	(clear_linepart, save_line_old): Likewise.

1999-02-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Introduce immutable strings.
	* lispbibl.d (Rectype_Imm_Sstring): New enumeration item.
	(Array_type_sstring): Include it.
	(strmflags_immut_bit_B): New macro.
	(vectorp, simplep, array_simplep, general_vector_p, simple_string_p)
	(stringp, byte_vector_p, arrayp, if_recordp): Update.
	(case_Rectype_Sstring_above, case_Rectype_string_above): Include
	  Rectype_Imm_Sstring.
	(allocate_imm_string): New declaration.
	(with_string_0, with_string): Use unpack_string_ro.
	(unpack_string_ro, unpack_string_rw): New declarations, replace
	  unpack_string.
	(coerce_imm_ss): New declaration.
	(test_string_limits_ro, test_string_limits_rw): New declarations,
	  replace test_string_limits.
	(fehler_sstring_immutable): New declaration.
	(check_sstring_mutable): New macro.
	* spvw_update.d (update_varobject): Treat Rectype_Imm_Sstring like
	  Rectype_Sstring.
	* spvw_garcol.d (gc_mark): Likewise.
	* spvw_genera1.d (walk_area, build_old_generation_cache): Likewise.
	* spvw_typealloc.d (allocate_imm_string): New function.
	* error.d (fehler_sstring_immutable): New function.
	* array.d (datenvektor_store): In case of Rectype_Imm_Sstring, signal
	  an error.
	* charstrg.d (unpack_string_rw): Renamed from unpack_string. Add calls
	  to check_sstring_mutable.
	(unpack_string_ro): New function.
	(string_gleich, string_equal, copy_string): Use unpack_string_ro
	  instead of unpack_string.
	(coerce_imm_ss): New function.
	(coerce_char): Use unpack_string_ro instead of unpack_string.
	(test_index_arg): Return the index, not the new charptr.
	(CHAR, SCHAR): Update.
	(SYS::STORE-CHAR): Update. Call unpack_string_rw instead of
	  unpack_string.
	(SYS::STORE-SCHAR): Update. Add check_sstring_mutable call.
	(test_string_limits_ro): Renamed from test_string_limits.
	  Use unpack_string_ro instead of unpack_string.
	(test_string_limits_rw): New function.
	(test_2_stringsym_limits): Use unpack_string_ro instead of
	  unpack_string.
	(NSTRING-UPCASE, NSTRING-DOWNCASE, NSTRING-CAPITALIZE): Use
	  test_string_limits_rw instead of test_string_limits.
	(SUBSTRING, string_concat): Use unpack_string_ro instead of
	  unpack_string.
	* stream.d (strmflags_immut_bit_B, strmflags_immut_B): New macros.
	(make_twoway_stream, make_echo_stream): Inherit the immut_B from
	  the input stream.
	(rd_ch_str_in, rd_ch_array_str_in): Use unpack_string_ro instead of
	  unpack_string.
	(MAKE-STRING-INPUT-STREAM): Use test_string_limits_ro instead of
	  test_string_limits.
	(rd_ch_buff_in): Likewise. Use unpack_string_ro instead of
	  unpack_string.
	(make_unbuffered_stream, make_buffered_stream): Put strmflags_immut_B
	  into the strmflags if asked for.
	(FILE-STRING-LENGTH): Use unpack_string_ro instead of unpack_string.
	* io.d (string_reader): Create an immutable string, if the stream
	  allows this.
	(uninterned_reader): Likewise.
	(PARSE-INTEGER): Use test_string_limits_ro instead of
	  test_string_limits.
	(pr_orecord): Treat Rectype_Imm_Sstring like Rectype_Sstring.
	(write_string_up): Use test_string_limits_ro instead of
	  test_string_limits.
	* affi.d (affi_call_argsa): Use unpack_string_ro instead of
	  unpack_string.
	(SYSTEM::MEM-READ): Use unpack_string_rw instead of unpack_string.
	(SYSTEM::MEM-WRITE-VECTOR): Use unpack_string_ro instead of
	  unpack_string.
	* package.d (string_hashcode): Use unpack_string_ro instead of
	  unpack_string.
	(intern): Make the symbol-name strings immutable if possible.
	(shadow): Likewise.
	(MAKE-SYMBOL): Likewise.
	(test_names_args): Make the package-name and package-nicknames
	  strings immutable if possible.
	* spvw.d (init_symbol_tab_2): Make the symbol-name strings immutable
	  if possible.
	* pathname.d (PARSE-NAMESTRING): Use test_string_limits_ro instead of
	  test_string_limits.
	* encoding.d (string_to_asciz): Use unpack_string_ro instead of
	  unpack_string.
	* foreign.d (convert_to_foreign): Use unpack_string_ro instead of
	  unpack_string.
	* hashtabl.d (hashcode_string): Use unpack_string_ro instead of
	  unpack_string.
	(hashcode3_atom): Treat Rectype_Imm_Sstring like Rectype_Sstring.
	* sequence.d (READ-CHAR-SEQUENCE): Treat an empty string specially.
	  Then call unpack_string_rw instead of unpack_string.
	(WRITE-CHAR-SEQUENCE): Treat an empty string specially.
	  Then call unpack_string_ro instead of unpack_string.

1999-02-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make room in the strmflags.
	* stream.d (strmflags_i_B, strmflags_ia_B, strmflags_ib_B)
	(strmflags_ic_B): Remove macros.
	(decoded_eltype): kind==eltype_ch implies size==0.
	(test_eltype_arg): When setting eltype_ch, set size = 0.
	(strm_channel_extrafields_struct): bitsize is now unconditional.
	(close_ichannel, close_ochannel): Test for bitsize > 0.
	(make_unbuffered_stream): Set ChannelStream_bitsize in all cases.
	  Don't set strmflags_i...
	(position_file_i_buffered): Dispatch on bitsize, not flags.
	(logical_position_file_start, logical_position_file)
	(logical_position_file_end): Likewise.
	(fill_pseudofuns_buffered): Likewise.
	(make_buffered_stream): Set ChannelStream_bitsize in all cases.
	  Don't set strmflags_i...
	(buffered_flush_everything): Dispatch on bitsize, not flags.
	(closed_buffered): Test for bitsize > 0.
	(SYSTEM::SET-STREAM-ELEMENT-TYPE): Simplify accordingly.

1999-02-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make BASE-CHAR equivalent to CHARACTER.
	* lispbibl.d (small_char_int_len): Renamed from base_char_int_len.
	(small_char_int_limit): Renamed from base_char_int_limit.
	(scint): Renamed from bcint.
	(small_char_code_limit): Renamed from base_char_code_limit.
	(base_char_int_len, base_char_code_limit): New macros.
	(base_char_p): Define only when needed.
	(small_char_p): New macro.
	* charstrg.d (SYSTEM::BASE-CHAR-P): Define only when needed.
	* spvw.d (init_object_tab): Add :BASE-CHAR=CHARACTER to *features*.
	* io.d: Update.
	* defs2.lsp (dispatch-reader): Don't use base-char-p and
	  base-char-code-limit.
	(designator): Depend upon :BASE-CHAR=CHARACTER.
	(base-char-designator-p): Define only when needed.
	* type.lsp (BASE-CHAR, EXTENDED-CHAR, canonicalize-type): Depend
	  upon :BASE-CHAR=CHARACTER.
	* compiler.lsp (c-typep-alist1, c-typep-alist2): Treat BASE-CHAR
	  and EXTENDED-CHAR depending upon :BASE-CHAR=CHARACTER.

1999-02-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Improve the speed of NLS charset conversions.
	* utils/unicode/nls_table.java: Emit a value for is_ascii_extension.
	* encoding.d (nls_table): New field `is_ascii_extension'.
	(nls_asciiext_mbstowcs, nls_asciiext_wcstombs): New functions.
	(init_encodings): Choose them if possible.
	* pseudofun.d (nls_asciiext_mbstowcs, nls_asciiext_wcstombs): New
	  declarations.

1999-02-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (init_streamvars): Avoid gcc warning.

1999-02-19  Sam Steingold  <sds@goems.com>

	* defs3.lsp, clos.lsp, init.lsp: do not export `generic-flet',
	`generic-labels'.
	* _impnotes.html is now HTML 3.2 compliant.

1999-02-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Improve parsing of --hyperspec argument.

1999-02-18  Sam Steingold  <sds@goems.com>

	* affi.txt, ansicl.txt, cltl2.txt, foreign.txt, module.txt,
	vgagraph.txt: removed.

1999-02-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Improve parsing of --hyperspec argument.

1999-02-17  Sam Steingold  <sds@goems.com>

	* spvw.d: user ascii* instead of asciz* for constant string
	when initializing *features*.
	* _impnotes.txt, impnotes.html: removed.
	* _impnotes.html: new file.
	* makemake.in, ../configure: new option --hyperspec.

1999-02-12  Sam Steingold  <sds@goems.com>

	* socket.d (create_client_socket): port is unsigned int.
	* stream.d: declare `create_client_socket' appropriately.

1999-02-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pseudofun.d: Enclose all XPSEUDOs in #ifdef UNICODE.

1999-02-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Unicode support.
	* makemake.in (--with-unicode): New command line option.
	(XCFLAGS): Conditionally add -DUNICODE.
	(UNICODE_INCLUDES, NLS_INCLUDES): New variables.
	(CFILES): Add them.
	  Symlink them.
	(depends): Add $UNICODE_INCLUDES for charstrg. Add $NLS_INCLUDES for
	  encoding.
	* lispbibl.d (CHART_STRUCT): Don't define on m68k and arm CPUs.
	(char_int_len): Define as 16 for UNICODE.
	(Encoding) [UNICODE]: Add more fields.
	(encoding_length): Change value.
	(encoding_xlength): New macro.
	(Encoding_mblen, Encoding_mbstowcs, Encoding_wcslen)
	(Encoding_wcstombs, cslen, cstombs): New macros.
	(allocate_encoding): Use encoding_xlength.
	(make_string): Add an encoding argument.
	(asciz_to_string, string_to_asciz): Likewise.
	(ascii_to_string): New function.
	(with_string_0, with_sstring_0, with_string, with_sstring): Add an
	  encoding argument.
	(pseudofun_): Remove type.
	(Pseudofun): Change definition.
	(P): New macro, moved here from stream.d.
	(max_bytes_per_chart): New macro.
	* genclisph.d (main): Remove `asciz_to_string' declaration.
	  Add `ascii_to_string' declaration.
	* modules/clx/new-clx/e2d.c (care_about_packages): Use ascii_to_string
	  instead of asciz_to_string.
	* constpack.d (LISPPACK_B): Use ascii_to_string instead of
	  asciz_to_string.
	(charset): New package.
	* constsym.d (CHARSET:...): New symbols.
	* constobj.d (O(internal_encoding), O(pathname_encoding),
	   O(terminal_encoding), O(foreign_encoding), O(misc_encoding)): New
	  variables.
	* spvw.d (make_string, asciz_to_string, string_to_asciz): Moved out
	  to encoding.d.
	(fehler_notreached): Use ascii_to_string instead of asciz_to_string.
	(fehler_code_alignment): Use O(terminal_encoding).
	(init_symbol_tab_2): Export symbols in package CHARSET as well.
	  Use ascii_to_string instead of asciz_to_string.
	(init_object_tab): Add :UNICODE to features_initstring. Use
	  ascii_to_string instead of asciz_to_string. Use O(internal_encoding).
	(init_module_2): Use O(internal_encoding).
	(print_license, print_banner): Use O(internal_encoding).
	(main): Use O(internal_encoding) and O(pathname_encoding) and
	  O(misc_encoding). Use ascii_to_string.
	(fehler_dlerror): Use O(misc_encoding) and O(internal_encoding).
	* spvw_language.d (localized_string, localized_object): Use
	  S(iso8859_1).
	* spvw_memfile.d (memflags): Depends on UNICODE.
	(loadmem_update): Use the Pseudofun type instead of void*.
	* encoding.d (MAKE-ENCODING): Accept constant symbols for the :charset
	  argument. Copy the trailing encoding_xlength bytes too.
	(make_string): Moved here from spvw.d. Add encoding argument.
	(asciz_to_string): Likewise.
	(ascii_to_string): New function.
	(string_to_asciz): Moved here from spvw.d. Add encoding argument.
	(hex_table): New variable.
	(fehler_unencodable): New function.
	(uni16_mblen, uni16be_mbstowcs, uni16le_mbstowcs, uni16_wcslen)
	(uni16be_wcstombs, uni16le_wcstombs): New functions.
	(fehler_utf8_invalid1, fehler_utf8_invalid2, fehler_utf8_invalid3)
	(utf8_mblen, utf8_mbstowcs, utf8_wcslen, utf8_wcstombs): New
	  functions.
	(java_mblen, java_mbstowcs, java_wcslen, java_wcstombs): New
	  functions.
	(nls_table): New struct type.
	(nopage): New constant array.
	(nls_*.c): New include files.
	(nls_first_sym, nls_last_sym, nls_num_encodings): New macros.
	(nls_tables): New constant array.
	(nls_mblen, nls_mbstowcs, nls_wcslen, nls_wcstombs): New functions.
	(init_encodings): Entirely rewritten.
	* pseudofun.d (PSEUDOFUN_C): Renamed from PSEUDOFUN_B.
	(PSEUDOFUN_B): New macro.
	(XPSEUDO_A, XPSEUDO_B, XPSEUDO_C): New macros.
	  New XPSEUDO declarations for the functions and tables defined in
	  encoding.d.
	* charstrg.d (nop_page): New variable.
	(up_case, down_case): Add UNICODE support.
	(uni_attribute.c): New include file.
	(unicode_attribute): New macro.
	(alphap): Add UNICODE support.
	(numericp): New macro.
	(alphanumericp): Add UNICODE support.
	(graphic_char_p): Add UNICODE support.
	(SYSTEM::BASE-CHAR-P): Fix comparison with base_char_code_limit.
	(DIGIT-CHAR-P): Add UNICODE support.
	* predtype.d (TYPE-OF): Fix comparison with base_char_code_limit.
	* package.d (init_packages): Use ascii_to_string instead of
	  asciz_to_string.
	* io.d (unicode_attribute, graphic_char_p): New macros.
	(allocate_perchar_table, perchar_table_get, perchar_table_put)
	(copy_perchar_table): Add UNICODE support.
	(allocate_syntax_table, syntax_table_get, syntax_table_put): Move
	  macros. Add UNICODE support.
	(orig_syntax_table): Size is only base_char_code_limit. Add UNICODE
	  support.
	(orig_syntax_table_get): New macro.
	(orig_readtable, copy_readtable_contents): Add UNICODE support.
	(SET-SYNTAX-FROM-CHAR): Permit syntax_table_put to call GC.
	(SET-MACRO-CHARACTER): Likewise.
	(MAKE-DISPATCH-MACRO-CHARACTER): Likewise.
	(attribute_table): Size is only base_char_code_limit. Add UNICODE
	  support.
	(attribute_of): Add UNICODE support.
	(char_reader): Declare code as uintL, so it can hold value up to
	  10*char_code_limit. Recognize #\uxxxx syntax.
	(PARSE-INTEGER): Use orig_syntax_table_get instead of accessing
	  orig_syntax_table directly.
	(pr_orecord): For Rectype_Encoding, also print the charset symbol.
	* defs2.lsp (dispatch-reader): Modify to match changes in the
	  perchar_table_get macro.
	* pathname.d (asciz_dir_to_pathname): Add an encoding argument.
	(PARSE-NAMESTRING): Use O(misc_encoding).
	(default_directory_of, directory_truename, default_directory)
	(canonicalise_filename, canonicalise_dirname, assure_dir_exists):
	  Use O(pathname_encoding).
	(change_default): Likewise.
	(file_exists, directory_exists): Likewise.
	(DELETE-FILE, rename_file, create_backup_file, open_file): Likewise.
	(extract, subdirs, subfiles, with_stat_info)
	(directory_search_1subdir, directory_search_hashcode)
	(directory_search_direntry_ok, directory_search_scandir, DIRECTORY):
	  Likewise.
	(MAKE-DIR, DELETE-DIR, ENSURE-DIRECTORIES-EXIST): Likewise.
	(init_pathnames): Use O(pathname_encoding) and O(misc_encoding).
	(FILE-WRITE-DATE, FILE-AUTHOR): Use O(pathname_encoding).
	(EXECUTE): Use O(pathname_encoding) and O(misc_encoding).
	(SHELL): Use O(misc_encoding).
	(SYSTEM::DYNLOAD-MODULES): Use O(pathname_encoding).
	(SYSTEM::PROGRAM-NAME): Likewise.
	* stream.d (P): Move to lispbibl.d.
	(test_external_format): Accept constant symbols.
	(strm_unbuffered_extrafields_struct): Extend the meaning of status.
	  Rename field `lastbyte' to `bytebuf'.
	(UnbufferedStream_lastbyte): Remove macro.
	(UnbufferedStream_bytebuf): New macro.
	(UnbufferedStreamLow_push_byte, UnbufferedStreamLow_pushfront_byte)
	(UnbufferedStreamLow_pushfront_bytes, UnbufferedStreamLow_pop_byte):
	  New macros.
	(low_read_unbuffered_handle): Use UnbufferedStreamLow_pop_byte and
	  UnbufferedStreamLow_push_byte.
	(low_listen_unbuffered_handle): Use UnbufferedStreamLow_push_byte.
	(low_read_array_unbuffered_handle): Use UnbufferedStreamLow_pop_byte
	  in a loop.
	(rd_ch_unbuffered): Add UNICODE support.
	(listen_unbuffered): Likewise. Use UnbufferedStreamLow_pushfront_byte.
	(rd_ch_array_unbuffered): Add UNICODE support.
	(wr_ch_unbuffered_unix, wr_ch_array_unbuffered_unix): Likewise.
	(wr_ch_unbuffered_mac, wr_ch_array_unbuffered_mac): Likewise.
	(wr_ch_unbuffered_dos, wr_ch_array_unbuffered_dos): Likewise.
	(rd_ch_buffered, rd_ch_array_buffered): Likewise.
	(wr_ch_buffered_unix, wr_ch_array_buffered_unix): Likewise.
	(wr_ch_buffered_mac, wr_ch_array_buffered_mac): Likewise.
	(wr_ch_buffered_dos, wr_ch_array_buffered_dos): Likewise.
	(finish_output_buffered): Use O(pathname_encoding).
	(make_key_event): Use ascii_to_string instead of asciz_to_string.
	(lisp_completion): Use O(terminal_encoding).
	(rd_ch_terminal3): Use O(terminal_encoding).
	(wr_ch_terminal3): Call wr_ch_unbuffered_unix, instead of direct
	  `write' call.
	(wr_ss_terminal3): Call wr_ch_array_unbuffered_unix, instead of
	  direct `full_write' call.
	(make_terminal_stream_): Initialize the encoding. Use
	  O(pathname_encoding).
	(init_term): Use O(misc_encoding).
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Use O(misc_encoding).
	(low_read_unbuffered_socket): Use UnbufferedStreamLow_pop_byte.
	(low_listen_unbuffered_socket): Use UnbufferedStreamLow_push_byte.
	(low_read_array_unbuffered_socket): Use UnbufferedStreamLow_pop_byte
	  in a loop.
	(SYS::MAKE-SOCKET-STREAM, SOCKET-SERVER, SOCKET-CONNECT): Use
	  O(misc_encoding).
	(SOCKET-SERVICE-PORT): Use S(ascii).
	(publish_host_data): Use O(misc_encoding).
	(make_terminal_io): Use ascii_to_string instead of asciz_to_string.
	(init_streamvars): Likewise.
	(SYSTEM::SET-STREAM-ELEMENT-TYPE): Use UnbufferedStreamLow_push_byte.
	(pseudofun_tab): Include pseudofun.c once more.
	* error.d (write_errorstring): Add UNICODE support. Use
	  O(internal_encoding).
	* misc.d (LISP-IMPLEMENTATION-VERSION): Use ascii_to_string instead of
	  asciz_to_string.
	(MACHINE-TYPE, MACHINE-VERSION, MACHINE-INSTANCE): Use
	  O(misc_encoding). Use ascii_to_string instead of asciz_to_string.
	(SYSTEM::GETENV, SYSTEM::REGISTRY): Use O(misc_encoding).
	* rexx.d (REXX-PUT): Use with_sstring and O(misc_encoding).
	(rexx_getmsg): Use O(misc_encoding).
	(REXX-REPLY): Use with_string and O(misc_encoding). No need to call
	  coerce_ss.
	* graph.d (SYS::GRAPH-INIT): Use ascii_to_string instead of
	  asciz_to_string.
	(SYS::GRAPH-TEXT): Use with_string and an encoding corresponding to
	  the font.
	* foreign.d (register_foreign_variable, register_foreign_function):
	  Use O(internal_encoding).
	(convert_from_foreign_array_fill, convert_from_foreign): Add UNICODE
	  support. Use O(foreign_encoding).
	(convert_to_foreign): Add UNICODE support. Use O(foreign_encoding).
	(open_library): Use O(misc_encoding).
	* affi.d (affi_callit): Use O(foreign_encoding).
	(affi_call_argsa): Add UNICODE support. Use O(foreign_encoding).
	(SYS::MEM-READ, SYSTEM::MEM-WRITE-VECTOR): Likewise.

1999-02-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (init_streamvars): Initialize the keyboard stream after
	  the standard streams, not before them.

1999-02-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* autoconf/aclocal.m4 (CL_IREG_FLOAT_RETURN): New macro.

1999-02-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/unicode/: New directory.
	* uni_upcase.c, uni_downcase.c, uni_attribute.c, nls_*.c: New files,
	  automatically generated by utils/unicode/ tools.

1999-02-14  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* compiler.lsp (compile-toplevel-form): Put a newline on
	  *fasoutput-stream* after the form, not before it.
	(compile-file): Put a newline after the first form, and none before
	  closing *fasoutput-stream*.

1999-02-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (with_sstring): Assign a value to lenvar.

1999-02-13  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Introduce encodings.
	* lispbibl.d (Rectype_Encoding): New enum value.
	(Encoding): New structure type.
	(encoding_length): New macro.
	(strm_file_name, strm_file_truename, strm_buffered_channel)
	(strm_pipe_pid, strm_x11socket_connect, strm_socket_port)
	(strm_socket_host): Offset by 1.
	(TheEncoding, encodingp, allocate_encoding): New macros.
	(init_encodings): New declaration.
	(make_file_stream): Change calling convention.
	* constobj.d (O(default_file_encoding)): New variable.
	* encoding.d: New file.
	* makemake.in (CPARTS): Add encoding.d.
	* gettext/po/Makefile.devel (DSOURCES): Add encoding.d.
	* spvw.d (initmem): Call init_encodings.
	* io.d (pr_orecord): Treat Rectype_Encoding.
	* predtype.d (TYPE-OF, CLOS:CLASS-OF): Treat Rectype_Encoding.
	(enum_hs_encoding): New enum value.
	(heap_statistics_mapper): Treat Rectype_Encoding.
	* stream.d (test_external_format_arg): New function.
	(strm_encoding): New macro.
	(strm_bitbuffer, strm_buffer, strm_isatty, strm_ichannel)
	(strm_ochannel, strm_field1, strm_field2, strm_channel_extrafields)
	(strm_channel_len): Offset by 1.
	(strm_unbuffered_extrafields_struct): New field ignore_next_LF.
	(UnbufferedStream_ignore_next_LF): New macro.
	(rd_ch_unbuffered): Perform CR/LF->NL and CR->NL conversion.
	(listen_unbuffered): Likewise.
	(clear_input_unbuffered): Update.
	(rd_ch_array_unbuffered): Perform CR/LF->NL and CR->NL conversion.
	(wr_ch_unbuffered_unix): Renamed from wr_ch_unbuffered.
	(wr_ch_array_unbuffered_unix): Renamed from wr_ch_array_unbuffered.
	(wr_ss_unbuffered_unix): Renamed from wr_ss_unbuffered.
	(wr_ch_unbuffered_mac, wr_ch_array_unbuffered_mac)
	(wr_ss_unbuffered_mac): New functions.
	(wr_ch_unbuffered_dos, wr_ch_array_unbuffered_dos)
	(wr_ss_unbuffered_dos): New functions.
	(wr_ch_unbuffered_x, wr_ch_array_unbuffered_x, wr_ss_unbuffered_x):
	  Remove macros.
	(fill_pseudofuns_unbuffered): Choose among the
	  wr_*_unbuffered_{unix,mac,dos} functions.
	(make_unbuffered_stream): Change calling convention. Set the
	  stream's encoding.
	(rd_ch_buffered): Perform CR/LF->NL and CR->NL conversion.
	(rd_ch_array_buffered): Likewise.
	(wr_ch_buffered_unix): Renamed from wr_ch_buffered.
	(wr_ch_array_buffered_unix): Renamed from wr_ch_array_buffered.
	(wr_ss_buffered_unix): Renamed from wr_ss_buffered.
	(wr_ch_buffered_mac, wr_ch_array_buffered_mac, wr_ss_buffered_mac):
	  New functions.
	(wr_ch_buffered_dos, wr_ch_array_buffered_dos, wr_ss_buffered_dos):
	  New functions.
	(fill_pseudofuns_buffered): Choose among the
	  wr_*_buffered_{unix,mac,dos} functions.
	(make_buffered_stream): Change calling convention. Set the stream's
	  encoding.
	(make_file_stream): Change calling convention. Call
	  test_external_format_arg.
	(strm_terminal_index): Offset by 1.
	(rd_ch_terminal1): Remove CR/LF->NL conversion, already done by
	  rd_ch_unbuffered.
	(wr_ch_terminal1, wr_ss_terminal1): Update.
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Call test_external_format_arg.
	(make_socket_stream): Change calling convention.
	(SOCKET-ACCEPT, SOCKET-CONNECT): Call test_external_format_arg.
	(make_terminal_io, init_streamvars): Update.
	(SYSTEM::SET-STREAM-ELEMENT-TYPE): Reset the ignore_next_LF flag.
	(STREAM-EXTERNAL-FORMAT): Rewritten.
	(SYSTEM::SET-STREAM-EXTERNAL-FORMAT): New function.
	(FILE-STRING-LENGTH): Update.
	* pseudofun.d: Update.
	* pathname.d (open_file): Change calling convention.
	(OPEN): Don't check the :external-format argument here.
	* places.lsp (stream-external-format): New defsetf.
	* macros2.lsp (with-output-to-printer, make-printer-stream): Accept
	  a :external-format argument.

1999-02-11  Christian Jullien  <eligis@wanadoo.fr>

	* time.d (get_run_time) [TIME_WIN32]: Add missing semicolon.

1999-02-10  Sam Steingold  <sds@goems.com>

	* spvw.d: added :ANSI-CL and :IEEE-FLOATING-POINT to *features*
	when invoked with "-a".

	* io.d: when lisp:*ansi* is non-nil, do not print pathnames with
	#S() when *print-readably* is non-nil.

1999-02-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* unixaux.d (full_read): Call handle_fault_range before the system
	  call, in order to avoid EFAULT.
	(full_write): Likewise.
	* win32aux.d (lowlevel_full_read, full_write, lowlevel_sock_read)
	(lowlevel_sock_write): Likewise.

1999-02-05  Sam Steingold  <sds@goems.com>

	* spvw.d (usage): added the URL and replaced "oder" with "or".

1999-02-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intgcd.d (I_I_xgcd_I_I_I): Use C comments, not C++ comments.

1999-02-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (publish_host_data): If hd.truename is NULL, use
	  hd.hostname, not hd.truename.

1999-02-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d: Big renaming orgy.
	(strm_ichannel): was strm_ihandle.
	(strm_ochannel): was strm_ohandle.
	(strm_channel_extrafields): was strm_handle_extrafields.
	(strm_channel_len): was strm_handle_len.
	(strm_channel_extrafields_struct): was
	  strm_handle_extrafields_struct.
	(strm_unbuffered_extrafields_struct): was
	  strm_u_file_extrafields_struct.
	(ChannelStream_eltype): was HandleStream_eltype.
	(ChannelStream_isatty): was HandleStream_isatty.
	(ChannelStream_ichannel): was HandleStream_ihandle.
	(ChannelStream_ochannel): was HandleStream_ohandle.
	(ChannelStream_buffered): was HandleStream_buffered.
	(ChannelStreamLow_close): was HandleStreamLow_close.
	(ChannelStream_lineno): was HandleStream_lineno.
	(ChannelStream_bitsize): was HandleStream_bitsize.
	(UnbufferedStreamLow_read): was FileStreamLow_read.
	(UnbufferedStreamLow_listen): was FileStreamLow_listen.
	(UnbufferedStreamLow_clear_input): was FileStreamLow_clear_input.
	(UnbufferedStreamLow_read_array): was FileStreamLow_read_array.
	(UnbufferedStream_status): was FileStream_status.
	(UnbufferedStream_lastbyte): was FileStream_lastbyte.
	(UnbufferedStream_rawp): was FileStream_rawp.
	(UnbufferedStreamLow_write): was FileStreamLow_write.
	(UnbufferedStreamLow_write_array): was FileStreamLow_write_array.
	(UnbufferedStreamLow_finish_output): was FileStreamLow_finish_output.
	(UnbufferedStreamLow_force_output): was FileStreamLow_force_output.
	(UnbufferedStreamLow_clear_output): was FileStreamLow_clear_output.
	(wr_by_ixu_sub): was wr_by_ixu_file.
	(wr_by_ixs_sub): was wr_by_ixs_file.
	(low_read_unbuffered_handle): was file_low_read.
	(low_listen_unbuffered_handle): was file_low_listen.
	(low_clear_input_unbuffered_handle): was file_low_clear_input.
	(low_read_array_unbuffered_handle): was file_low_read_array.
	(rd_by_aux_iax_unbuffered): was rd_by_aux_iax_handle.
	(rd_by_iau_unbuffered): was rd_by_iau_handle.
	(rd_by_ias_unbuffered): was rd_by_ias_handle.
	(rd_by_iau8_unbuffered): was rd_by_iau8_handle.
	(rd_by_array_iau8_unbuffered): was rd_by_array_iau8_handle.
	(rd_ch_unbuffered): was rd_ch_handle.
	(listen_unbuffered): was listen_handle.
	(clear_input_unbuffered): was clear_input_handle.
	(rd_ch_array_unbuffered): was rd_ch_array_handle.
	(UnbufferedHandleStream_input_init): was HandleStream_input_init.
	(UnbufferedHandleStream_input_init_amiga): was
	  HandleStream_input_init_amiga.
	(close_ichannel): was close_ihandle.
	(low_write_unbuffered_handle): was file_low_write.
	(low_write_array_unbuffered_handle): was file_low_write_array.
	(low_finish_output_unbuffered_handle): was file_low_finish_output.
	(low_force_output_unbuffered_handle): was file_low_force_output.
	(low_clear_output_unbuffered_handle): was file_low_clear_output.
	(wr_by_aux_ia_unbuffered): was wr_by_aux_ia_handle.
	(wr_by_iau_unbuffered): was wr_by_iau_handle.
	(wr_by_ias_unbuffered): was wr_by_ias_handle.
	(wr_by_iau8_unbuffered): was wr_by_iau8_handle.
	(wr_by_array_iau8_unbuffered): was wr_by_array_iau8_handle.
	(wr_ch_unbuffered): was wr_ch_handle.
	(wr_ch_array_unbuffered): was wr_ch_array_handle.
	(wr_ss_unbuffered): was wr_ss_handle.
	(wr_ch_unbuffered_x): was wr_ch_handle_x.
	(wr_ch_array_unbuffered_x): was wr_ch_array_handle_x.
	(wr_ss_unbuffered_x): was wr_ss_handle_x.
	(finish_output_unbuffered): was finish_output_handle.
	(force_output_unbuffered): was force_output_handle.
	(clear_output_unbuffered): was clear_output_handle.
	(UnbufferedHandleStream_output_init): was HandleStream_output_init.
	(close_ochannel): was close_ohandle.
	(strm_buffered_channel): was strm_file_handle.
	(strm_buffered_bufflen): was strm_file_bufflen.
	(strm_buffered_buffer): was strm_file_buffer.
	(strm_buffered_extrafields_struct): was strm_file_extrafields_struct.
	(strm_i_buffered_extrafields_struct): was
	  strm_i_file_extrafields_struct.
	(BufferedStream_channel): was FileStream_handle.
	(BufferedStream_buffer): was FileStream_buffer.
	(BufferedStreamLow_fill): was FileStreamLow_fill.
	(BufferedStreamLow_flush): was FileStreamLow_flush.
	(BufferedStream_buffstart): was FileStream_buffstart.
	(BufferedStream_eofindex): was FileStream_eofindex.
	(BufferedStream_index): was FileStream_index.
	(BufferedStream_modified): was FileStream_modified.
	(BufferedStream_regular): was FileStream_regular.
	(BufferedStream_blockpositioning): was FileStream_blockpositioning.
	(BufferedStream_position): was FileStream_position.
	(BufferedStream_bitindex): was FileStream_bitindex.
	(BufferedStream_eofposition): was FileStream_eofposition.
	(handle_lseek): was file_lseek.
	(low_fill_buffered_handle): was b_file_fill.
	(low_flush_buffered_handle): was b_file_finish_flush.
	(BufferedHandleStream_init): was HandleStream_init.
	(buffered_full_flush): was b_file_full_flush.
	(buffered_half_flush): was b_file_half_flush.
	(buffered_flush): was b_file_flush.
	(buffered_nextbyte): was b_file_nextbyte.
	(buffered_eofbyte): was b_file_eofbyte.
	(buffered_writebyte): was b_file_writebyte.
	(position_file_buffered): was position_b_file.
	(read_byte_array_buffered): was read_byte_array_b_file.
	(write_byte_array_buffered): was write_byte_array_b_file.
	(rd_ch_buffered): was rd_ch_ch_file.
	(listen_buffered): was listen_ch_file.
	(rd_ch_array_buffered): was rd_ch_array_ch_file.
	(write_byte_buffered): was write_b_file.
	(wr_ch_buffered): was wr_ch_ch_file.
	(wr_ch_array_buffered): was wr_ch_array_ch_file.
	(wr_ss_buffered): was wr_ss_ch_file.
	(position_file_i_buffered): was position_i_file.
	(rd_by_aux_iax_buffered): was rd_by_aux_iax_file.
	(rd_by_aux_ibx_buffered): was rd_by_aux_ibx_file.
	(rd_by_aux_icx_buffered): was rd_by_aux_icx_file.
	(rd_by_iau_buffered): was rd_by_iau_file.
	(rd_by_ias_buffered): was rd_by_ias_file.
	(rd_by_ibu_buffered): was rd_by_ibu_file.
	(rd_by_ibs_buffered): was rd_by_ibs_file.
	(rd_by_icu_buffered): was rd_by_icu_file.
	(rd_by_ics_buffered): was rd_by_ics_file.
	(rd_by_iau8_buffered): was rd_by_iau8_file.
	(rd_by_array_iau8_buffered): was read_byte_array_iau8_file.
	(wr_by_aux_ia_buffered): was wr_by_aux_ia_file.
	(wr_by_aux_ib_buffered): was wr_by_aux_ib_file.
	(wr_by_aux_ic_buffered): was wr_by_aux_ic_file.
	(wr_by_iau_buffered): was wr_by_iau_file.
	(wr_by_ias_buffered): was wr_by_ias_file.
	(wr_by_ibu_buffered): was wr_by_ibu_file.
	(wr_by_ibs_buffered): was wr_by_ibs_file.
	(wr_by_icu_buffered): was wr_by_icu_file.
	(wr_by_ics_buffered): was wr_by_ics_file.
	(wr_by_iau8_buffered): was wr_by_iau8_file.
	(wr_by_array_iau8_buffered): was write_byte_array_iau8_file.
	(logical_position_file_start): was position_file_start.
	(logical_position_file): was position_file.
	(logical_position_file_end): was position_file_end.
	(buffered_flush_everything): was file_flush.
	(finish_output_buffered): was finish_output_file.
	(force_output_buffered): was force_output_file.
	(closed_buffered): was closed_file.
	(close_buffered): was close_file.
	(UnbufferedPipeStream_input_init): was PipeStream_input_init.
	(low_finish_output_unbuffered_pipe): was pipe_low_finish_output.
	(low_force_output_unbuffered_pipe): was pipe_low_force_output.
	(low_clear_output_unbuffered_pipe): was pipe_low_clear_output.
	(UnbufferedPipeStream_output_init): was PipeStream_output_init.
	(low_read_unbuffered_socket): was socket_low_read.
	(low_listen_unbuffered_socket): was socket_low_listen.
	(low_clear_input_unbuffered_socket): was socket_low_clear_input.
	(low_read_array_unbuffered_socket): was socket_low_read_array.
	(UnbufferedSocketStream_input_init): was SocketStream_input_init.
	(low_write_unbuffered_socket): was socket_low_write.
	(low_write_array_unbuffered_socket): was socket_low_write_array.
	(low_finish_output_unbuffered_socket): was socket_low_finish_output.
	(low_force_output_unbuffered_socket): was socket_low_force_output.
	(low_clear_output_unbuffered_socket): was socket_low_clear_output.
	(UnbufferedSocketStream_output_init): was SocketStream_output_init.
	(listen_socket): Remove function.
	(low_fill_buffered_socket): was b_socket_fill.
	(low_flush_buffered_socket): was b_socket_finish_flush.
	(BufferedSocketStream_init): was SocketStream_init.
	* lispbibl.d (strm_buffered_channel): was strm_file_handle.
	* pseudofun.d: Update.
	* pathname.d: Update.
	* spvw_memfile.d: Update.

1999-02-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (oint_type_{shift,len,mask}, oint_data_{shift,len,mask}):
	  New definitions for Sparc-Linux.
	(garcol_bit_o): Move definition.
	(imm_type_shift): New macro.
	(fixnum_type, sfloat_type, char_type, read_label_type, system_type)
	(sign_bit_t, immediate_number_p, charp, read_label_p, systemp)
	(if_realp, if_rationalp, integerp, fixnump, posfixnump, floatp)
	(short_float_p): Use it.
	(FB5, FB4, FB3, FB2, FB1): Depend on garcol_bit_o.

1999-02-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* hashtabl.d (sxhash_atom): Use `bitm' instead of `bit', in case
	  oint_type_len==32.

1999-02-02  Sam Steingold  <sds@goems.com>

	* clisp.spec: update 'release' with each build.

1999-02-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (LPARTS): Add back config.lsp.

1999-02-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Implement unbuffered file-streams, and buffered pipes and socket
	streams.
	* lispbibl.d (strmtype_twoway_socket): New enum value.
	(strm_twoway_socket_input): New macro.
	(make_file_stream): Change calling convention.
	* error.d (OS_filestream_error): Use the truename only for file
	  streams, as opposed to pipe and socket streams.
	* stream.d (test_buffered_arg): New function.
	(strm_handle_extrafields_struct): New field low_close.
	(HandleStreamLow_close): New macro.
	(low_close_handle): New function.
	(close_ihandle, close_ohandle): Call HandleStreamLow_close(stream).
	(strm_file_extrafields_struct): New fields low_fill, low_flush,
	  regular, blockpositioning.
	(FileStreamLow_fill, FileStreamLow_flush, FileStream_regular)
	(FileStream_blockpositioning): New macros.
	(b_file_fill): New function.
	(HandleStream_init): New macro.
	(b_file_full_flush): Use FileStream_blockpositioning and
	  FileStreamLow_flush.
	(b_file_half_flush): Likewise.
	(b_file_nextbyte): Use FileStream_blockpositioning and
	  FileStreamLow_fill.
	(position_b_file): Use FileStream_blockpositioning.
	(position_file_end): Likewise. If no repositioning is needed, call
	  lseek only once.
	(make_buffered_stream): New function.
	(make_file_stream): Change calling convention. Rewritten to call
	  make_buffered_stream. Deal with buffered, handle_regular,
	  handle_fresh. Support :APPEND for unbuffered streams as well.
	(finish_output_file): Call fsync or close/open on regular files only.
	  If no repositioning is needed, don't call position_b_file.
	(close_file): Call HandleStreamLow_close(stream).
	(strm_pipe_in_other, strm_pipe_out_other): Remove macros.
	(strm_pipe_other): New macro.
	(low_close_pipe): New function.
	(close_pipe_in, close_pipe_out): Remove functions.
	(MAKE-PIPE-INPUT-STREAM): Call test_buffered_arg. Call either
	  make_unbuffered_stream or make_buffered_stream. Set the
	  HandleStreamLow_close function.
	(MAKE-PIPE-OUTPUT-STREAM): Likewise.
	(MAKE-PIPE-IO-STREAM): Likewise.
	(low_close_socket): New function.
	(close_socket): Remove function.
	(SYSTEM::MAKE-SOCKET-STREAM): Set the HandleStreamLow_close
	  function.
	(b_socket_fill, b_socket_finish_flush): New functions.
	(SocketStream_init): New macro.
	(strm_twoway_socket_input, strm_twoway_socket_output): New macros.
	(low_close_socket_nop): New function.
	(make_socket_stream): Change signature. Call either
	  make_unbuffered_stream, or make_buffered_stream and allocate a
	  two-way-socket stream. Set the HandleStreamLow_close function.
	(SOCKET-SERVER): Deal with both strmtype_socket and
	  strmtype_twoway_scoket. Check that the stream argument is open.
	(SOCKET-ACCEPT, SOCKET-CONNECT): Call test_buffered_arg.
	(test_socket_stream): Optionally check that the stream argument is
	  open.
	(SOCKET-STREAM-PORT, SOCKET-STREAM-HOST): Update.
	(publish_host_data, SOCKET-STREAM-HANDLE): Update.
	(make_terminal_io): Remove the file positioning code, now done by
	  make_file_stream.
	(init_streamvars): Set the HandleStreamLow_close function.
	(STREAM-ELEMENT-TYPE, SYSTEM::SET-STREAM-ELEMENT-TYPE)
	(interactive_stream_p): Treat strmtype_twoway_socket.
	(stream_close): Treat pipes and sockets like file streams. Treat
	  strmtype_twoway_socket.
	(stream_listen, clear_input): Treat strmtype_twoway_socket.
	(finish_output, force_output, clear_output): Likewise.
	(get_line_position): Likewise.
	(stream_isbuffered): Treat pipes and sockets like file streams.
	  Treat strmtype_twoway_socket.
	* io.d (pr_stream): Print a "buffered"/"unbuffered" for pipes and
	  sockets as well. Treat strmtype_twoway_socket.
	* pathname.d (open_file): Change calling convention.
	(OPEN): Update.

1999-02-01  Sam Steingold  <sds@goems.com>

	* defs2.lsp (with-standard-io-syntax): set `*print-right-margin*'.

1999-01-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Split user1.lsp and user2.lsp into pieces.
	* init.lsp: Change loading order. First room.lsp and saveinitmem.lsp,
	  then the language stuff up to conditio.lsp, then the user interface
	  and all kinds of extensions.
	(cerror): Moved here from user1.lsp.
	* defs1.lsp (fbound-string): Moved here from user2.lsp.
	(*error-handler*): Moved here from user1.lsp.
	* room.lsp: New file.
	(room-format, room, %space1, %space2, %space, space-format)
	(space-tabulate): Moved here from user2.lsp.
	* savemem.lsp: New file.
	(%saveinitmem, saveinitmem): Moved here from user2.lsp.
	* compiler.lsp (*toplevel-environment*, *toplevel-denv*, eval-env):
	  Moved here from user1.lsp.
	* conditio.lsp (break): Integrate with non-CLCS code from user1.lsp.
	(*break-on-warnings*, batchmode-break-driver): Moved here from
	  user1.lsp.
	* keyboard.lsp: New file.
	(*keyboard-input*, with-keyboard, exec-with-keyboard): Moved here
	  from user1.lsp.
	* runprog.lsp: New file.
	(execute, run-shell-command, run-program): Moved here from
	  user2.lsp.
	* query.lsp: New file.
	(y-or-n-p, y-or-n, yes-or-no-p, yes-or-no): Moved here from
	  user1.lsp.
	* reploop.lsp: New file.
	(*prompt*, main-loop, break-loop, step et al.): Moved here from
	  user1.lsp.
	* dribble.lsp: New file.
	(dribble): Moved here from user2.lsp.
	* complete.lsp: New file.
	(completion): Moved here from user2.lsp.
	* describe.lsp: New file.
	(apropos-list, apropos, describe): Moved here from user2.lsp.
	* edit.lsp: New file.
	(*editor*, editor-name, editor-tempfile, edit-file, ed, uncompile):
	  Moved here from user2.lsp.
	* user1.lsp: Remove file.
	* user2.lsp: Remove file.
	* makemake.in (LPARTS): Update.
	* gettext/po/Makefile.devel (LSPSOURCES): Likewise.

1999-01-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Makefile.devel (win32msvc/makefile.msvc4, win32msvc/makefile.msvc5)
	(acorn/makefile.cc, acorn/makefile.gcc): Fix rule.

1999-01-29  Sam Steingold  <sds@goems.com>

	* spvw.d (print_banner): do not cut the copyright on narrow
	screens.

1999-01-28  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Mutable STREAM-ELEMENT-TYPE.
	* stream.d (fill_pseudofuns_unbuffered): New function.
	(make_unbuffered_stream): Call it. Always initialize lineno.
	(fill_pseudofuns_buffered): New function.
	(make_file_stream): Call it. Always initialize lineno.
	(SYSTEM::SET-STREAM-ELEMENT-TYPE): New function.
	* places.lsp (stream-element-type): New defsetf.

1999-01-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Treat pipe and socket streams like unbuffered file streams.
	* stream.d (check_unbuffered_eltype): New function.
	(strm_pipe_in_handle): Replace with strm_ihandle.
	(rd_ch_pipe_in, rd_ch_array_pipe_in, rd_by_pipe_in)
	(rd_by_array_pipe_in): Remove macros.
	(PipeStream_input_init): New macro.
	(close_pipe_in): Update.
	(listen_pipe_in): Remove macro.
	(MAKE-PIPE-INPUT-STREAM): Check the :ELEMENT-TYPE argument. Call
	  make_unbuffered_stream.
	(strm_pipe_out_handle): Replace with strm_ohandle.
	(wr_ch_pipe_out, wr_ch_array_pipe_out, wr_ss_pipe_out)
	(wr_by_pipe_out, wr_by_array_pipe_out): Remove macros.
	(pipe_low_finish_output, pipe_low_force_output)
	(pipe_low_clear_output): New functions.
	(PipeStream_output_init): New macro.
	(close_pipe_out): Update.
	(MAKE-PIPE-OUTPUT-STREAM): Check the :ELEMENT-TYPE argument. Call
	  make_unbuffered_stream.
	(MAKE-PIPE-IO-STREAM): Likewise.
	(socket_low_finish_output, socket_low_force_output)
	(socket_low_clear_output): Define always.
	(SocketStream_output_init): Use them in all cases.
	(SYS::MAKE-SOCKET-STREAM): Call make_unbuffered_stream.
	(make_socket_stream): Change signature. Call make_unbuffered_stream.
	(SOCKET-ACCEPT, SOCKET-CONNECT): Check the :ELEMENT-TYPE argument.
	(STREAM-ELEMENT-TYPE): Treat pipe and socket streams like file
	  streams.
	(stream_listen, clear_input, finish_output, force_output)
	(clear_output): Likewise.
	* pseudofun.d: Update.
	* io.d (pr_stream): For pipe and socket stream, print the element-type
	  as well.

1999-01-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_buffered_stream): Renamed from make_unbuffered_stream.
	  Change the calling convention. Don't call isatty. Don't store the
	  strm_field1/strm_field2 values. Don't call HandleStream_input_init,
	  HandleStream_output_init here. Don't add the stream to O(open_files).
	(make_file_stream): Update. Call isatty only for :INPUT or :IO
	  streams. Store the strm_field1/strm_field2 values here. Call
	  HandleStream_input_init, HandleStream_output_init here. Add the
	  stream to O(open_files).
	(init_streamvars): Update. Store the strm_field1/strm_field2 values
	  here. Call HandleStream_output_init here.

1999-01-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Simplify the element-type handling.
	* stream.d (eltype_kind, decoded_eltype): New types.
	(test_eltype_arg): Moved. Changed signature.
	(canon_eltype): New function.
	(strmtype_ch_file, strmtype_iu_file, strmtype_is_file): Remove
	  macros.
	(make_unbuffered_file_stream): Changed signature.
	(make_file_stream): Use a decoded_eltype. Call canon_eltype.
	(init_streamvars): Update.

1999-01-27  Sam Steingold  <sds@goems.com>

	* spvw.d (print_banner): updated copyright statements.
	(print_license): new function.
	(main): call print_banner and print_license.

1999-01-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (print_banner): Make the menorah more kosher.

1999-01-27  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (usage): Tweak message.

1999-01-26  Sam Steingold  <sds@goems.com>

	* Makefile.devel: do not use `utils/move-if-change'.
	* utils/move-if-change: Remove file.

1999-01-26  Sam Steingold  <sds@goems.com>

	MT-safe get_real_time:
	* time.d (get_real_time): take pointer argument; no internal
	statics.
	* lisparit.d: fix calls to `get_real_time'.
	* lispbibl.d: fix declaration of `get_real_time'.

1999-01-25  Sam Steingold  <sds@goems.com>

	* spvw.d (main): expanded --help, added --license, removed trailing
	whitespace.
	(print_banner): New function.
	(argv_license): New variable.
	(copyright_notice): Remove.

1999-01-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (strm_file_name, strm_file_truename, strm_file_handle)
	(strm_pipe_pid, strm_x11socket_connect, strm_socket_port)
	(strm_socket_host): Offset by 1.
	* stream.d (strm_bitbuffer): New macro, replaces strm_file_bitbuffer.
	(strm_isatty, strm_ihandle, strm_ohandle, strm_field1, strm_field2):
	  Offset by 1.
	(strm_field3): Remove macro.
	(strm_handle_extrafields_struct): New field bitsize.
	(HandleStream_bitsize): New macro, replaces FileStream_bitsize.
	(rd_by_iu_I, rd_by_is_I): Update.
	(wr_by_aux_ix): Renamed from wr_by_ix.
	(wr_by_ixu_file, wr_by_ixs_file): Update.
	(rd_by_aux_iax_handle, rd_by_iau_handle, rd_by_ias_handle): New
	  functions.
	(rd_by_iau8_handle): Renamed from rd_by_handle.
	(rd_by_array_iau8_handle): Renamed from rd_by_array_handle.
	(close_ihandle): Free the bitbuffer.
	(wr_by_aux_ia_handle, wr_by_iau_handle, wr_by_ias_handle): New
	  functions.
	(wr_by_iau8_handle): Renamed from wr_by_handle.
	(wr_by_array_iau8_handle): Renamed from wr_by_array_handle.
	(close_ohandle): Free the bitbuffer.
	(make_unbuffered_file_stream): Add arguments type, eltype_size.
	  Create a stream with proper element type, not (OR CHARACTER INTEGER).
	(strm_i_file_extrafields_struct): Remove field bitsize.
	(strm_file_bitbuffer, FileStream_bitsize): Remove macros.
	(position_i_file): Update.
	(rd_by_aux_iax_file): Renamed from rd_by_iax_file. Update.
	(rd_by_aux_ibx_file): Renamed from rd_by_ibx_file. Update.
	(rd_by_aux_icx_file): Renamed from rd_by_icx_file. Update.
	(rd_by_iau_file, rd_by_ias_file, rd_by_ibu_file, rd_by_ibs_file)
	(rd_by_icu_file, rd_by_ics_file): Update.
	(rd_by_iau8_file): New function, for symmetry with the unbuffered
	  case.
	(wr_by_aux_ia_file): Renamed from wr_by_ia. Update.
	(wr_by_aux_ib_file): Renamed from wr_by_ib. Update.
	(wr_by_aux_ic_file): Renamed from wr_by_ic. Update.
	(wr_by_iau_file, wr_by_ias_file, wr_by_ibu_file, wr_by_ibs_file)
	(wr_by_icu_file, wr_by_ics_file): Update.
	(wr_by_iau8_file): New function, for symmetry with the unbuffered
	  case.
	(position_file, position_file_end): Update.
	(make_file_stream): For the unbuffered case, accept any bitsize
	  which is a multiple of 8. Use {rd,wr}_by_iau8_file when possible.
	(strm_terminal_index, strm_terminal_outbuff): Change.
	(terminalcase): Update.
	(rd_by_pipe_in, rd_by_array_pipe_in): Update.
	(wr_by_pipe_out, wr_by_array_pipe_out): Update.
	(SYS::MAKE-SOCKET-STREAM, SYS::LISTEN-BYTE, test_n_bytes_args)
	(make_socket_stream, init_streamvars): Update.
	* pseudofun.d: Update accordingly.

	* stream.d (rd_by_*, wr_by_*): Move some functions.
	* pseudofun.d: Update accordingly.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Optimize read-byte and write-byte for integer streams of type ia.
	* stream.d (read_byte_array_b_file): Don't update the position.
	(write_byte_array_b_file): Likewise.
	(wr_ch_array_ch_file): Increment the position here.
	(rd_by_iu_I, rd_by_is_I): Assume the bitbuffer contents is in little
	  endian order.
	(rd_by_iax_file): Fill bitbuffer in little endian order. Use
	  read_byte_array_b_file for speed.
	(rd_by_icx_file): Fill bitbuffer in little endian order.
	(wr_by_ia): Fill bitbuffer in little endian order. Use
	  write_byte_array_b_file for speed.
	(wr_by_ic): Fill bitbuffer in little endian order.
	(wr_by_ixu_file, wr_by_ixs_file): Assume the bitbuffer contents is
	  in little endian order.
	(read_byte_array_iau8_file, write_byte_array_iau8_file): Increment
	  the position here.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (OPEN): Add keyword argument :BUFFERED.
	(SYS::OLD-OPEN): Temporary hack, in order to preserve binary
	  compatibility.
	* stream.d (MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Add keyword arguments :ELEMENT-TYPE,
	  :EXTERNAL-FORMAT, :BUFFERED.
	(SOCKET-ACCEPT, SOCKET-CONNECT): Likewise.
	* eval.d (FUNTAB): Replace OPEN with SYS::OLD-OPEN.
	* compiler.lsp (funtab): Likewise.
	(subr-info): Update.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_socket_stream): Fix a potential GC crash: host was
	  not GC-safe.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Prepare for making socket streams either binary or character, not both.
	* stream.d (SYS::LISTEN-BYTE): New function.
	* modules/clx/mit-clx/depdefs.lsp (:have-listen-byte): Define
	  conditionally.
	* modules/clx/mit-clx/dependent.lsp (buffer-read-default): Use
	  sys::listen-byte if available.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Handle-streams and socket-streams now use a byte-oriented low-level
	layer.
	* stream.d (clear_tty_input) [AMIGAOS]: Define.
	(strm_u_file_extrafields_struct): Add low-level function pointers.
	(FileStreamLow_read, FileStreamLow_listen)
	(FileStreamLow_clear_input, FileStreamLow_read_array)
	(FileStreamLow_write, FileStreamLow_write_array)
	(FileStreamLow_finish_output, FileStreamLow_force_output)
	(FileStreamLow_clear_output): New macros.
	(fehler_interrupt): New function.
	(file_low_read, file_low_listen, file_low_clear_input)
	(file_low_read_array): New functions.
	(rd_by_handle, rd_by_array_handle, rd_ch_handle, listen_handle)
	(clear_input_handle, rd_ch_array_handle): Rewritten from scratch.
	  Much nicer now that the ugly machine-dependent stuff is in the
	  low-level layer.
	(HandleStream_input_init, HandleStream_input_init_data): New macros.
	(file_low_write, file_low_write_array, file_low_finish_output)
	(file_low_force_output, file_low_clear_output): New functions.
	(wr_by_handle, wr_by_array_handle, wr_ch_handle, wr_ch_array_handle)
	(finish_output_handle, force_output_handle, clear_output_handle):
	  Rewritten from scratch. Much nicer too.
	(HandleStream_output_init): New macro.
	(make_unbuffered_file_stream, make_keyboard_stream)
	(make_terminal_stream_, MAKE-PIPE-INPUT-STREAM)
	(MAKE-PIPE-OUTPUT-STREAM, MAKE-PIPE-IO-STREAM): Use the
	  HandleStream_*_init macros.
	(socket_low_read, socket_low_listen, socket_low_clear_input)
	(socket_low_read_array) [WIN32_NATIVE]: New functions.
	(SocketStream_input_init): New macro.
	(socket_low_write, socket_low_write_array, socket_low_finish_output)
	(socket_low_force_output, socket_low_clear_output) [WIN32_NATIVE]:
	  New functions.
	(SocketStream_output_init): New macro.
	(rd_ch_socket, rd_ch_array_socket, wr_ch_socket, wr_ch_array_socket)
	(wr_ss_socket, rd_by_socket, rd_by_array_socket, wr_by_socket)
	(wr_by_array_socket): Remove functions.
	(listen_socket): Define as a macro.
	(rd_ch_x11socket, listen_x11socket, rd_ch_array_x11socket)
	(wr_ch_x11socket, wr_ch_array_x11socket, wr_ss_x11socket)
	(rd_by_x11socket, rd_by_array_x11socket, wr_by_x11socket)
	(wr_by_array_x11socket, close_x11socket): Remove macros.
	(SYS::MAKE-SOCKET-STREAM): Update. Use the HandleStream_*_init
	  macros.
	(test_n_bytes_args): Update.
	(SYS::READ-N-BYTES): Simplify by calling read_byte_array. Upon EOF,
	  issue an error message instead of endless loop.
	(SYS::WRITE-N-BYTES): Simplify by calling write_byte_array.
	(make_socket_stream): Update. Use the HandleStream_*_init macros.
	(stream_close, stream_listen): Update.
	* pseudofun.d (*_x11socket, *_socket): Remove.

1999-01-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Introduce symbolic codes for the `listen' return value.
	* lispbibl.d (ls_avail, ls_eof, ls_wait): New macros.
	(ls_avail_p, ls_eof_p, ls_wait_p): New macros.
	* stream.d (listen_concat, listen_str_in, listen_buff_in)
	(listen_handle, listen_ch_file, listen_keyboard, listen_terminal)
	(listen_terminal2, listen_terminal3, listen_socket, stream_listen):
	  Use the new ls_* macros.
	* io.d (LISTEN, READ-CHAR-NO-HANG): Likewise.
	* debug.d (read_form): Likewise.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Merge handle streams and file streams. Add line number information to
	unbuffered file streams as well.
	* lispbibl.d (strmtype_handle): Remove enum value.
	(if_strm_file_p): Remove macro.
	(stream_isbuffered): New declaration.
	* stream.d (strm_handle_extrafields_struct): New field lineno.
	(HandleStream_lineno): New macro.
	(rd_ch_handle, listen_handle, rd_ch_array_handle): When reading a
	  newline, increment lineno.
	(make_unbuffered_file_stream): Change the stream type from
	  strmtype_handle to strmtype_file. Initialize lineno.
	(strm_ch_file_extrafields_struct): Remove structure.
	(FileStream_lineno): Remove macro.
	(rd_ch_ch_file, rd_ch_array_ch_file, make_file_stream): Update.
	(SYS::FILE-STREAM-P): Update.
	(SYS::TERMINAL-RAW) [AMIGAOS]: Update.
	(STREAM-ELEMENT-TYPE, interactive_stream_p, stream_close)
	(stream_listen, clear_input, finish_output, force_output)
	(clear_output): Update.
	(FILE-POSITION): For unbuffered streams, return NIL, no error.
	(FILE-LENGTH): Likewise.
	(stream_isbuffered): New function.
	(stream_line_number): Update.
	* io.d (pr_stream): Update.
	* pathname.d (as_file_stream, openp): Update.
	* predtype.d (TYPE-OF, CLOS:CLASS-OF, heap_statistics_mapper): Update.

	Start merging handle-streams and file-streams.
	* lispbibl.d (strm_eltype, strm_file_handle): Change.
	* stream.d (strm_eltype, strm_isatty, strm_ihandle, strm_ohandle):
	  Change.
	(strm_buffer, strm_field1, strm_field2, strm_field3): New macros.
	(strm_handle_extrafields): New macro.
	(strm_handle_len): Change.
	(strm_handle_extrafields_struct, strm_u_file_extrafields_struct):
	  New structure types.
	(HandleStream_eltype, HandleStream_isatty, HandleStream_ihandle)
	(HandleStream_ohandle, HandleStream_buffered, FileStream_status)
	(FileStream_lastbyte, FileStream_rawp): New macros.
	(close_handle): Remove macro.
	(make_unbuffered_file_stream): Renamed from make_handle_stream.
	  Allocate room for an unbuffered handle stream. Initialize the
	  buffered, status, rawp fields.
	(strm_file_name, strm_file_truename, strm_file_handle)
	(strm_file_buffer, strm_file_bitbuffer): Change.
	(strm_file_extrafields, strm_file_length): Remove macros.
	(strm_file_extrafields_struct): Inherit from
	  strm_handle_extrafields_struct.
	(FileStream_buffstart, FileStream_eofindex, FileStream_index)
	(FileStream_modified, FileStream_position, FileStream_lineno)
	(FileStream_bitsize, FileStream_bitindex, FileStream_eofposition):
	  Update.
	(make_file_stream): Allocate room for a buffered handle stream.
	  Initialize the buffered field.
	(strm_keyboard_buffer, strm_keyboard_keytab, strm_keyboard_len):
	  Change.
	(strm_keyboard_xlen): New macro.
	(make_keyboard_stream): Allocate room for an unbuffered handle
	  stream. Initialize the buffered, status, rawp fields.
	(strm_terminal_inbuff, strm_terminal_index, strm_terminal_outbuff):
	  Change.
	(strm_terminal1_len, strm_terminal2_len, strm_terminal3_len): Remove
	  macros.
	(strm_terminal_len): New macro.
	(terminalcase): Rewritten.
	(make_terminal_stream_): Allocate room for an unbuffered handle
	  stream. Initialize the buffered, status, rawp fields.
	(SYS::TERMINAL-RAW) [AMIGAOS]: Update.
	(strm_pipe_pid): Change.
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Allocate room for an unbuffered handle
	  stream. Initialize the buffered, status, rawp fields.
	(strm_x11socket_connect): Change.
	(SYS::MAKE-SOCKET-STREAM): Allocate room for an unbuffered handle
	  stream. Initialize the buffered, status, rawp fields.
	(strm_socket_port, strm_socket_host): Change.
	(make_socket_stream): Allocate room for an unbuffered handle stream.
	  Initialize the buffered, status, rawp fields.
	(init_streamvars): Update.
	(stream_close): Call either close_ihandle or close_ohandle.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (regular_handle_p) [UNIX]: Treat block devices like regular
	  files.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d: Move the file-streams next to the handle-streams.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (make_file_stream): Change declaration and calling
	  convention.
	* stream.d (make_handle_stream): Change calling convention.
	(test_eltype_arg): New function.
	(make_file_stream): Change calling convention. Check the
	  :element-type argument here.
	(make_terminal_io, init_streamvars): Update.
	* pathname.d (open_file): Change calling convention.
	(OPEN): Update. Don't check the :element-type argument here.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Support for unbuffered file streams on all platforms.
	* lispbibl.d (HANDLES): Remove macro, assume it to be defined to 1.
	(case_strmtype_file): Remove macro.
	(if_strm_file_p): Update.
	* spvw_memfile.d (memflags): Assume HANDLES to be 1.
	* stream.d: Likewise.
	* pseudofun.d: Likewise.
	* io.d (pr_stream): Likewise.
	* predtype.d: Update.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (strmtype_ch_file, strmtype_iu_file, strmtype_is_file):
	  Remove enum values.
	(strmtype_file): New enum value.
	(strm_eltype): New stream field.
	(strm_file_name, strm_file_truename, strm_pipe_pid)
	(strm_x11socket_connect, strm_socket_port, strm_socket_host):
	  Offset by 1.
	(strm_ch_file_lineno): Remove obsolete macro.
	(if_strm_bfile_p): Remove macro.
	(case_strmtype_file): Update.
	(strmtype_ch_file, strmtype_iu_file, strmtype_is_file): Define for
	  the sake of make_file_stream.
	* stream.d (strm_eltype): New stream field.
	(strm_handle_rawp, strm_handle_len): Offset by 1.
	(make_handle_stream): Expect the element-type on the stack.
	(strm_file_name, strm_file_truename, strm_file_extrafields)
	(strm_file_length): Offset by 1.
	(make_file_stream): Construct and fill in the element-type.
	(strm_pipe_pid): Offset by 1.
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Update.
	(strm_x11socket_connect): Offset by 1.
	(SYS::MAKE-SOCKET-STREAM): Update.
	(strm_socket_port, strm_socket_host): Offset by 1.
	(make_socket_stream): Update.
	(init_streamvars): Pass element type to make_handle_stream.
	(STREAM-ELEMENT-TYPE): For strmtype_file and strmtype_handle,
	  fetch the strm_eltype field.
	(interactive_stream_p, stream_close, closed_all_files)
	(stream_listen, finish_output, force_output, clear_output)
	(check_open_file_stream, stream_line_number): Update.
	* io.d (pr_stream): Change printing of file and handle stream to
	  include buffered/unbuffered and the element-type.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (Stream): New fields strm_rd_by_array, strm_wr_by_array,
	  strm_rd_ch_array, strm_wr_ch_array.
	* stream.d (rd_by_array_Pseudofun, wr_by_array_Pseudofun)
	(rd_ch_array_Pseudofun, wr_ch_array_Pseudofun): New types.
	(rd_by_array, wr_by_array, rd_ch_array, wr_ch_array): New macros.
	(rd_by_error): Renamed from rd_by_dummy.
	(rd_by_array_error, rd_by_array_dummy): New functions.
	(wr_by_error): Renamed from wr_by_dummy.
	(wr_by_array_error, wr_by_array_dummy): New functions.
	(rd_ch_error): Renamed from rd_ch_dummy.
	(rd_ch_array_error, rd_ch_array_dummy): New functions.
	(wr_ch_error): Renamed from wr_ch_dummy.
	(wr_ch_array_error, wr_ch_array_dummy): New functions.
	(read_byte_array, write_byte_array, read_char_array)
	(write_char_array): Rewritten to call the stream's corresponding
	  pseudofunction.
	(close_dummys): Update.
	(rd_by_array_synonym, wr_by_array_synonym, rd_ch_array_synonym)
	(wr_ch_array_synonym): New functions.
	(make_synonym_stream): Update.
	(wr_by_array_broad0, wr_by_array_broad1, wr_ch_array_broad0)
	(wr_ch_array_broad1): New functions.
	(make_broadcast_stream): Update.
	(rd_by_array_concat, rd_ch_array_concat): New functions.
	(make_concatenated_stream): Update.
	(wr_by_array_twoway, wr_ch_array_twoway): New functions.
	(rd_by_array_twoway, rd_ch_array_twoway): New functions.
	(make_twoway_stream, make_echo_stream): Update.
	(rd_ch_array_str_in): New function.
	(MAKE-STRING-INPUT-STREAM): Update.
	(make_string_output_stream, SYSTEM::MAKE-STRING-PUSH-STREAM): Update.
	(make_pphelp_stream): Update.
	(MAKE-BUFFERED-INPUT-STREAM, MAKE-BUFFERED-OUTPUT-STREAM): Update.
	(MAKE-GENERIC-STREAM): Update.
	(rd_ch_array_handle, rd_by_array_handle, wr_by_array_handle): New
	  functions.
	(wr_ch_array_handle): Renamed from write_char_array_handle.
	(wr_ss_handle): Update.
	(wr_ch_array_handle_x): New macro.
	(make_handle_stream): Update.
	(rd_ch_keyboard) [NEXTAPP]: Update.
	(make_keyboard_stream, make_terminal_stream_, make_window): Update.
	(read_byte_array_b_file): New function.
	(rd_ch_array_ch_file): New function.
	(wr_ch_array_ch_file): Renamed from write_char_array_ch_file.
	(wr_ss_ch_file): Update.
	(read_byte_array_iau8_file): New macro.
	(write_byte_array_iau8_file): Update.
	(make_file_stream): Update.
	(make_printer_stream): Update.
	(rd_ch_array_pipe_in, rd_by_array_pipe_in): New macros.
	(MAKE-PIPE-INPUT-STREAM): Update.
	(wr_ch_array_pipe_out, wr_by_array_pipe_out): New macros.
	(MAKE-PIPE-OUTPUT-STREAM): Update.
	(MAKE-PIPE-IO-STREAM): Update.
	(rd_ch_array_socket): New function.
	(wr_ch_array_socket): Renamed from write_char_array_socket.
	(wr_ss_socket): Update.
	(rd_by_array_socket, wr_by_array_socket): New functions.
	(rd_ch_array_x11socket, wr_ch_array_x11socket, rd_by_array_x11socket)
	(wr_by_array_x11socket): New macros.
	(SYS::MAKE-SOCKET-STREAM, make_socket_stream): Update.
	* pseudofun.d: Update accordingly.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Implement weak-pointers.
	* lispbibl.d (Rectype_Weakpointer): New enum value.
	(Weakpointer): New type.
	(weakpointer_length, weakpointer_xlength): New macros.
	(TheWeakpointer, weakpointerp, allocate_weakpointer): New macros.
	* constobj.d (O(all_weakpointers)): New variable.
	(O(all_finalizers), O(pending_finalizers)): Initial value 0, not NIL.
	* spvw.d (init_object_tab_1): Initialize O(all_weakpointers),
	  O(all_finalizers), O(pending_finalizers) to 0.
	* spvw_update.d (update_weakpointers, update_weakpointers_mod): New
	  macros.
	* spvw_garcol.d (gar_col_normal): Walk O(all_weakpointers).
	  O(all_finalizers) and O(pending_finalizers) end with 0, not NIL.
	  Call update_weakpointers_mod.
	(gar_col_done): O(pending_finalizers) ends with 0, not NIL.
	(gar_col_compact, move_conses): Call update_weakpointers_mod.
	* spvw_memfile.d (savemem, loadmem): Call update_weakpointers.
	* record.d (MAKE-WEAK-POINTER, WEAK-POINTER-P, WEAK-POINTER-VALUE):
	  New functions.
	* io.d (pr_orecord): Treat Rectype_Weakpointer.
	* predtype.d (TYPE-OF, CLOS:CLASS-OF): Treat Rectype_Weakpointer.
	(enum_hs_weakpointer): New enum value.
	(heap_statistics_mapper): Treat Rectype_Weakpointer.
	* compiler.lsp (subr-info): Add make-weak-pointer, weak-pointer-p,
	  weak-pointer-value.
	* user2.lsp (describe): Treat WEAK-POINTER.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (gcinvariant_object_p) [TYPECODES]: New macro.
	* record.d (FINALIZE): No need to allocate a finalizer for an
	  eternally alive object.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_garcol.d (alive) [NO_TYPECODES]: Treat immediate values
	  correctly, instead of crashing.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (listen_handle) [WIN32]: When a keyboard event is pending,
	  read a character in order to test whether to return :INPUT-AVAILABLE
	  of :EOF.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (strm_concat_list2): Remove macro.
	(strm_concat_totallist): New macro.
	(rd_by_concat, rd_ch_concat, pk_ch_concat, listen_concat): Simplify.
	(make_concatenated_stream, CONCATENATED-STREAM-STREAMS): Simplify.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* debug.d (read_form): After EOF, call clear_input on istream, not on
	  the concatenated-stream. This fixes a strange REP loop behaviour on
	  Win32.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (main): If no memfile is specified, option "-norc" is
	  implied.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* comment5.d (main): Remove a gcc warning.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (strmtype_*): Change the order of stream types.
	* io.d (pr_stream): Likewise.
	* stream.d: Move the OS dependent stream stuff after the portable
	  stuff.
	(STREAM-ELEMENT-TYPE): Change the order of stream types.
	(interactive_stream_p, stream_close, stream_listen, clear_input)
	(finish_output, force_output, clear_output): Likewise.

1999-01-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Change the string element type from `uintB' to `chart' (an abstract
	equivalent of `cint').
	* lispbibl.d (OBJECT_STRUCT): Define macro.
	(chart): New type.
	(as_cint, as_chart): New macros.
	(code_char, char_code): Convert from/to chart now, instead of cint.
	(chareq, charlt, chargt): New macros.
	(ascii, ascii_char): New macros.
	(sstring_): Change element type to `chart'.
	(with_string_0, with_sstring_0, with_string, with_sstring): Update.
	(ssstring_push_extend): Change declaration.
	(up_case, down_case, alphanumericp, graphic_char_p, unpack_string)
	(char_name, test_string_limits, nstring_upcase, nstring_downcase)
	(nstring_capitalize): Likewise.
	(write_ascii_char): Update.
	(read_char_array, write_char_array): Change delaration.
	* genclisph.d (chart): New type.
	(as_cint, as_chart): New macros.
	(code_char, char_code): Convert from/to chart now, instead of cint.
	* spvw.d (make_string, string_to_asciz, main): Update.
	* spvw_objsize.d (size_sstring): Update.
	* charstrg.d (up_case, down_case, alphap, alphanumericp)
	(graphic_char_p, unpack_string, string_gleich, string_equal)
	(copy_string, coerce_char, char_name, STANDARD-CHAR-P, UPPER-CASE-P)
	(LOWER-CASE-P, BOTH_CASE-P, DIGIT-CHAR-P, CHAR-CODE, CODE-CHAR)
	(DIGIT-CHAR, CHAR-INT, INT-CHAR, test_index_arg, CHAR, SCHAR)
	(SYSTEM::STORE-CHAR, SYSTEM::STORE-SCHAR, test_string_limits)
	(test_1_stringsym_limits, test_2_stringsym_limits, string_eqcomp)
	(string_comp, STRING=, STRING/=, STRING<, STRING>, STRING<=)
	(STRING>=, string_eqcomp_ci, string_comp_ci, STRING-EQUAL)
	(STRING-NOT-EQUAL, STRING-LESSP, STRING-GREATERP)
	(STRING-NOT-GREATERP, STRING-NOT-LESSP, string_search)
	(SYS::SEARCH-STRING=, SYS::SEARCH-STRING-EQUAL, MAKE-STRING)
	(nstring_upcase, NSTRING-UPCASE, STRING-UPCASE, nstring_downcase)
	(NSTRING-DOWNCASE, STRING-DOWNCASE, nstring_capitalize)
	(NSTRING-CAPITALIZE, STRING-CAPITALIZE, subsstring, SUBSTRING)
	(string_concat): Update
	* io.d (RM_anzahl, DRM_anzahl): Remove, replace with char_code_limit.
	(allocate_syntax_table, syntax_table_get, syntax_table_put): New
	  macros.
	(allocate_perchar_table, perchar_table_get, perchar_table_put)
	(copy_perchar_table): New macros.
	(orig_syntax_table, orig_readtable, copy_readtable_contents)
	(copy_readtable, SET-SYNTAX-FROM-CHAR, SET-MACRO-CHARACTER)
	(GET-MACRO-CHARACTER, MAKE-DISPATCH-MACRO-CHARACTER)
	(test_disp_sub_char, SET-DISPATCH-MACRO-CHARACTER)
	(GET-DISPATCH-MACRO-CHARACTER, read_char_syntax, wpeek_char_syntax)
	(wpeek_char_eof, attribute_table): Update.
	(attribute_of): New macro.
	(read_token_1, token_info, test_potential_number_syntax)
	(test_number_syntax, upcase_token, case_convert_token, read_macro)
	(lpar_reader, line_comment_reader, comment_reader, char_reader)
	(radix_2, bit_vector_reader, vector_reader, hexziffer)
	(closure_reader, unix_executable_reader, READ-LINE, PARSE-INTEGER)
	(write_sstring_case, klammer_zu, pr_enter_1, pr_symbol_part)
	(pr_character, pr_sstring_ab, pr_list_splice, pr_list_nsplice)
	(pr_sbvector_ab): Update.
	* stream.d (wr_ss_dummy, wr_ss_dummy_nogc, wr_ss_lpos, write_char)
	(rd_ch_handle, listen_handle, wr_ch_handle, write_char_array_handle)
	(key_event): Update.
	(key_ascii, key_special): New macros.
	(listen_keyboard, rd_ch_keyboard, add_keybinding): Update.
	(keybinding): Take only one argument.
	(make_keyboard_stream, lisp_completion, rd_ch_terminal)
	(rd_ch_terminal1, rd_ch_terminal2, rd_ch_terminal3, wr_ch_terminal3)
	(wr_ss_terminal3, wr_ch_window, rd_ch_ch_file, wr_ch_ch_file)
	(write_char_array_ch_file, rd_ch_str_in, wr_ss_str_out)
	(wr_ch_pphelp, wr_ss_pphelp, rd_ch_buff_in, wr_ch_buff_out)
	(wr_ch_printer, rd_ch_socket, listen_socket, wr_ch_socket)
	(write_char_array_socket, read_char_array, write_char_array)
	(FILE-STRING-LENGTH): Update.
	* pathname.d (common_case, legal_logical_word_char, legal_hostchar)
	(test_optional_host, equal_pathchar, legal_namechar)
	(singlewild_char_p, slashp, parse_logical_word, all_digits)
	(parse_logical_pathnamestring, parse_name_or_type, split_name_type)
	(PARSE-NAMESTRING, legal_logical_word, legal_name_or_type)
	(legal_name, legal_type, MAKE-PATHNAME, has_wildcards)
	(has_word_wildcards, wildcard_match_ab, wildcard_diff_ab)
	(translate_nametype_aux, use_default_dir, OSdirnamestring, SHELL):
	  Update.
	* array.d (VECTOR-PUSH-EXTEND, ssstring_push_extend, ssstring_extend)
	(make_datenvektor): Update.
	* hashtabl.d (hashcode_string, hashcode4_char, hashcode4_vector_Char):
	  Update.
	* package.d (string_hashcode): Update.
	* predtype.d (equal, elt_compare_T_Char, elt_compare_Char_Char)
	(equalp): Update.
	* sequence.d (MAKE-SEQUENCE, READ-CHAR-SEQUENCE, WRITE-CHAR-SEQUENCE):
	  Update.
	* debug.d (read_form): Update.
	* error.d (write_errorstring): Update.
	* lisparit.d (read_float, print_integer, print_float, decimal_string):
	  Update.
	* intprint.d (DIGITS, UDS_to_DIGITS): Update.
	* intread.d (DIGITS_to_I): Update.
	* foreign.d (convert_from_foreign_array_fill, convert_from_foreign)
	(convert_to_foreign): Update.
	* affi.d (affi_call_argsa, SYSTEM::MEM-READ)
	(SYSTEM::MEM-WRITE-VECTOR): Update.

1999-01-21  Sam Steingold  <sds@goems.com>

	* user2.lsp (signature-to-list, arglist): new functions.
	(describe-signature): use `signature-to-list'.

1999-01-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	For being able to use a C++ compiler in place of a C compiler.
	* acgeneral.m4 (AC_HAVE_LIBRARY, AC_CHECK_SIZEOF): Declare `main' with
	  return type `int'.
	* acspecific.m4 (AC_PROG_CC_WORKS, AC_DIR_HEADER, AC_TYPE_GETGROUPS)
	(AC_FUNC_CLOSEDIR_VOID, AC_FUNC_FNMATCH, AC_FUNC_GETPGRP)
	(AC_FUNC_SETPGRP, AC_FUNC_VFORK, AC_FUNC_WAIT3, AC_FUNC_ALLOCA)
	(AC_FUNC_UTIME_NULL, AC_FUNC_STRCOLL, AC_FUNC_SETVBUF_REVERSED)
	(AC_FUNC_MEMCMP, AC_C_CHAR_UNSIGNED, AC_INT_16_BITS)
	(AC_LONG_64_BITS, AC_C_BIGENDIAN, AC_SYS_RESTARTABLE_SYSCALLS):
	  Likewise.
	* aclocal.m4 (CL_CC_WORKS, CL_CXX_WORKS, CL_SHELLARGS)
	(CL_PCC_STRUCT_RETURN, CL_SMALL_STRUCT_RETURN, CL_LONGLONG)
	(CL_LONGDOUBLE, CL_SIGNAL_REINSTALL, CL_SIGNAL_UNBLOCK)
	(CL_SIGNAL_BLOCK_OTHERS, CL_SIGACTION_REINSTALL)
	(CL_SIGACTION_UNBLOCK, CL_ELOOP, CL_IOCTL, CL_TIMES_CLOCK)
	(CL_ADDRESS_RANGE, CL_MMAP, CL_MPROTECT, CL_CODEEXEC, CL_SHM)
	(CL_SHM_RMID, CL_FILECHARSET, CL_CHAR_UNSIGNED)
	(CL_WORDS_LITTLEENDIAN): Likewise.

1999-01-18  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* acgeneral.m4, acspecific.m4: Upgrade to autoconf-2.13.
	* config.guess, config.sub: Likewise.
	* aclocal.m4 (CL_ALLOCA): Test for _MSC_VER and alloca being a macro.
	  Use ${ac_objext}.
	* lispbibl.d (alloca): Put _MSC_VER test before the others, conforming
	  with CL_ALLOCA.

1999-01-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (copyright_notice): Use a long string, because gcc stores an
	  array of strings in reverse order.

1999-01-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_garcol.d (gar_col_compact): Conditionalize declaration.

1999-01-12  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* intgcd.d (I_I_xgcd_I_I_I): Now really ensure the 2nd and 3rd value
	  are of minimum absolute value.

1999-01-15  Sam Steingold  <sds@goems.com>

	* clos.lsp (*gf-warn-on-replacing-method*): new variable.
	(std-add-method): use it.

1999-01-13  Sam Steingold  <sds@goems.com>

	* clos.lsp (*gf-warn-on-removing-all-methods*): new variable.
	(do-defgeneric): use it.
	(*warn-if-gf-already-called*): new variable.
	(warn-if-gf-already-called): use it.

1999-01-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (main): Option --version implies -norc.
	  A batch file argument implies -norc as well.

1999-01-10  Michael Somos  <somos@grail.cba.csuohio.edu>

	* spvw_garcol.d: Move the "#undef update_stackobj".

1999-01-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_FILECHARSET): Generate formula with &&-connected
	  terms enclosed in parentheses, to avoid gcc warning.
	* time.d (SYS::DEFAULT-TIME-ZONE): Add parentheses, to avoid gcc
	  warning.
	* intbyte.d (ldb_extract_test): Add braces, to avoid gcc warning.
	* spvw_circ.d (get_circ_mark): Likewise.

1999-01-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: (write_schar): Remove.
	(write_code_char, write_ascii_char): New macros.
	* debug.d: Update all callers of write_schar.
	* error.d: Likewise.
	* eval.d: Likewise.
	* io.d: Likewise.
	* lisparit.d: Likewise.
	* stream.d (wr_ss_dummy, wr_ss_dummy_nogc): Likewise.

1999-01-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (string_to_asciz, TheAsciz): ASCIZ strings are now
	  simple-bit-vectors, not strings.
	* genclisph.d (TheAsciz): Update.
	* spvw.d (string_to_asciz): Allocate a bit vector, not a string.
	* pathname.d (EXECUTE): Update, don't call string_concat.
	* stream.d (rd_ch_terminal3): Update.
	(finish_output_file): Use with_sstring_0 instead of TheAsciz.
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM)
	(MAKE-PIPE-IO-STREAM): Update.

1999-01-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	with_sstring and with_sstring_0 must not be called in a loop which
	is executed a lot of times, otherwise SP overflow danger.
	* pathname.d (subdirs): Change argument from char* to simple-string.
	(subfiles, directory_search_1subdir, directory_search_hashcode)
	(directory_search_direntry_ok, directory_search_scandir): New
	  functions, moved out of the body of directory_search.
	(allsubdirs, directory_search): Update.

	Minimize the use of heap-allocated ASCIZ strings.
	* constobj.d (O(null_string)): Remove.
	* spvw.d (init_object_tab): Update.
	* pathname.d (asciz_dir_to_pathname): Make a temporary copy in the
	  stack instead of destructively modifying the argument.
	(OSnamestring): Renamed from namestring_asciz. Now returns a simple-
	  string without trailing zero byte.
	(assure_dir_exists): Avoid destructive modifications of a string.
	  Use with_sstring_0 instead of TheAsciz.
	(default_directory) [AMIGAOS]: Release break_sem_4 in case of error.
	(assure_dir_exists) [AMIGAOS]: Likewise.
	(assure_dir_exists) [UNIX]: Allocate the readlink buffer in the
	  stack.
	(canonicalise_filename) [RISCOS]: Use with_sstring_0 instead of
	  TheAsciz.
	(canonicalise_dirname) [RISCOS]: Likewise.
	(prepare_create) [non-RISCOS]: Define as empty.
	(change_default): Use with_sstring_0 instead of TheAsciz.
	(file_exists): Use with_sstring_0.
	(directory_exists): Avoid destructive modifications of a string.
	  Use with_sstring_0 instead of TheAsciz.
	(DELETE-FILE): Use with_sstring_0 instead of TheAsciz.
	(rename_file): Likewise.
	(create_backup_file): New function.
	(open_file): Call it. Use with_sstring_0 instead of TheAsciz.
	(directory_search): Use with_sstring_0 instead of TheAsciz.
	(shorter_directory): Now returns a simple-string without trailing
	  zero byte.
	(MAKE-DIR, DELETE-DIR): Use with_sstring_0 instead of TheAsciz.
	(ENSURE-DIRECTORIES-EXIST, FILE-WRITE-DATE, FILE-AUTHOR): Likewise.
	(EXECUTE): Call string_to_asciz to compensate for assure_dir_exists
	  change.
	(SHELL): Use with_sstring_0 instead of TheAsciz.

	* pathname.d (PARSE-NAMESTRING): Don't create an ASCIZ string in the
	  heap. Use macro with_sstring_0 instead of TheAsciz.
	(OSdirnamestring): Renamed from OSnamestring.
	(assure_dir_exists, change_default, directory_exists)
	  [PATHNAME_AMIGAOS]: Use macro with_sstring_0 instead of TheAsciz.
	(stat_for_search): New function.
	(subdirs): Change argument from ASCIZ string to char*.
	(allsubdirs, directory_search): Use with_sstring_0.

	* lispbibl.d (with_sstring_0, with_sstring): New macros.

	* pathname.d (check_stat_directory): New macro.
	(directory_search): Use it.

	* pathname.d (READDIR_*): New macros.
	(subdirs, directory_search): Use them.

1999-01-07  Sam Steingold  <sds@goems.com>

	* clisp.spec: this is the first truly working version. (fixed
	doc files and full version installation).

1999-01-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* unix.d: Don't declare memset if it's a macro.
	* spvw.d: Likewise.
	* socket.d: Likewise.

1999-01-07  Sam Steingold  <sds@goems.com>

	* bindings/linuxlibc6/linux.lsp: commented out *gammaf?_*.

1999-01-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (create_new_file, open_input_file, open_output_file): New
	  functions.
	(open_file): Use them.

1999-01-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (write_byte_array_b_file): New function, renamed from
	  write_byte_array_iau8_file.
	(write_char_array_ch_file, write_byte_array_b_file): Use it.

1999-01-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Fix a compilation problem on new glibc2 systems.
	* aclocal.m4 (CL_FPU_CONTROL): Check for fpu_control_t too.
	* unixconf.h.in (HAVE_FPU_CONTROL_T): New macro.
	* spvw.d (main): Don't call __setfpucw if the control word can be
	  initialized statically.
	* unixaux.d: Initialize the control word statically if possible.

1999-01-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (lisplibdir): Change to $(libdir)/clisp.
	* _distmakefile (lisplibdir): Likewise.
	* clisp.spec: Change installation directory.

1999-01-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	When getwd and getcwd both exist, prefer getcwd.
	* aclocal.m4 (CL_GETWD): Remove macro.
	(CL_GETCWD): First, check for getcwd.
	* configure.in (CL_GETWD): Remove call.
	* unixconf.h.in (HAVE_GETWD): Remove.
	(HAVE_GETCWD): New macro.
	* unix.d: Test for HAVE_GETCWD, not HAVE_GETWD.
	* spvw_language.d (init_language): Revert last patch.

1999-01-04  Sam Steingold  <sds@goems.com>

	* socket.d (socket_getlocalname): declare return value to be
	pointer to host_data, not const char.

1999-01-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_CANONICAL_HOST): Set ac_aux_dir before the cache
	  check.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (subsstring): New declaration.
	* charstrg.d (subsstring): New function.
	* pathname.d (split_name_type, PARSE-NAMESTRING, wildcard_diff_ab)
	(translate_nametype_aux): Use it.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (make_ssbvector, ssbvector_push_extend): New
	  declarations.
	* array.d (make_ssbvector, ssbvector_push_extend): New functions.
	* io.d (get_buffers): The second buffer is a ssbvector.
	(read_token_1, test_potential_number_syntax, test_dots)
	(case_convert_token, read_internal): Likewise.
	(string_reader): Use the first buffer, not the second.
	(uninterned_reader): The second buffer is a ssbvector.
	(READ-LINE): Use the first buffer, not the second.
	(pr_symbol_part): The second buffer is a ssbvector.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (make_directory): Move function, make inline.
	(delete_directory, change_current_directory, delete_existing_file)
	(delete_file_if_exists, delete_file_before_rename)
	(rename_existing_file, rename_file_to_nonexisting): New functions.
	(change_default): Use change_current_directory.
	(access0): Make inline.
	(FILE_EXISTS_TRIVIAL): New macro.
	(DELETE-FILE): Use FILE_EXISTS_TRIVIAL and delete_file_if_exists.
	(rename_file): Use rename_file_to_nonexisting.
	(open_file): Use delete_file_before_rename, rename_existing_file,
	  delete_existing_file.
	(DELETE-DIR): Use delete_directory.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	allocate_handle can call GC!
	* stream.d (make_keyboard_stream, make_terminal_stream_)
	(finish_output_file): Call allocate_handle() at GC-safe moments.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* constsym.d (char-code-limit, base-char-code-limit): New symbols.
	* spvw.d (init_symbol_values): Initialize them.
	* init.lsp: export char-code-limit.
	* defs1.lsp (char-code-limit, base-char-code-limit): Remove variables.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (strm_file_buffer): A byte vector instead of a string.
	(b_file_finish_flush, b_file_nextbyte, b_file_eofbyte)
	(write_char_array_ch_file, write_byte_array_iau8_file): Access a
	  byte vector instead of a string.
	(make_file_stream): Allocate a byte vector instead of a string.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (decimal_string): New declaration.
	* lisparit.d (decimal_string): New function.
	(SYS::DECIMAL-STRING): Call it.
	* pathname.d (nametype_namestring_parts, version_diff): Likewise.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (stream_line_number): New declaration.
	* stream.d (stream_line_number): New function.
	(SYS::LINE-NUMBER): Call it.
	* io.d (read_delimited_list, pr_stream): Likewise.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Speed up exponentiation.
	* intmal.d (UDS_square_UDS): New macro.
	(square_2loop_down, square_2bigloop_down, I_square_I): New functions.
	(I_I_expt_I): Use I_square_I.
	* intsqrt.d (I_rootp): Use I_square_I.
	* rational.d (RA_square_RA): New function.
	* lfloat.d (LF_square_LF): New function.
	* flo_rest.d (SF_square_SF, FF_square_FF, DF_square_DF): New macros.
	(F_square_F): New functions.
	* realelem.d (R_square_R): New function.
	(R_I_expt_R): Use R_square_R.
	* realtran.d (pi_F_float_F): Use LF_square_LF.
	(GEN_F_atanx, GEN_F_sinx, R_cos_sin_R_R, F_expx_F, R_cosh_sinh_R_R):
	  Use F_square_F.
	* compelem.d (N_square_N): New function.
	(SFC_durch_SFC): Use SF_square_SF.
	(FFC_durch_FFC): Use FF_square_FF.
	(DFC_durch_DFC): Use DF_square_DF.
	(LFC_durch_LFC): Use LF_square_LF.
	(N_durch_N): Use RA_square_RA.
	(SF_SF_hypot_SF): Use SF_square_SF.
	(FF_FF_hypot_FF): Use FF_square_FF.
	(DF_DF_hypot_DF): Use DF_square_DF.
	(LF_LF_hypot_LF): Use LF_square_LF.
	(R_R_hypot_R): Use RA_square_RA.
	* comptran.d (N_I_expt_N): Use N_square_N.
	(R_R_atanh_R_R): Use R_square_R.
	(R_R_asinh_R_R): Use F_square_F, N_square_N.
	(N_acos_N, N_acosh_N): Use F_square_F.
	* lisparit.d (*): Call N_square_N for squaring.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	DEFSTRUCT with option :INCLUDE should not define accessors which were
	already defined in a superclass DEFSTRUCT.
	* init.lsp (remove-old-definitions): Also remprop
	  SYSTEM::DEFSTRUCT-READER.
	* places.lsp (define-setf-expander, defsetf): Also remprop
	  SYSTEM::DEFSTRUCT-WRITER.
	* defstruc.lsp (ds-make-accessors): One more argument. Check property
	  SYSTEM::DEFSTRUCT-READER.
	(ds-make-defsetfs): One more argument. Check property
	  SYSTEM::DEFSTRUCT-WRITER.
	(defstruct): Update.

1999-01-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* conditio.lsp: Export STYLE-WARNING.
	(STYLE-WARNING): New condition type.
	* defs3.lsp: Export STYLE-WARNING.
	* compiler.lsp (*style-warning-count*): New variable.
	(c-style-warn): New function.
	(ignore-check): Call c-style-warn instead of c-warn.
	(c-CASE): Likewise.
	(compile-lambda): Bind *style-warning-count*.
	(compile, compile-file): Bind *style-warning-count*. Return three
	  values depending on *style-warning-count*.

1999-01-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (I_to_uint8, I_to_sint8, I_to_uint16, I_to_sint16)
	(I_to_uint32, I_to_sint32): Define always.
	* predtype.d (elt_compare_T_T, elt_compare_T_Char, elt_compare_T_Bit)
	(elt_compare_T_2Bit, elt_compare_T_4Bit, elt_compare_T_8Bit)
	(elt_compare_T_16Bit, elt_compare_T_32Bit, elt_compare_Char_Char)
	(elt_compare_Bit_Bit, elt_compare_Bit_2Bit, elt_compare_Bit_4Bit)
	(elt_compare_Bit_8Bit, elt_compare_Bit_16Bit, elt_compare_Bit_32Bit)
	(elt_compare_2Bit_2Bit, elt_compare_2Bit_4Bit, elt_compare_2Bit_8Bit)
	(elt_compare_2Bit_16Bit, elt_compare_2Bit_32Bit)
	(elt_compare_4Bit_4Bit, elt_compare_4Bit_8Bit)
	(elt_compare_4Bit_16Bit, elt_compare_4Bit_32Bit)
	(elt_compare_8Bit_8Bit, elt_compare_8Bit_16Bit)
	(elt_compare_8Bit_32Bit, elt_compare_16Bit_16Bit)
	(elt_compare_16Bit_32Bit, elt_compare_32Bit_32Bit, elt_compare):
	  New functions.
	(equalp): Rewrite the comparison code for arrays, to ignore the
	  array element type.
	* realelem.d (hashcode4_uint32): New function.
	(hashcode4_uint4): New array.
	* hashtabl.d (hashcode4_string): Remove function.
	(hashcode4_char, hashcode4_vector_T, hashcode4_vector_Char)
	(hashcode4_vector_Bit, hashcode4_vector_2Bit, hashcode4_vector_4Bit)
	(hashcode4_vector_8Bit, hashcode4_vector_16Bit)
	(hashcode4_vector_32Bit, hashcode4_vector): New functions.
	(hashcode4_atom): For arrays, return a hash code independent of the
	  array element type. For characters, multi-dimensional arrays,
	  pathnames, and records, return a hash code consistent with EQUALP.

1999-01-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (host_match): Treat muster=NIL as wild.
	(device_match): Likewise.
	(nametype_match_aux): Renamed from nametype_match.
	(subdir_match): Adjust.
	(directory_match): Treat muster=(:RELATIVE) as wild.
	(nametype_match): New function.
	(version_match): Treat muster=NIL as wild.
	(host_diff): Treat muster=NIL as wild.
	(device_diff): Likewise. Produce NIL instead of "".
	(nametype_diff_aux): Renamed from nametype_diff. Produce NIL instead
	  of "".
	(subdir_diff): Adjust. Produce NIL instead of "".
	(directory_diff_ab): Produces lists prefixed with :DIRECTORY.
	(directory_diff): Treat muster=(:RELATIVE) as wild.
	(nametype_diff): New function.
	(version_diff): Treat muster=NIL as wild. Always produce a result.
	  Produce NIL instead of "".
	(translate_host): Treat muster=NIL as wild.
	(translate_device): Likewise. Accept NIL instead of "".
	(translate_nametype_aux): Renamed from translate_nametype. Accept
	  NIL instead of "".
	(translate_subdir): Adjust.
	(translate_directory): Treat muster=(:RELATIVE) as wild. Accept
	  lists prefixed with :DIRECTORY.
	(translate_nametype): New function.
	(translate_version): Treat muster=NIL as wild. Accept NIL instead of
	  "". Always consume an item.
	* defs1.lsp (set-logical-pathname-translations for SYS): Simplify.

1998-11-22  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* lispbibl.d (STRM_WR_SS): Assume to be 1.
	(PSEUDOFUNSS): Remove definition.
	* pseudofun.d: Use PSEUDOFUN instead of PSEUDOFUNSS.
	* array.d, io.d, stream.d, spvw_memfile.d: Assume STRM_WR_SS is 1.

1998-11-21  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	Avoid a Purify(TM) warning.
	* intbyte.d (ldb_extract): Only access newMSDptr[0] if really needed.

1998-12-31  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* defs1.lsp (union, nunion, intersection, nintersection)
	(set-difference, nset-difference): Rewrite to use iteration
	instead of recursion.

1998-12-31  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* loop.lsp (expand-loop): Fix bug introduced by 1998-12-21 patch.

1998-12-22  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* intgcd.d (I_I_xgcd_I_I_I): Ensure the 2nd and 3rd value are
	  normalized to be of minimum absolute value.

1998-12-22  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_IOCTL): Allow the second argument of ioctl to be of
	  type `void*'.
	* unixconf.h.in (IOCTL_ARGUMENT_T): New definition.
	* unix.d (ioctl, nonintr_ioctl): Change declarations.
	(IOCTL_ARGUMENT_T): New definition.
	* unixaux.d (nonintr_ioctl): Likewise.

1998-12-21  Sam Steingold  <sds@goems.com>

	* spvw_language.d (init_language): use `getcwd' instead of `getwd'.

1998-12-21  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* makemake.in: Don't remove full/* for DOS,OS/2, as it doesn't exist.
	  On Unix, create the full/ directory during `make installdirs'.

1998-12-21  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* stream.d (FILE-POSITION): Accept any integer >= 0, < 2^32, not only
	  fixnums.

1998-12-21  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* stream.d (SOCKET-SERVER, publish_host_data): Remove call to
	  undeclared function `bzero'. Pass 3rd argument to
	  `create_server_socket'.
	* socket.d (create_server_socket, socket_getpeername)
	(socket_getlocalname): Move to here.
	(create_server_socket): Port is passed as argument, not in hd->port.

1998-12-21  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* loop.lsp (expand-loop): Generalize 1998-11-05 patch: The FOR
	  FROM/TO/BY clauses can come in any order. Make sure the order of
	  evaluation is preserved.

1998-12-20  Sam Steingold  <sds@goems.com>

	* _clisp.c (main): accept an '-F' argument to run the full version
	of CLISP (with modules).
	* spvw.d (usage): mention -F.
	* makemake.in: install the full CLISP version too.
	* _distmakefile: ditto.

1998-12-18  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* makemake.in (clean7): Add "rm -f -r bindings clx queens regexp
	  wildcard".

1998-12-18  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* lispbibl.d (strm_len): Correct definition, was one too large if
	  not compiling with gcc.
	(stream_xlength, Stream_xlength): New macros.
	(allocate_stream): One more argument.
	* spvw_typealloc.d (allocate_stream): Likewise.
	* stream.d (make_handle_stream, make_keyboard_stream)
	(make_terminal_stream_, SYS::MAKE-WINDOW): One more argument to
	  `allocate-stream'.
	(strm_file_extrafields_struct, strm_ch_file_extrafields_struct)
	(strm_i_file_extrafields_struct): New structures.
	(strm_file_buffstart): Remove macro.
	(FileStream_buffstart): New macro.
	(strm_file_eofindex): Remove macro.
	(FileStream_eofindex, eofindex_all_valid, eofindex_all_invalid): New
	  macros.
	(strm_file_index): Remove macro.
	(FileStream_index): New macro.
	(modified_flag, set_modified_flag, reset_modified_flag): Remove
	  macros.
	(FileStream_modified): New macro.
	(strm_file_position): Remove macro.
	(FileStream_position): New macro.
	(strm_ch_file_lineno): Remove macro.
	(FileStream_lineno): New macro.
	(strm_file_bitsize): Remove macro.
	(FileStream_bitsize): New macro.
	(strm_file_bitindex): Remove macto.
	(FileStream_bitindex): New macro.
	(strm_file_eofposition): Remove macro.
	(FileStream_eofposition): New macro.
	(strm_file_buffer, strm_file_bitbuffer): Change.
	(b_file_finish_flush, b_file_half_flush, b_file_flush)
	(b_file_nextbyte, b_file_eofbyte, b_file_writebyte, position_b_file)
	(rd_ch_ch_file, write_b_file, write_char_array_ch_file)
	(position_i_file, rd_by_iax_file, rd_by_ibx_file, rd_by_icx_file)
	(wr_by_ia, wr_by_ib, wr_by_ic, wr_by_ixu_file, wr_by_ixs_file)
	(write_byte_array_iau8_file, position_file_start, position_file)
	(position_file_end): Use new macros.
	(make_file_stream): One more argument to `allocate_stream'. Use new
	  macros.
	(file_flush, finish_output_file, closed_file): Use new macros.
	(make_synonym_stream, make_broadcast_stream)
	(make_concatenated_stream, make_twoway_stream, make_echo_stream)
	(MAKE-STRING-INPUT-STREAM, make_string_output_stream)
	(SYSTEM::MAKE-STRING-PUSH-STREAM, make_pphelp_stream)
	(MAKE-BUFFERED-INPUT-STREAM, MAKE-BUFFERED-OUTPUT-STREAM)
	(make_printer_stream, MAKE-PIPE-INPUT-STREAM)
	(MAKE-PIPE-OUTPUT-STREAM, MAKE-PIPE-IO-STREAM)
	(SYS::MAKE-SOCKET-STREAM, make_socket_stream, MAKE-GENERIC-STREAM):
	  One more argument to `allocate_stream'.
	(STREAM-ELEMENT-TYPE, read_byte_array, write_byte_array)
	(read_char_array, FILE-POSITION, FILE-LENGTH, SYS::LINE-NUMBER):
	  Use new macros.
	* io.d (pr_stream): Adjust printing of character streams.

1998-12-18  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* makemake.in (echol): Partially revert the 1998-10-14 change. The
	  Openstep hack doesn't work on Solaris.

1998-12-16  Sam Steingold  <sds@goems.com>

	* bindings/linuxlibc6/linux.lsp: replaced _IO_std* with _IO_std*_.

1998-12-15  Bruno Haible  <haible@linuix.math.u-bordeaux.fr>

	* lispbibl.d (host_data): Adjust type definition to be valid C++.

1998-12-15  Sam Steingold  <sds@goems.com>

	* constsym.d: added `SOCKET-STREAM-LOCAL', renamed
	`SOCKET-STREAM-PEER-HOST' to `SOCKET-STREAM-PEER'.
	* subr.d: ditto.
	* socket.d (create_server_socket, socket_getpeername)
	(socket_getlocalname): use `host_data' structure instead of statics.
	(fill_hostname): new function (renamed from `ip_to_string').
	(socket_getlocalname): new function (renamed from `socket_getmyname').
	* stream.d (socket_server): use `host_data' structure.
	(publish_host_data): new function.
	(socket_stream_peer, socket_stream_local): use it.
	* _impnotes.txt, impnotes.html: document the changes.
	* lispbibl.d: added `typedef host_data'.

1998-12-15  Sam Steingold  <sds@goems.com>

	* makemake.in: added --fsstnd options `redhat' and `debian'.

1998-12-15  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure: Don't lndir modules/CVS over to src/CVS.
	* configure: Don't pass the --fsstnd argument to src/configure.

1998-12-11  Sam Steingold  <sds@goems.com>

	* socket.d (create_server_socket): take 2 arguments, pointer to
	unsigned int (port) and SOCKET.
	(ip_to_string): new function.
	(socket_getmyname): new function.
	* constsym.d: added `SOCKET-SERVER-HOST'.
	* subr.d: ditto.
	* io.d (pr_orecord): print host of `SOCKET-SERVER'.
	* lispbibl.d (struct *Socket_server): new field: host.
	(socket_stream_p): new predicate.
	* stream.d (socket_server): accept socket-stream as the optional
	argument.
	(socket_server_host): new function.

1998-12-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in (MODULES): New variables. Accept --with-module=MODULE
	  syntax.
	* configure: Update.

1998-11-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (read_byte_array, read_char_array): When reading from
	  handle-streams, use `full_read' not `read', because `full_read'
	  handles EFAULT gracefully.

1998-11-07  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (base_char_int_len, base_char_int_limit, bcint)
	(base_char_code_limit, base_char_p): New definitions.
	* charstrg.d (SYS::BASE-CHAR-P): New function.
	* predtype.d (TYPE-OF): May return [SIMPLE-]BASE-STRING instead of
	  [SIMPLE-]STRING, and BASE-CHAR instead of CHARACTER.
	(COERCE): Treat BASE-CHAR, BASE-STRING, SIMPLE-BASE-STRING.
	* sequence.d (valid_type): Treat BASE-STRING, SIMPLE-BASE-STRING.
	* defs1.lsp (base-char-code-limit): Define.
	* defs2.lsp (designator): Recognize (DESIGNATOR BASE-CHAR).
	* type.lsp: New types BASE-CHAR, EXTENDED-CHAR, BASE-STRING,
	  SIMPLE-BASE-STRING.
	(canonicalize-type): Force STANDARD-CHAR to be a subtype of
	  BASE-CHAR.
	* compiler.lsp (*declaration-types*): Add base-char, base-string,
	  extended-char, simple-base-string.
	(c-typep-alist1): Add base-string, simple-base-string.
	(c-typep-alist2): Add base-char, extended-char.
	(c-typep-alist3): Add base-string, simple-base-string.
	* init.lsp: Export base-char, base-string, extended-char,
	  simple-base-string.
	* defs3.lsp: Likewise.

1998-11-05  Sam Steingold  <sds@goems.com>

	* loop.lsp (expand-loop): allow `by' to precede `upto' &c.

1998-11-05  Sam Steingold  <sds@goems.com>

	* type.lsp (canonicalize-type): handle `SIGNED-BYTE' and
	  `UNSIGNED-BYTE', thus recognize them as subtypes of `INTEGER'.

1998-11-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Replace STRING-CHAR with CHARACTER.
	* array.d (eltype_code): No need to test for STRING-CHAR, the SUBTYPEP
	  test catches it. Test for subtype of CHARACTER, not STRING-CHAR.
	(datenvektor_store): Test for CHARACTER, not STRING-CHAR.
	(array_element_type): Return CHARACTER, not STRING-CHAR.
	(VECTOR-PUSH-EXTEND): Test for CHARACTER, not STRING-CHAR.
	(make_datenvektor): Likewise.
	* charstrg.d (coerce_char): Use code_char instead of int_char.
	(STANDARD-CHAR-P, GRAPHIC-CHAR-P): Use char_code instead of char_int.
	(STRING-CHAR-P): Always return T.
	(ALPHA-CHAR-P, UPPER-CASE-P, LOWER-CASE-P, BOTH-CASE-P, DIGIT-CHAR-P)
	(ALPHANUMERICP, CHAR-UPCASE, CHAR-DOWNCASE, CHAR-INT): Use char_code
	  instead of char_int.
	(INT-CHAR): Use code_char instead of int_char.
	(CHAR-NAME): Use char_code instead of char_int.
	(test_newchar_arg, test_stringsymchar_arg): Test for CHARACTER, not
	  STRING-CHAR.
	(MAKE-STRING): No need to test for STRING-CHAR, the SUBTYPEP test
	  catches it. Test for CHARACTER, not STRING-CHAR.
	* error.d (fehler_string_char): Remove, replaced by fehler_char.
	* foreign.d (convert_from_foreign_array_alloc): Make an array of
	  element type CHARACTER, not STRING-CHAR.
	(convert_to_foreign): Test for CHARACTER, not STRING-CHAR.
	* genclisph.d (main): Simplify code_char and char_code. Remove
	  string_char_p. Replace char_string_char by check_char.
	* io.d (SET-SYNTAX-FROM-CHAR, SET-MACRO-CHARACTER, GET-MACRO-CHARACTER)
	(MAKE-DISPATCH-MACRO-CHARACTER, test_disp_sub_char, read_char_syntax)
	(wpeek_char_syntax, wpeek_char_eof, read_macro): Test for CHARACTER,
	  not STRING-CHAR.
	(char_reader): Use code_char instead of int_char. Simplify.
	(array_reader): Use CHARACTER, not STRING-CHAR.
	(READ-DELIMITED-LIST, READ-LINE): Test for CHARACTER, not
	  STRING-CHAR.
	(pr_character): Use char_code instead of char_int.
	* lispbibl.d (char_int_len): Set to 8, not 16.
	(char_code_shift_c, char_code_len_c, char_code_mask_c): Remove.
	(char_code_limit, code_char, char_code): Simplify.
	(Atype_Char): Renamed from Atype_String_Char.
	(strmtype_ch_file): Remove.
	(strmtype_ch_file): Renamed from strmtype_sch_file.
	(string_char_p): Remove.
	(fehler_string_char): Remove declaration.
	(check_char): Replaces check_string_char.
	(read_char_array): Renamed from read_schar_array.
	(write_char_array): Renamed from write_schar_array.
	* pathname.d (OPEN): Accept element type CHARACTER, synonymous to
	  STRING-CHAR. No need to test for subtype of STRING-CHAR, subtype of
	  CHARACTER catches it.
	* predtype.d (COERCE): No need to check for STRING-CHAR after coercion
	  to CHARACTER.
	* stream.d (write_char): Use char_code instead of char_int.
	(fehler_wr_string_char): Remove.
	(wr_ch_handle): Test for CHARACTER, not STRING-CHAR.
	(write_char_array_handle): Renamed from write_schar_array_handle.
	(wr_ch_terminal, wr_ch_terminal3, wr_ch_window): Test for CHARACTER,
	  not STRING-CHAR.
	(char_size, rd_ch_ch_file, listen_ch_file, wr_ch_ch_file): Remove.
	(rd_ch_ch_file): Renamed from rd_ch_sch_file.
	(listen_ch_file): Renamed from listen_sch_file.
	(wr_ch_ch_file): Renamed from wr_ch_sch_file.
	(write_char_array_ch_file): Renamed from write_schar_array_sch_file.
	(wr_ss_ch_file): Renamed from wr_ss_sch_file.
	(position_file, position_file_end, make_file_stream): Simplify.
	(wr_ch_str_out): Test for CHARACTER, not STRING-CHAR.
	(MAKE-STRING-OUTPUT-STREAM): No need to test for STRING-CHAR, the
	  SUBTYPEP test catches it.
	(wr_ch_str_push, wr_ch_pphelp, wr_ch_buff_out, wr_ch_printer)
	(wr_ch_socket): Test for CHARACTER, not STRING-CHAR.
	(write_char_array_socket): Renamed from write_schar_array_socket.
	(STREAM-ELEMENT-TYPE): Return CHARACTER instead of STRING-CHAR.
	  For the keyboard stream, return T.
	(read_char_array): Renamed from read_schar_array. Test for
	  CHARACTER, not STRING-CHAR.
	(write_char_array): Renamed from write_schar_array.
	(FILE-STRING-LENGTH): Test for CHARACTER, not STRING-CHAR. Simplify.
	* compiler.lsp (c-typep-alist1): Add STRING-CHAR.
	(c-typep-alist2): Remove STRING-CHAR.
	* defs2.lsp (dispatch-reader): Test for CHARACTER, not STRING-CHAR.
	(read-sequence, write-sequence): Don't test for STRING-CHAR, that's
	  not a used stream element type any more.
	(designator): Use char-code-limit instead of char-int-limit.
	  Remove definition of type (DESIGNATOR STRING-CHAR).
	  Use CHARACTER instead of STRING-CHAR.
	* format.lsp (digit-string): Create with element type CHARACTER, not
	  STRING-CHAR.
	* init.lsp (load): Call open with element type CHARACTER, not
	  STRING-CHAR.
	* type.lsp (STRING-CHAR): Make synonymous to CHARACTER.
	(upgraded-array-element-type): No need to test for STRING-CHAR, the
	  SUBTYPEP test catches it. Return CHARACTER, not STRING-CHAR.
	(canonicalize-type): Simplify STANDARD-CHAR and STRING-CHAR.
	  Element type of SIMPLE-STRING and STRING is CHARACTER, not
	  STRING-CHAR.
	* user2.lsp (shell-quote): Create with element type CHARACTER, not
	  STRING-CHAR.

1998-11-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove font and bits attributes of characters.
	* lispbibl.d (char_bits_*, char_font_*, char_*_c): Remove definitions.
	* io.d (char_reader): Font must be 0, bitnames are not supported any
	  more.
	(pr_character): Remove support for font and bitnames.
	* constobj.d (charname_hyper_*): Remove extra character names for keys.
	(bitnamekw_*): Remove bitnames.
	* charstrg.d (charname_table_extra): Remove definition.
	(charname_table_codes): Remove extra characters.
	(name_char): Don't test for extra characters.
	(CHAR-BITS, CHAR-FONT, MAKE-CHAR): Remove functions.
	(test_font_arg, test_bits_arg, test_bitname_arg): Remove.
	(CODE-CHAR, DIGIT-CHAR): Remove the optional font and bits arguments.
	(CHAR-BIT, SET-CHAR-BIT): Remove functions.
	* eval.d (FUNTAB): Remove CHAR-BITS, CHAR-FONT, MAKE-CHAR, CHAR-BIT,
	  SET-CHAR-BIT.
	* compiler.lsp (funtab): Remove CHAR-BITS, CHAR-FONT, MAKE-CHAR,
	  CHAR-BIT, SET-CHAR-BIT.
	(subr-info): Remove CHAR-BITS, CHAR-FONT, MAKE-CHAR, CHAR-BIT,
	  SET-CHAR-BIT, update for CODE-CHAR, DIGIT-CHAR.
	(c-DIRECT-FUNCTION-CALL): Remove CHAR-BITS, CHAR-FONT, MAKE-CHAR,
	  CHAR-BIT.
	* format.lsp (format-character): Remove handling of font and bits.
	* user2.lsp (describe): Likewise.

	* xcharin.lsp: New file.
	* makemake.in (LPARTS): Add xcharin.
	* defs1.lsp (char-font-limit, char-bits-limit, char-int-limit)
	(char-control-bit, char-meta-bit, char-super-bit, char-hyper-bit):
	  Moved to xcharin.lsp.
	* init.lsp: Load xcharin.
	* defs3.lsp: Don't export COMMON, STRING-CHAR, CHAR-FONT-LIMIT,
	  CHAR-BITS-LIMIT, CHAR-CONTROL-BIT, CHAR-META-BIT, CHAR-SUPER-BIT,
	  CHAR-HYPER-BIT, STRING-CHAR-P, CHAR-BITS, CHAR-FONT, MAKE-CHAR,
	  INT-CHAR, CHAR-BIT, SET-CHAR-BIT.

	* stream.d (key_event): New structure type.
	(make_key_event): New function.
	(char_control_c, char_meta_c, char_super_c, char_hyper_c): Define.
	(scancode_table): Use key_event data.
	(listen_keyboard): Call make_key_event and make-char.
	(rd_ch_keyboard): Likewise.
	(add_keybinding): Renamed from keybinding.
	(keybinding): New macro.
	(make_keyboard_stream): Use key_event data.
	(wr_ch_terminal1): Leave a #error for Jorg to fix.

	* type.lsp (upgraded-array-element-type): Treat CHARACTER as synonym
	  of STRING-CHAR.
	* array.d (eltype_code): Likewise.

1998-10-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (MAKE-STRING-OUTPUT-STREAM): Replace optional argument by
	  keyword arguments :ELEMENT-TYPE and :LINE-POSITION.
	* compiler.lsp (subr-info): Update for MAKE-STRING-OUTPUT-STREAM.
	* format.lsp (format-case-conversion, format-justification)
	(formatter-main-1): Pass keywords to MAKE-STRING-OUTPUT-STREAM.
	* macros2.lsp (with-output-to-string): Add keyword argument
	  :ELEMENT-TYPE.

1998-10-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* charstrg.d (MAKE-STRING): Add keyword argument :ELEMENT-TYPE.
	* compiler.lsp (subr-info): Update for MAKE-STRING.

1998-10-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (OPEN): Add keyword argument :EXTERNAL-FORMAT.
	* stream.d (STREAM-EXTERNAL-FORMAT): New function.
	* eval.d (FUNTAB): Add stream-external-format.
	* compiler.lsp (funtab): Add stream-external-format.
	(subr-info): Update for OPEN and STREAM-EXTERNAL-FORMAT.
	* init.lsp: Export STREAM-EXTERNAL-FORMAT from package LISP.
	* defs3.lsp: Export STREAM-EXTERNAL-FORMAT from package COMMON-LISP.

1998-10-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* constobj.d (O(version)): Bump version number.

1998-10-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* editor.lsp: Remove file.
	* makemake.in (LPARTS): Adjust.

1998-10-22  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* charstrg.d (coerce_char): An integer is coercible to a character
	  only if *ansi* is false.
	* defs2.lsp (DESIGNATOR): Likewise.

1998-10-30  Sam Steingold  <sds@goems.com>

	* init.lsp (date-format): use ISO date/time format for English.

1998-10-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (main): Use `merge-pathnames' instead of explicit
	  `make-pathname'. Also make the #ifs consistent with _clisp.1.

1998-10-29  Sam Steingold  <sds@goems.com>

	* spvw.d (main): replace `load_rc_file' with explicit load.
	* user1.lsp: remove `load-rc-file'.
	* constsym.d: ditto.

1998-10-29  Sam Steingold  <sds@goems.com>

	* spvw.d (usage): new function; replace 'goto usage' with a call
	  to it, thus the exit code for "-h" and "--help" is 0 now.

1998-10-29  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: Keep "-norc" out of the localeflags.
	* user1.lsp (load-rc-file): Use `load'. Filename is OS dependent.
	(help): Don't mention Ctrl-D, it's Ctrl-Z on DOS, OS/2, Win32.
	* _clisp.1: Update accordingly.

1998-10-28  Sam Steingold  <sds@goems.com>

	* spvw.d (main): added a new command line option -norc; load
	  ~/.clisprc when it is not given.
	* _clisp.c (main): ditto.
	* makemake.in: give lisp.run options -norc on build
	* user1.lsp (load-rc-file): new function.
	(help): more verbose message.
	* _clisp.1: document it.

1998-10-27  Sam Steingold  <sds@goems.com>

	* configure: remind the user to edit config.lsp.
	* cfgacorn.lsp, cfgamiga.lsp, cfgdos.lsp:
	(machine-instance): init from $HOSTNAME.
	* cfgacorn.lsp, cfgamiga.lsp, cfgdos.lsp, cfgsunux.lsp, cfgunix.lsp:
	(short-site-name, long-site-name): init from $ORGANIZATION.
	  In both cases, when the environment variable is undefined, return
	  an instruction to edit `config.lsp'.

1998-10-23  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* time.d (SYS::DEFAULT-TIME-ZONE): Treat dates <= 1.1.1970 or
	  >= 1.1.2050 like 1.1.1970 or 1.1.2050, respectively.

1998-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (FILE-STRING-LENGTH): New function.
	* init.lsp: Export it from package LISP.
	* defs3.lsp: Export it from package COMMON-LISP.
	* compiler.lsp (subr-info): Add FILE-STRING-LENGTH.

1998-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Encode the "last read character has been pushed back" state of a
	stream in the strmflags, instead of in strm_rd_ch_last.
	* stream.d (strmflags_unread_bit_B, strmflags_unread_B): New defines.
	(pk_ch_dummy): Set the bit, unless the return value is eof_value.
	(read_char): Clear the bit.
	(unread_char): Set the bit.
	(peek_char): Test the bit.
	(close_dummys): Clear the bit.
	(rd_ch_handle for AMIGAOS): Set the bit before entering a break loop.
	(listen_handle): Set the bit when a character is available.
	(listen_keyboard): Likewise.
	(listen_socket): Likewise.
	(position_file_start, position_file, position_file_end): Clear the
	  bit.
	(SYSTEM::STRING-INPUT-STREAM-INDEX): Test the bit.
	(SYSTEM::BUFFERED-INPUT-STREAM-INDEX): Likewise.
	(pk_ch_generic): Simplify. Don't check for a character any more.
	(stream_listen): Test the bit.
	(clear_input): Clear the bit.
	(read_schar_array): Test and clear the bit.

1998-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* type.lsp (upgraded-array-element-type): Fix so that for
	  STANDARD-CHAR it returns STRING-CHAR.
	* array.d (eltype_code): Likewise.

1998-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (nonreturning): Remove definition.
	(nonreturning_function): Use __attribute__((__noreturn__)).
	* genclisph.d (main): Likewise.

1998-10-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* _clisp.c (main): New option "-a".
	* spvw.d (main): Likewise.
	(argv_ansi): New variable.
	* constsym.d (*ANSI*): New variable.
	* spvw.d (init_symbol_values): Initialize it.

1998-10-21  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* _distmakefile (CC): Set to "cc -Aa" on HP-UX, because "cc" is not
	  ANSI C compliant and doesn't grok `main' in clisp.c.
	(CC): Set to "gcc" on SunOS4, because the normal "cc" is not ANSI C
	  compliant.

1998-10-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* loop.lsp (expand-loop): Rework a little bit to improve the syntax
	  checking after `of-type' in sum/max/count.

1998-10-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* control.d (TAGBODY, GO): Allow NIL as GO tag.
	* compiler.lsp (c-TAGBODY, c-GO): Likewise.

1998-10-17  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* list.d (LDIFF): Allow dotted lists, like for TAILP.

1998-10-15  Sam Steingold  <sds@goems.com>

	* loop.lsp (expand-loop): fixed handling of `of-type' in
	sum/max/count.

1998-10-14  Leigh Smith  <leigh@antechinus.cs.uwa.oz.au>

	* makemake.in (echol): Use `cat', not `printf'.
	(echoline): Don't access $3 and $4 inside the loop.

1998-10-12  Sam Steingold  <sds@goems.com>

	* utils/modprep.d: #include <errno.h>.

1998-10-11  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* utils/modprep.d: New file.
	* makemake.in: Build it.
	* genclisp.d: Define DEFMODULE, DEFUN, DEFVAR, for use by modules.

1998-10-10  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (rd_ch_terminal3): Don't need to put newlines into the
	  prompt string when using newnewreadline.
	(xmalloc, xrealloc): Change declaration when using newnewreadline.

1998-10-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* configure, makemake.in: Add support for newnewreadline directory.

1998-10-08  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_keyboard_stream): Restore the handling of most keypad
	  keys in xterm, broken by the 1998-10-03 patch.

1998-10-09  Sam Steingold  <sds@goems.com>

	* spvw.d (init_symbol_values): define LISP:*PPRINT-FIRST-NEWLINE*.
	* io.d (pr_enter_1): use `pprint_first_newline' to determine
	whether to output a newline before the object.
	* constsym.d: new symbol LISP:*PPRINT-FIRST-NEWLINE*.
	* bindings/linuxlibc6/linux.lsp: do not include <stdlib.h>, fixed
	declaration of `lldiv', removed: `setkey', `crypt', `encrypt',
	`__pwdopen', `__pwdread', `__pwdalloc', `__pwdscan', `__grpopen',
	`__grpread', `__grpalloc', `__grpscan'.
	* foreign1.lsp (to-c-typedecl): more elaborate handling of `c-ptr',
	`c-ptr-null', `c-array-ptr' and `c-function'.
	* user1.lsp (prompt-index): removed; *prompt* modified accordingly.

1998-10-06  Sam Steingold  <sds@goems.com>

	* user1.lsp (package-short-name): respect `*print-case*'.
	(break-loop): add a space after "Break".
	(step-hook-fn): added a space after "Step nn".
	(prompt-index, prompt-new-package): Rewrite.
	(*command-index*, *home-package*): New variables.

1998-10-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lndir: Add code to perform the equivalent of "mkdir -p".
	(mkdirparent): New function.

1998-10-06  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* makemake.in: If SRCDIR is empty, emit "./lndir" instead of "lndir".

1998-10-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (STACK_reg, mv_count_reg, value1_reg, subr_self_reg):
	  Declare even if HAVE_SAVED_REGISTERS is not defined.

1998-10-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_keyboard_stream): Recognize the End key sequence
	  sent by the Linux console even when it is lacking from the termcap
	  entry. (The "kH" termcap entry apparently got lost during the
	  termcap -> terminfo/ncurses switch.)

1998-09-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (make_keyboard_stream): Recognize the XF86-3.3.2 xterm's
	  Home/End key sequences Esc [ H and Esc [ F. Recognize the SuSE-5.3
	  kvt's Home/End key sequences Esc O H and Esc O F.

1998-09-21  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* array.d (vectorof): New function.
	(VECTOR): Call it.
	* lispbibl.d (vectorof): New declaration.
	* genclisph.d (main): Declare vectorof.
	* predtype.d (statistics_statistics): Use vectorof.

1998-09-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* user1.lsp: Fix German message, broken by last patch.

1998-09-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* bytecode.html: New file.
	* compiler.lsp: Remove description of instruction set.

1998-09-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* condition.lsp (prompt-for-new-value): Change message, to be
	  consistent with prompt-for-new-value-string.
	(assert): Make more readable. Prefer `append' to `nconc'.

1998-09-11  Sam Steingold  <sds@goems.com>

	* conditio.lsp (prompt-for-new-value): returns a list now; works
	with multiple value places.
	(check-type): adopt for new semantics od `prompt-for-new-value'.
	(assert): work with multiple value places.

1998-09-10  Sam Steingold  <sds@goems.com>

	* user1.lsp (prompt-new-package): removed the `values' declaration.

1998-09-10  Sam Steingold  <sds@goems.com>

	* places.lsp (setf-VALUES-aux): replaced `get-setf-method' with
	`get-setf-expansion' therefore comply with SETF-OF-VALUES:ADD.

1998-09-09  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (init_object_tab): Put only keywords into *features*.
	* clos.lsp: Likewise. Don't export CLOS.
	* compiler.lsp: Likewise. Don't export COMPILER.
	* loop.lsp: Likewise.
	* editor.lsp: Likewise. Don't export EDITOR.
	* init.lsp: Don't import/export the contents of *features*.
	* io.d (interpret_feature): Search in *features* by EQ.
	(feature): Bind *package*.

1998-09-09  Sam Steingold  <sds@goems.com>

	* user1.lsp: replaced `*prompt-with-package*' with `*prompt*' with
	CMUCL's semantics.  Added `prompt-new-package', `prompt-index' and
	`package-short-name'.

1998-09-03  Sam Steingold  <sds@goems.com>

	* places.lsp (shiftf): fixed the return values, as well as the
	failed test setf.tst.

1998-09-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* pathname.d (legal_namechar): On DOS, accept more misc characters
	  as valid.

1998-09-02  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (const, __const): Define to empty when using gcc-2.7.x.

1998-09-01  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_mmap.d (mprotect): Declare with MPROTECT_CONST.
	* win32.d (MPROTECT_CONST): Define.

1998-08-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (init_object_tab:features_initstring): Replace CLTL1 by
	  CLTL2.

1998-08-31  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_garcol.d (gar_col_compact): Fix update_STACKs call.

1998-08-30  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* places.lsp: Fix German and French messages, broken by last patch.
	(define-setf-expander, get-setf-expansion): Change format of
	  SYSTEM::SETF-EXPANDER property list entry. Don't call
	  FUNCTION-SIGNATURE.
	(PUSH): Rewrite. Do not call COPY-TREE.
	(POP): Rewrite. Do not call COPY-TREE. Be sure to fetch the CARs
	  before the CDRs.
	(PUSHNEW): Rewrite. Do not call COPY-TREE.
	(SETF): Don't nreverse bindlist.
	(SHIFTF, ROTATEF): Don't call NREVERSE on some unknown piece of code.
	(SETF THE): Fix totally broken code.
	* defs3.lsp: Don't export `get-setf-method',
	  `get-setf-method-multiple-value', `define-setf-method' any more.

1998-07-29  Sam Steingold  <sds@goems.com>

	Implemented ANSI CL issue SETF-MULTIPLE-STORE-VARIABLES:ALLOW:
	* places.lsp (get-setf-method-multiple-value): renamed into
	  `get-setf-expansion'; made it treat multiple value `defsetf'
	  properly.
	(simple-assignment-p, simple-use-p): use `=' to compare numbers,
	  not `eql'.
	(push, pop, psetf, psetf, rotatef, shiftf, the): rewrote from
	  scratch to accept multiple value places.
	(define-setf-method): renamed into `define-setf-expander'.
	(defsetf): made it accept multiple values.
	(setf): minor code simplification.
	* init.lsp (export): added `get-setf-expansion' and
	  `define-setf-expander'.
	* defs3.lsp (export): added `get-setf-expansion' and
	  `define-setf-expander'.

1998-08-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Add a lot of `const' qualifiers.
	* spvw.d, spvw_memfile.d, spvw_sigwinch.d, spvw_multimap.d,
	  spvw_genera1.d, eval.d, io.d, stream.d, socket.d, array.d,
	  charstrg.d, hashtabl.d, list.d, sequence.d, package.d, debug.d,
	  time.d, lisparit.d, intelem.d, intgcd.d, int2adic.d, flo_konv.d,
	  foreign.d, graph.d, affi.d, unix.d, unixaux.d, genclisph.d: Likewise.

1998-08-03  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_NOWARN): Remove.
	* configure.in (CL_NOWARN): Remove.
	* unixconf.h.in (__nowarn__): Remove definition.
	* lispbibl.d (nowarn): Remove definition.
	* unix.d, acorn.d: Remove occurrences of `nowarn'.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_walk.d: New file.
	* spvw.d (map_heap_objects): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_memfile.d: New file.
	* spvw.d (memflags, memdump_header, memdump_page)
	(memdump_physpage_state, memdump_reloc_header, page_alignment)
	(WRITE_page_alignment, READ_page_alignment, savemem, loadmem_update)
	(loadmem_update_fsubr, loadmem, loadmem_from_handle): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_language.d: New file.
	* spvw.d (mysetenv, language, init_language_from, init_language)
	(cvgettext, clgettext, localized_string, localized_object): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_typealloc.d: New file.
	* spvw.d (allocate_cons, make_symbol, allocate_vector)
	(allocate_bit_vector, allocate_string, allocate_iarray)
	(allocate_srecord_, allocate_xrecord_, allocate_stream)
	(allocate_fpointer, allocate_handle, allocate_bignum)
	(allocate_ffloat, allocate_dfloat, allocate_lfloat, make_ratio)
	(make_complex): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_allocate.d: New file.
	* spvw.d (fehler_speicher_voll, error_speicher_voll, relax_reserve)
	(pointable_usable_test, mymalloc, make_space, make_space_gc)
	(allocate): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_garcol.d: New file.
	* spvw.d (gc_mark, mark_stack, gc_markphase, alive)
	(unmark_fixed_varobjects, gc_compact_cons_page, gc_morris1)
	(gc_morris2, gc_morris3, set_GCself, gc_sweep1_varobject_page)
	(update, move_aligned_p1_p2, gc_sweep2_varobject_page)
	(gc_unmarkcheck, nullobjcheck, free_some_unused_pages)
	(gar_col_normal, gar_col_done, free_page_later, free_delayed_pages)
	(gc_compact_from_varobject_page, gc_compact_from_cons_page)
	(gc_compact_heap, gar_col_compact, gar_col_simple, gar_col)
	(move_conses): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_sigsegv.d, spvw_sigcld.d, spvw_sigint.d, spvw_sigwinch.d: New
	  files.
	* spvw.d (gc_signalblock_on, gc_signalblock_off, interrupt_pending)
	(update_linelength, sigwinch_handler, install_sigcld_handler)
	(begin_want_sigcld, end_want_sigcld, interrupt_handler)
	(alarm_handler, sigsegv_handler_failed, sigsegv_handler)
	(install_segv_handler, stackoverflow_handler): Move out.
	(main): Call install_stackoverflow_handler, install_sigwinch_handler,
	  install_sigint_handler, install_segv_handler, install_sigcld_handler.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_gcstat.d: New file.
	* spvw.d (gc_count, gc_space, gc_time, gc_timer_on, gc_timer_off):
	  Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_genera1.d, spvw_genera2.d, spvw_genera3.d: New files.
	* spvw.d (xfree, xrealloc, prepare_old_generation, in_old_generation)
	(walk_physpage, walk_area, walk_physpage_, walk_area_)
	(update_old_generation, build_old_generation_cache)
	(rebuild_old_generation_cache, gc_cache_check, gc_overall_check)
	(save_gc_data): Move out.
	(gc_markphase): Call gc_mark_old_generation().
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_fault.d: New file.
	* spvw.d (physpagesize, physpageshift, handle_fault_result)
	(handle_mmap_fault, handle_read_fault, handle_readwrite_fault)
	(handle_fault, handle_fault_range, selfmade_mmap, xmprotect)
	(xmmprotect): Move out.
	(main): Call init_physpagesize().
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_mark.d: New file.
	* spvw.d (mark, unmark, marked, with_mark_bit, without_mark_bit):
	Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_update.d: New file.
	* spvw.d (aktualisiere_STACK, aktualisiere_subr_tab)
	(aktualisiere_symbol_tab, aktualisiere_object_tab, aktualisiere_tab)
	(aktualisiere_conspage_normal, aktualisiere_conses)
	(aktualisiere_page_normal, aktualisiere_varobject): Move out.
	(update): Renamed from aktualisiere.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_objsize.d: New file.
	* spvw.d (typecode_at, case_symbolwithflags, speicher_laenge)
	(Varobject_aligned_size, size_symbol, size_sbvector, size_sstring)
	(size_svector, size_iarray, size_srecord, size_xrecord, size_bignum)
	(size_ffloat, size_dfloat, size_lfloat, speicher_laengen)
	(init_speicher_laengen, var_speicher_laenge_, calc_speicher_laenge)
	(varobject_bytelength): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_space.d: New file.
	* spvw.d (static_space, used_space, free_space, recalc_space): Move
	  out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_page.d: New file.
	* spvw_heap.d: New file.
	* spvw_global.d: New file.
	* spvw.d (typecount, _Page, Page, Pages, Heap, oint_addr_relevant_len)
	(min_page_size_brutto, std_page_size, old_new_pointer)
	(physpage_state, heapcount, is_cons_heap, is_varobject_heap)
	(is_heap_containing_objects, is_unused_heap, map_heap)
	(for_each_cons_page, for_each_cons_page_reversed)
	(for_each_varobject_page, for_each_page, mem, RESERVE)
	(MINIMUM_SPACE, RESERVE_FOR_MALLOC, check_avl_consistency)
	(check_gc_consistency, check_gc_consistency_2)
	(check_pack_consistency): Move out.
	(memfile_handle, memfile_still_being_read): Move into the mem struct.
	(main): Call init_mem_heaptypes() and init_mem_heapnr_from_type().
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_singlemap.d: New file.
	* spvw.d (map_pagesize, initmap, prepare_zeromap, zeromap): Move out.
	(main): Call init_map_pagesize().
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_multimap.d: New file.
	* spvw.d (map_pagesize, MM_TYPECASES, combine, mm_types_count)
	(initmap, remember_mmap_interval, msync_mmap_intervals, fdmap)
	(zeromap, open_temp_fd, fdsave, close_temp_fd, open_shmid, idmap)
	(shmsave, close_shmid, open_mapid, map_mapid, close_mapid, multimap1)
	(done_mapid, exitmap, multimap): Move out.
	(main): Call init_map_pagesize() and use map_pagesize.
	(main): Don't close zero_fd, it might be needed in the case of
	  DYNAMIC_MODULES.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_mmap.d (mmap_zero_fd): Renamed from zero_fd.

1998-07-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_circ.d: New file.
	* spvw.d (mlbitmap, mlb_alloc, mlb_add, mlb_free, get_circ_global)
	(get_circ_mark, get_circ_unmark, get_circularities)
	(subst_circ_global, subst_circ_mark, subst_circ_unmark, subst_circ):
	  Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Remove support for immutable objects. It was limited to a small range
	of systems (those with good shared memory support), introduced a 16 MB
	limit on 32-bit machines, required specially compiled binaries, and
	added a lot of complexity to spvw.d, which is in the way now. Not
	worth it.
	* lispbibl.d: Remove IMMUTABLE support.
	(coerce_imm_ss): Remove declaration.
	* genclisph.d (main): Remove IMMUTABLE support.
	* spvw.d: Remove IMMUTABLE support.
	* hashtabl.d: Likewise.
	* io.d: Likewise.
	* list.d: Likewise.
	* stream.d: Remove strmflags_immut_bit_B.
	* package.d: Use coerce_ss instead of coerce_imm_ss.
	* constpack.d: Likewise.

1998-07-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* Makefile.devel, configure: Incorporate the sigsegv package.
	* lispbibl.d: Include sigsegv.h.
	  Rename CAN_HANDLE_WP_FAULT to HAVE_SIGSEGV_RECOVERY.
	  Use HAVE_STACK_OVERFLOW_RECOVERY.
	* spvw.d (install_segv_handler, catch_exception_raise)
	(exception_thread_main, sigsegv_handler, install_sigsegv_handler)
	(stack_overflow_handler): Remove all low-level, platform-dependent
	  stuff. Use the sigsegv package instead.
	(main): Call stackoverflow_install_handler.
	* unix.d: Remove CAN_HANDLE_WP_FAULT database, now part of the sigsegv
	  package.
	* win32.d: Likewise.
	* makemake.in: (USE_SIGSEGV, XCL_SIGSEGVLIB): New variables.

1998-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* aclocal.m4 (CL_MPROTECT, CL_CODEEXEC): Require CL_MALLOC.

1998-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_alloca.d: New file.
	* spvw.d (malloca_header, malloca_list, malloca, freea): Move out.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-20  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (cpu_is_68000, CPU_IS_68000, default_allocmemflag)
	(retry_allocmemflag, MemBlockHeader, allocmemblocks, allocmem)
	(freemem, stdin_handle, stdout_handle, orig_dir_lock, init_amiga)
	(exit_amiga): Move out.
	* amigaaux.d (cpu_is_68000, CPU_IS_68000, default_allocmemflag)
	(retry_allocmemflag, MemBlockHeader, allocmemblocks, allocmem)
	(freemem, stdin_handle, stdout_handle, orig_dir_lock, init_amiga)
	(exit_amiga): Move to here.
	(malloc, free): New functions.
	* amiga.d (default_allocmemflag, retry_allocmemflag, allocmem, freemem)
	(malloc, free): Declare.

1998-07-19  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (abort): Move to amigaaux.d.
	* amigaaux.d (abort): Moved here.
	* amiga.d (abort): Adjust comment.

1998-07-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Add a comment about CFLAGS.

1998-07-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Don't use CPU registers when compiling for MULTITHREAD,
	  for the moment.
	(SP_register, ASM_get_SP_register): Define.
	(SP): Use it.
	(thread): New structure.
	(thread_size, thread_objects_offset, thread_objects_anz, roughly_SP)
	(sp_to_thread): New macros.
	(current_thread): New function.
	(callback_saved_registers, STACK, saved_mv_count, saved_value1)
	(saved_subr_self, saved_STACK, SP_bound, STACK_bound, mv_count)
	(mv_space, value1, temp_mv_count, temp_value1, subr_self, aktenv)
	(unwind_protect_to_save, handler_args, inactive_handlers): Support
	  for MULTITHREAD.
	* eval.d (STACK, saved_STACK, mv_count, temp_mv_count, saved_mv_count)
	(temp_value1, saved_value1, subr_self, saved_subr_self): Move out to
	  spvw.d.
	(unwind_protect_to_save, handler_args, stack_range)
	(inactive_handlers): Move out to lispbibl.d and spvw.d.
	* spvw.d (STACK, saved_STACK, mv_count, temp_mv_count, saved_mv_count)
	(temp_value1, saved_value1, subr_self, saved_subr_self)
	(callback_saved_registers, SP_bound, STACK_bound, aktenv)
	(unwind_protect_to_save, handler_args, inactive_handlers): Define
	  all together here.
	(allthreads_lock, MAXNTHREADS, nthreads, allthreads, num_symvalues)
	(maxnum_symvalues): New definitions.
	(init_multithread, create_thread, delete_thread)
	(make_symvalue_perthread): New functions.
	(for_all_threadobjs, for_all_STACKs): Reimplement.
	(main): Call init_multithread and create_thread.

1998-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_mmap.d: New file.
	* spvw.d (getpagesize, initmap, prepare_zeromap, zeromap, filemap)
	(munmap, mprotect): Move out.
	(main): Call mmap_init_pagesize() and use mmap_pagesize.
	* makemake.in (SPVW_INCLUDES): Adjust.

1998-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_debug.d: New file.
	* spvw.d (asciz_out, hex_out_, dez_out_, asciz_out_s, asciz_out_ss)
	(asciz_out_aux_hex, asciz_out_aux_dez, asciz_out_1_, asciz_out_2_)
	(asciz_out_3_, mem_hex_out, object_out): Move out.
	* makemake.in: (SPVW_INCLUDES): Adjust.

1998-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw_module.d: New file.
	* spvw.d (main_module, last_module, init_modules_0, add_module)
	(for_modules, all_modules, all_other_modules): Move out.
	* makemake.in (SPVW_MODULES): New variable. Adjust.

1998-07-04  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (OS_error): Move declaration.
	(xthread.c): Move #include.

1998-06-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Make the *print-circle* subroutines multithread-safe.
	* spvw.d (mlb[0-6], mlbs[0-5], mlb_levels): New macros.
	(mlbitmap): New struct type.
	(mlb_alloc, mlb_expand, mlb_add, mlb_free): New functions.
	(get_circularities, get_circ_mark): New implementations for
	  MULTITHREAD.
	(subst_circ, subst_circ_mark): New implementations for MULTITHREAD.

1998-06-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* xthread.d: New file.
	* lispbibl.d: Include it if defined(MULTITHREAD).
	(_REENTRANT): Define if defined(MULTITHREAD).
	* makemake.in (OS_includes): Add xthread.
	* FILES.1: Update.
	* gettext/po/Makefile.devel (DSOURCES): Likewise.

1998-06-21  Gilbert Baumann  <unk6@rz.uni-karlsruhe.de>

	* impnotes.html: Fix a couple of syntax errors.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* screen.lsp (generic-stream-listen): Adapt return value.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defs1.lsp (load-logical-pathname-translations): Signal an error if
	  no translations were found.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* defs3.lsp (COMMON-LISP:IN-PACKAGE): New macro.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (OS_file_error, OS_filestream_error): New declarations.
	* errunix.d (OS_error_internal): New function, extracted from OS_error.
	(OS_error): Call it.
	(OS_file_error): New function.
	* erramiga.d (OS_error_internal): New function, extracted from OS_error.
	(OS_error): Call it.
	(OS_file_error): New function.
	* errwin32.d (OS_error_internal): New function, extracted from OS_error.
	(OS_error): Call it. Start with an optional end_system_call().
	(OS_file_error): New function.
	* errdjgpp.d (OS_error_internal): New function, extracted from OS_error.
	(OS_error): Call it.
	(OS_file_error): New function.
	* error.d (OS_filestream_error): New function.
	* spvw.d (savemem): Add missing end_system_call(). Call OS_file_error
	  instead of OS_error.
	* pathname.d (default_directory_of): Add pathname argument. Call
	  OS_file_error instead of OS_error.
	(use_default_dir): Change accordingly.
	(assure_dir_exists for DOS/OS2/Win32): Call OS_file_error instead of
	  OS_error.
	(directory_truename for AMIGAOS): Move end_system_call().
	(default_directory for AMIGAOS): Add missing end_system_call().
	(assure_dir_exists for AMIGAOS): Call OS_file_error instead of
	  OS_error.
	(assure_dir_exists for UNIX): Likewise.
	(canonicalise_dirname for RISCOS): Likewise.
	(assure_dir_exists_ for RISCOS): Likewise.
	(change_default for DOS/OS2/Win32): Likewise.
	(change_default for AMIGAOS): Likewise.
	(change_default for UNIX): Likewise.
	(change_default for RISCOS): Likewise.
	(file_exists): Force pathname to be in STACK_0.
	(access0 for Win32): Call OS_file_error instead of OS_error.
	(directory_exists): Likewise.
	(DELETE-FILE): Likewise.
	(rename_file): Adapt to changed file_exists(). Call OS_file_error
	  instead of OS_error.
	(open_file): Call OS_file_error instead of OS_error.
	(subdirs, directory_search): Likewise.
	(shorter_directory): Leave the pathname on the STACK.
	(make_directory): Force pathname to be in STACK_0. Call
	  OS_file_error instead of OS_error.
	(MAKE-DIR, DELETE-DIR, ENSURE-DIRECTORIES-EXIST): Change accordingly.
	  Call OS_file_error instead of OS_error.
	(FILE-WRITE-DATE): Call OS_filestream_error and OS_file_error instead
	  of OS_error.
	(FILE-AUTHOR): Call OS_file_error instead of OS_error.
	* stream.d (file_lseek): Call OS_filestream_error instead of OS_error.
	(b_file_finish_flush, b_file_nextbyte): Likewise.
	(finish_output_file, close_file): Likewise.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* package.d (unintern): Signal a continuable error of type
	  PACKAGE-ERROR instead of ERROR.
	(import, export, use_package, correct_packname): Likewise.
	(DELETE-PACKAGE): Likewise.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* error.d (SYS::CERROR-OF-TYPE): New function.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (coerce-to-condition): Don't signal an error if
	  there are arguments and the caller is CERROR.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (retry-loop): New argument expected-type. Signal an
	  error of type TYPE-ERROR.
	(ctypecase, ccase): Call case-expected-type.

1998-06-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* user2.lsp (describe): Don't mention STRUCTURE-OBJECT as type of
	  all structure objects.

1998-06-06  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* control.d (make_variable_frame): For LET, LET*, MULTIPLE-VALUE-BIND,
	  check that the variable is not a constant. For SYMBOL-MACROLET,
	  check that the variable is not proclaimed special.
	* init.lsp (%expand-form): For SYMBOL-MACROLET, check that the
	  variable is not proclaimed special and is not declared special
	  in the same binding.
	* compiler.lsp (c-SYMBOL-MACROLET): Likewise.

1998-06-04  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (Stream): New field strm_pk_ch.
	* stream.d (pk_ch_Pseudofun): New type.
	(pk_ch): New macro.
	(pk_ch_dummy): New function.
	(peek_char): Call the stream's pk_ch function.
	(close_dummys, make_handle_stream, make_keyboard_stream)
	(make_terminal_stream_, SCREEN:MAKE-WINDOW, make_file_stream)
	(make_synonym_stream, make_broadcast_stream, make_concatenated_stream)
	(make_twoway_stream, make_echo_stream, MAKE-STRING-INPUT-STREAM)
	(make_string_output_stream, SYS::MAKE-STRING-PUSH-STREAM)
	(make_pphelp_stream, MAKE-BUFFERED-INPUT-STREAM)
	(MAKE-BUFFERED-OUTPUT-STREAM, make_printer_stream)
	(MAKE-PIPE-INPUT-STREAM, MAKE-PIPE-OUTPUT-STREAM, MAKE-PIPE-IO-STREAM)
	(SYS::MAKE-SOCKET-STREAM, make_socket_stream, MAKE-GENERIC-STREAM):
	  Set the strm_pk_ch field.
	(pk_ch_synonym, pk_ch_concat, pk_ch_twoway, pk_ch_generic): New
	  functions.
	* pseudofun.d: Update.
	* gstream.lsp: Export GENERIC-STREAM-PEEK-CHAR.
	(generic-stream-peek-char): New generic function.

1998-06-03  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clos.lsp (slot-unbound): Signal SLOT-UNBOUND instead of ERROR.

1998-06-02  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* format.lsp (FORMAT-CALL-USER-FUNCTION): Renamed from FORMAT-SLASH.
	(format-parse-cs): Integrate format-get-symbol. Tweak error
	  messages. Use *common-lisp-user-package*. Don't push a symbol
	  directly on csd-parm-list.

1998-06-02  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (c-EVAL-WHEN): Treat (NOT :COMPILE-TOPLEVEL),
	  consistently with control.d.

1998-06-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* configure: Always pass --with-included-gettext to gettext/configure.
	 (Because some users have libintl.a installed and some don't,
	  therefore the fact that libintl.a is present must be ignored.)

1998-05-31  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (unbound-slot): New condition type. Export it.
	(unbound-slot-instance): New function. Export it.
	(simple-unbound-slot, simple-parse-error): New condition types.
	(%defclcs): Pass them.
	* init.lsp (unbound-slot): Export it.
	* defs3.lsp (unbound-slot, unbound-slot-instance): Export them.
	* lispbibl.d (conditiontype): Add unbound_slot and parse_error.
	* genclisph.d: Likewise.
	* constsym.d: Add them here too.
	* error.d (end_error): Treat unbound_slot.
	* array.d (ARRAY-DIMENSION): For out-of-range argument, signal
	  TYPE-ERROR instead of ERROR.
	(get_fill_pointer): For array without fill-pointer signal TYPE-ERROR
	  instead of ERROR.
	(ADJUST-ARRAY): Likewise.
	(SYS::VECTOR-INIT-START): For out-of-range argument, signal
	  TYPE-ERROR instead of ERROR.
	(SYS::VECTOR-FE-INIT-END): Likewise.
	* list.d (SYS::LIST-INIT-START): For out-of-range argument, signal
	  TYPE-ERROR instead of ERROR.
	(SYS::LIST-FE-INIT-END): Likewise.
	* sequence.d (valid_type): For an invalid sequence type, signal
	  TYPE-ERROR instead of ERROR.
	* defs2.lsp (recognizable-sequence-type-p): New function.
	* record.d (fehler_index): Add argument `limit'. For an invalid
	  index, signal TYPE-ERROR instead of ERROR.
	(test_index): Remove function.
	(record_up): Merge both checks of index into a single one.
	(structure_up): Likewise.
	(SYS::%STRUCTURE-REF): For an unbound slot, signal UNBOUND-SLOT
	  instead of error, and mention the slot's name in the error message.
	(SYS::GENERIC-FUNCTION-EFFECTIVE-METHOD-FUNCTION): For an invalid
	  argument, signal TYPE-ERROR instead of ERROR.
	(keyword_test): For an invalid keyword, signal KEYWORD-ERROR
	  instead of ERROR.
	(CLOS::%SHARED-INITIALIZE): For an invalid arg count, signal
	  PROGRAM-ERROR instead of ERROR.
	(CLOS::%REINITIALIZE-INSTANCE): Likewise.
	(CLOS::%INITIALIZE-INSTANCE): Likewise.
	(CLOS::%MAKE-INSTANCE): Likewise.
	* eval.d (progv): For a constant, signal PROGRAM-ERROR instead of
	  ERROR.
	(get_closure): For a constant used as variable, signal PROGRAM-ERROR
	  instead of ERROR.
	(coerce_function): Allow all function names, not only symbols.
	(fehler_key_badkw): Fix GC safety bug in previous patch.
	(eval1): For an invalid operator, signal SOURCE-PROGRAM-ERROR
	  instead of ERROR. Tweak error message.
	(apply): Correct treatment of (SETF symbol) bound to an FFI
	  function. For an invalid function, signal TYPE-ERROR instead of
	  ERROR. Tweak error message.
	(fehler_apply_dotted): Signal PROGRAM-ERROR instead of ERROR.
	(funcall): Correct treatment of (SETF symbol) bound to an FFI
	  function. For an invalid function, signal TYPE-ERROR instead of
	  ERROR. Tweak error message.
	(interpret_bytecode_.svref_kein_index): Signal TYPE-ERROR instead
	  of ERROR.
	* control.d (FUNCTION): Tweak error message.
	(COMPILER-LET): For a constant, signal PROGRAM-ERROR instead of
	  ERROR.
	(SYSTEM::KEYWORD-TEST): For an invalid arg count, signal
	  PROGRAM-ERROR instead of ERROR. For an invalid keyword, signal
	  KEYWORD-ERROR instead of ERROR.
	* symbol.d (Symbol_function_checked): For a macro, signal
	  UNDEFINED-FUNCTION instead of ERROR.
	(SYS::%PUTD): For an invalid argument, signal TYPE-ERROR instead
	  of ERROR.
	* stream.d (fehler_bad_integer): Signal STREAM-ERROR instead of ERROR.
	(wr_ch_terminal1): Likewise.
	(fehler_str_in_adjusted): Likewise.
	(SYSTEM::MAKE-STRING-PUSH-STREAM): For invalid argument, signal
	  TYPE-ERROR instead of ERROR.
	(rd_ch_buff_in): Signal STREAM-ERROR instead of ERROR.
	(check_open_file_stream): Follow synonym streams, and return the
	  resulting stream. Signal TYPE-ERROR instead of ERROR.
	(FILE-POSITION, FILE-LENGTH): Adjust appropriately.
	* pathname.d (test_optional_host): Signal PARSE-ERROR instead of
	  ERROR.
	(fehler_thing): Signal TYPE-ERROR instead of ERROR.
	(PARSE-NAMESTRING): Signal PARSE-ERROR instead of ERROR.
	* intelem.d (BN_ueberlauf): Signal ARITHMETIC-ERROR instead of ERROR.
	* intlog.d (ASH): Likewise.
	* intmal.d (mal_ueberlauf): Likewise.
	* intdiv.d (fehler_exquo): Likewise.
	* lfloat.d (fehler_LF_toolong): Likewise.

1998-05-31  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* acspecific.m4 (AC_PROG_CXX): Don't add "-O" to $CXX if it is
	  already present.

1998-05-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (INTERACTIVE-STREAM-P): Check for stream first.

1998-05-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* amiga.d: Assume <stdlib.h> is available.
	* fsubr.d (LISPSPECFORM_B): Assume ANSI C prototypes, remove support
	  for old C compilers.
	* subr.d (subr_norest_function_args, subr_rest_function_args):
	  Likewise.
	* genclisph.d (Lsuffix, ULsuffix, ULLsuffix, main): Likewise.
	* stream.d (redisplay_help, redisplay_line): Likewise.
	* unix.d (ioctl): Likewise.

1998-05-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* error.d (fehler_proper_list): New function.
	* lispbibl.d (fehler_proper_list): Declare it.
	* list.d (endp): Call it.
	* lispbibl.d (list_to_mv): Check for proper list.

1998-05-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (fehler_input_stream, fehler_output_stream): New functions.
	(test_input_stream, test_output_stream, test_input_stream_args)
	(test_output_stream_args): New macros.
	(MAKE-BROADCAST-STREAM, MAKE-CONCATENATED-STREAM)
	(MAKE-TWO-WAY-STREAM, MAKE-ECHO-STREAM): Use them.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* array.d (fehler_subscript_range): Signal TYPE-ERROR instead of
	  ERROR. Two more arguments.
	(fehler_index_range): Signal TYPE-ERROR instead of ERROR. One more
	  argument.
	(test_subscripts, test_index, ROW-MAJOR-AREF, SYS::ROW-MAJOR-STORE)
	(SYS::SET-FILL-POINTER): Update.
	* list.d (elt_up): Signal TYPE-ERROR instead of ERROR.
	* charstrg.d (fehler_cmp_exclusive, fehler_cmd_exclusive): Signal
	  TYPE-ERROR instead of ERROR. One more argument.
	(test_index): Update.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* eval.d (fehler_specialform, fehler_macro): Signal UNDEFINED-FUNCTION
	  instead of ERROR.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* error.d (fehler_lambda_expression): New function.
	* lispbibl.d (fehler_lambda_expression): Declare it.
	* eval.d (coerce_function): Accept symbols, but reject lambda
	  expressions.
	(apply, funcall): Reject lambda expressions.
	* symbol.d (SYS::%PUTD): Likewise.
	* sequence.d (seq_boolop): Check that predicate is a function
	  designator, and signal an error if not.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* eval.d (fehler_specialform, fehler_undefined): New functions.
	(eval1, apply, funcall, interpret_bytecode_:csf_unbound): Call them.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* eval.d (make_STACK_env): Move macro from here...
	* lispbibl.d (make_STACK_env): ... to here.
	* predtype.d (COERCE): When creating a function, give it the right
	  declaration environment, not NIL.

1998-01-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* list.d (endp): Signal TYPE-ERROR instead of ERROR.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defs3.lsp: Don't export COMMONP and COMPILER-LET.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defs1.lsp (char-int-limit): New constant.
	* defs2.lsp (designator): New type. Export it.
	* charstrg.d (CHARACTER): Signal a TYPE-ERROR instead of ERROR.
	* predtype.d (COERCE): Likewise.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* sequence.d (valid_type): Return the desired length on the stack.
	(fehler_seqtype_length): New function.
	(MAKE-SEQUENCE, coerce_sequence, CONCATENATE, MAP, MERGE): Update.
	  Compare desired and actual length.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defs2.lsp (stream-input-element-type, stream-output-element-type)
	(read-sequence, write-sequence): New functions.
	  Export read-sequence, write-sequence.
	* defs3.lsp: Export read-sequence, write-sequence.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (var): New slot `assignedp'.
	(*declaration-types*): New declaration `sys::read-only'.
	(process-declarations): Treat the `sys::read-only' declaration.
	  Return one more value.
	(*readonlys*): New variable.
	(ignore-check): Check whether `sys::read-only' declarations are
	  satisfied.
	(c-LAMBDABODY, c-LET/LET*, c-LOCALLY, c-MULTIPLE-VALUE-BIND)
	(c-SYMBOL-MACROLET, c-FUNCALL-INLINE): Bind *readonlys*.
	* macros2.lsp (with-input-from-string, with-open-file)
	(with-open-stream, with-output-to-string): Add READ-ONLY declaration.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (parse-error, reader-error): New classes.
	  Export PARSE-ERROR and READER-ERROR.
	* init.lsp: Export PARSE-ERROR and READER-ERROR.
	* defs3.lsp: Likewise.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* record.d (SLOT-VALUE): Return only the first return value of
	  SLOT-UNBOUND.
	(SYS::SET-SLOT-VALUE): Ignore the return values of SLOT-MISSING.
	(SLOT-BOUNDP, SLOT-MAKUNBOUND): Return only the first return value
	  of SLOT-MISSING.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lfloat.d (LF_decode): Declare a subexpression as possibly unused.

1998-08-14  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* affi.d (C_mem_write): accept Foreign-Pointer as address.
	* rexx.d (C_rexx_put): fixed ~S/~ typo.
	* pathname.d (AmigaOS C_shell): use NLstring instead of CRLFstring.

1998-08-24  Sam Steingold  <sds@gnu.org>

	* init.lsp: Export *PRINT-RIGHT-MARGIN*.
	* defs3.lsp: Likewise.

1998-08-14  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* rexx.d (C_rexx_put): :host argument stack arithmetic was
	  broken, renamed variables to hopefully avoid confusion.

1998-08-14  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* spvw.d (mymalloc): retry case not needed with !TYPECODES.

1998-08-05  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* pathname.d, amiga.d (C_shell): return command exit code,
	  better signal handling under AmigaOS using SystemTags().

1998-08-12  Bruno Haible  <haible@ilog.fr>

	* lispbibl.d (NO_TYPECODES): Don't define if alignment_long < 4.

1998-08-09  Bruno Haible  <haible@ilog.fr>

	* spvw.d (copyright_notice): Bump date to 1998.

1998-08-09  Joerg Hoehle  <hoehle@zeus.gmd.de>
	    Bruno Haible  <haible@ilog.fr>

	* lispbibl.d (S_help_): Change definition in the case of NO_TYPECODES
	  so that it can be used as an initializer for a static variable in
	  gcc-2.5.8.
	* genclisph.d (main): Likewise.

1998-08-08  Joerg Hoehle  <hoehle@tzd.telekom.de>

	* lispbibl.d (define) TYPECODES is default for MC68000.
	* spvw.d (version_string) added !TYPECODES recognition.
	(retry_allocmemflag) not needed with !TYPECODES.

1998-08-05  Joerg Hoehle  <hoehle@zeus.gmd.de>

	* lispbibl.d (SIXBIT_TYPECODES): Fix a collision between
	  case_symbolwithflags and other typecodes, introduced by the
	  NO_TYPECODES patches.
	* spvw.d (speicher_laenge): Remove overlapping case values.

1998-08-05  Bruno Haible  <haible@ilog.fr>

	* spvw.d (main): Leave more room between the executable and the heap,
	  for malloc(), if SUN4_29.

1998-08-05  Bruno Haible  <haible@ilog.fr>

	* debug.d (SYS::%ROOM): Don't assume that the byte counts fit into
	  fixnums.

1998-08-05  Joerg Hoehle  <hoehle@zeus.gmd.de>

	* affi.d (affi_nonzerop): Fix typo: BN_positivep.

1998-08-03  Bruno Haible  <haible@ilog.fr>

	* aclocal.m4 (CL_DYNLOAD): Check for const in dlsym declaration.
	* unixconf.h: Define DLSYM_CONST.
	* unix.d (dlsym): Use DLSYM_CONST.

1998-08-03  Bruno Haible  <haible@ilog.fr>

	* makemake.in (NOASM): Don't define on Solaris/x86.
	(ASM_FILTER): Fix so it works on Solaris/x86.

1998-08-01  Bruno Haible  <haible@ilog.fr>

	* lispbibl.d (C_CODE_ALIGNMENT): Define to 2 for HPPA.
	(make_machine_code, TheMachineCode): Special case for HPPA.
	* lispbibl.d (varobject_type): Workaround gcc-2.8.1 bug.

1998-08-01  Bruno Haible  <haible@ilog.fr>

	* aclocal.m4 (CL_RUSAGE): Prefer RUSAGE_WHO_T="int" to
	  RUSAGE_WHO_T="enum __rusage_who".

1998-08-01  Bruno Haible  <haible@ilog.fr>

	* makemake.in (DEEMA): Add _EMA_ in more places.

1998-08-01  Bruno Haible  <haible@ilog.fr>

	* lispbibl.d: Accept __unix__ as an alternative for __unix.

1998-08-01  Bruno Haible  <haible@ilog.fr>

	* clx/mit-clx/package.lsp: Shadow BOOLEAN and don't export it.

1998-07-31  Bruno Haible  <haible@ilog.fr>

	* control.d (make_variable_frame): Don't call Car(NIL).

1998-07-16  Sam Steingold  <sds@goems.com>

	* spvw.d, constsym.d: new symbol print_right_margin
	(ANSI CL's *print-right-margin*).
	* io.d (right_margin): New function.
	(klammer_zu, justify_end_eng, justify_end_weit): Use it.
	(pr_level): Turn into a macro.
	(write, write_to_string): added :right-margin.
	* subr.d (write, write_to_string): added :right-margin.
	* subrkw.d (write, write_to_string): added :right-margin.
	* constobj.d (version): bumped to 19980715.
	* compiler.lsp (subr-info): added :right-margin to write and
	  write_to_string;
	(c-eval-when-compile, compile-toplevel-form, finalize-coutput-file):
	  added `:right-margin 79' to the `write' calls.

1998-07-16  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* eval.d (get_closure): Don't call augment_decl_env with argument NIL.

1998-07-05  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (posfixnum_to_L, fixnum_to_L): Add a cast to avoid
	  compilation warnings.
	* aridecl.d (FN_value_mask): Likewise.
	* sfloat.d (SF_futruncate_SF): Likewise.
	* genclisph.d (main): Adjust.

1998-06-29  Sam Steingold  <sds@usa.net>

	* compiler.lsp (compile-file): in ANSI CL, compile-file is
	  required to return 3 values.

1998-06-26  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	Since keywordp is not called in funcall/apply/interpret_bytecode any
	more, it doesn't need to occupy a bit in the symbol flags.
	* lispbibl.d (keyword_bit_t, keyword_bit_f, keyword_bit_hf): Remove.
	(keywordp): Rewrite.
	* spvw.d (case_symbolwithflags): Remove cases with keyword_bit.
	* package.d (make_present): Don't set keyword_bit.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d: Define NO_TYPECODES by default for 32-bit machines.
	* configure: Don't pass option --with-wide to makemake.
	* makemake.in: Drop support for --with-wide.
	* clisp-link.in: Likewise.
	* _distmakefile: Likewise.
	* regexp/link.sh, regexp/Makefile.in: Likewise.
	* wildcard/link.sh, wildcard/Makefile.in: Likewise.
	* queens/link.sh, queens/Makefile: Likewise.
	* linuxlibc5/link.sh, linuxlibc5/Makefile: Likewise.
	* linuxlibc6/link.sh, linuxlibc6/Makefile: Likewise.
	* clx/mit-clx/link.sh, clx/mit-clx/Makefile.clisp: Likewise.
	* clx/new-clx/link.sh, clx/new-clx/Makefile: Likewise.
	* doc/module.txt, impnotes.html: Update.
	* _clisp.c: Ignore option -W.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* stream.d (finish_output_file): Fix typo.
	* makemake.in: For Win32, replace
	  "-I../ffcall/avcall -I../ffcall/callback" with "-I../callback".
	  For Unix, remove "-Iavcall -Icallback".
	* win32msvc/INSTALL: Simplify instructions.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	In the NO_TYPECODES model, add support for machine where the alignment
	of C functions is less than 4.
	* lispbibl.d (C_CODE_ALIGNMENT, log2_C_CODE_ALIGNMENT): New macros.
	(NO_TYPECODES): Remove CPU constraint.
	(make_machine_code): New macro.
	(TheMachineCode): New macro.
	(ThePseudofun): Use it.
	* spvw.d (verify_code_alignment): New macro.
	(fehler_code_alignment): New function.
	(init_symbol_functions): Call verify_code_alignment.
	* list.d (sublis_assoc): Use TheMachineCode instead of TheMachine.
	(SUBLIS, NSUBLIS): Use make_machine_code instead of make_machine.
	* stream.d (P): Likewise.

1998-06-25  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* lispbibl.d (Fsubr): Move the C code address from the recdata[] part
	  to the non-Lisp-object part.
	(fsubr_length): Reduce by 1.
	(fsubr_xlength): Define.
	(allocate_fsubr): Update accordingly.
	* misc.d (SYS::CODE-ADDRESS-OF): Drop TheMachine on fsubr->function.
	* eval.d (eval_fsubr): Likewise.
	* spvw.d (do_aktualisiere_record): If aktualisiere_fsubr_function is
	  TRUE and the object is an Fsubr, call the aktualisiere_fs_function
	  macro.
	(gar_col_normal): No need for aktualisiere_fsubr_function here.
	(gar_col_compact): Likewise.
	(move_conses): Likewise.
	(init_symbol_functions): Drop make_machine for fsubr->function.
	(memdump_reloc_header): Add support for relocation Fsubr code
	  addresses.
	(savemem): Likewise.
	(loadmem_aktualisiere): Don't look in old_fsubr_tab when updating
	  a machine pointer.
	(loadmem_aktualisiere_fsubr): New function.
	(loadmem_from_handle): During aktualisiere_varobjects or during
	  fast relocation phase, call loadmem_aktualisiere_fsubr.

1998-06-24  Bruno Haible  <bruno@linuix.math.u-bordeaux.fr>

	* spvw.d (make_ratio): Compute positivep(num) before doing the
	  memory allocation.
	* comptran.d (R_R_atanh_R_R): Do not call R_minusp on a non-GC-safe
	  object.
	* flo_rest.d (F_integer_decode_float_I_I_I): Likewise.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (pr_orecord): Reindent.
	* constobj.d (fpcontagion_warn_string): Translate.
	* macros1.lsp (do/do*-expand): Likewise.
	* macros2.lsp (parenthesize-keys et al.): Likewise.
	* conditio.lsp (parenthesize-keys et al.): Likewise.

1998-06-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* arilev1c.d (eqv_loop_up, nand_loop_up): Fix typo in declaration.

1998-06-20  Gilbert Baumann  <unk6@rz.uni-karlsruhe.de>

	* io.d (SYS::REAL-LISTEN): New function.

1998-06-15  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d: Remove the last vestiges of STDWIN.
	* configure: Likewise.
	* clx/new-clx/clx.f, clx/new-clx/e2d.c: Likewise.

1998-06-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (pr_enter_1, pr_enter_2, pr_enter): New functions, generalizing
	  prin1a, prin1b, prin1.
	(pr_external_1, pr_external_2): Moved.
	(pr_instance): Moved.
	(pr_structure_default): New function.
	(SYS::PRINT-STRUCTURE): Call it through pr_enter.
	(prin1a, prin1b): Remove functions.
	(prin1): Use pr_enter.

1998-07-08  Sam Steingold  <sds@goems.com>

	* array.d: fixed the grammar of some English messages.

1998-05-31  Pierpaolo Bernardi  <bernardp@cli.di.unipi.it>

	* macros2.lsp (with-output-to-string): The STRING parameter
	  now accept NIL as value (with the same meaning as if it were
	  unsupplied). {Old|New} behavior {was CLtL1|is ANSI} compliant.

1998-05-25  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d: Rename immediate_type_p to gcinvariant_type_p.
	* spvw.d: Update.

1998-05-24  Pierpaolo Bernardi  <bernardp@cli.di.unipi.it>

	* macros1.lsp (do/do*-expand): Barf on bad syntax.

1998-05-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* dbxtypes.d: Remove file.
	* makemake.in: Update.
	* gettext/po/Makefile.devel (DSOURCES): Update.

1998-05-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* windows.d, wintext.d, winstat.d, winmain.d, winaux.d: Remove files.
	* lispbibl.d, genclisph.d, msdos.d, makemake.in, spvw.d, pathname.d,
	  stream.d, pseudofun.d, time.d: Remove support for Windows 3.1.

1998-05-20  Sam Steingold  <sds@usa.net>

	* io.d (pr_orecord): print PATHNAME with #P syntax, as
	  per ANSI CL <PRINT-READABLY-BEHAVIOR:CLARIFY>;

1998-05-19  Sam Steingold  <sds@usa.net>

	Implement the new :execute, :load-toplevel and :compile-toplevel
	keywords for eval-when as synonyms for eval, load and compile
	respectively.  The symantics is old.
	* constsym.d: add :execute, :load-toplevel and :compile-toplevel
	  keywords.
	* control.d (eval_when): handle :execute and :compile-toplevel.
	* init.lsp (%expand-form, (%put '%expand 'EVAL-WHEN)): handle
	  :compile-toplevel.
	* compiler.lsp (c-EVAL-WHEN): handle the three new keywords as
	  synonyms to the old symbols.

1998-05-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* control.d (SPECIAL-OPERATOR-P): Renamed from SPECIAL-FORM-P.
	* eval.d (FUNTAB): Update.
	* compiler.lsp (funtab, subr-info): Update.
	(c-form-table, c-form, c-DIRECT-FUNCTION-CALL)
	(inline-callable-function-p, c-APPLY): Use SPECIAL-OPERATOR-P.
	(note-function-used): Generate a warning for SPECIAL-FORM-P.
	* init.lsp: Export both SPECIAL-OPERATOR-P and SPECIAL-FORM-P.
	(remove-old-definitions, %expand-form, defun): Use
	  SPECIAL-OPERATOR-P.
	* defs1.lsp (special-form-p): Define as an alias for
	  special-operator-p.
	* user2.lsp (fbound-string, describe): Use SPECIAL-OPERATOR-P.
	* trace.lsp (trace1): Use SPECIAL-OPERATOR-P.
	* defs3.lsp: Export SPECIAL-OPERATOR-P only.

1998-05-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* genclisph.d (main): Define sintB.

1998-05-16  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clx/new-clx/clx.f: Update to use the new macro names.

	* realtran.d (R_cos_sin_R_R): Shift a fixnum by oint_data_shift, not
	  oint_addr_shift.

	New type encoding scheme NO_TYPECODES.
	* lispbibl.d (TYPECODES): Define if NO_TYPECODES is not defined.
	(oint_type_*, oint_addr_*, oint_data_*): Provide alternative
	  definitions for no TYPECODES.
	(machine_bias, subr_bias, varobject_bias, cons_bias, immediate_bias)
	(nonimmediate_bias_mask, read_label_type, immediate_object_p)
	(gcinvariant_object_p): New macros.
	(fixnum_type, sfloat_type, char_type, system_type, sign_bit_o)
	(bignum_bit_o, type_data_object, type_zero_oint, garcol_bit_o):
	  Provide alternative definitions.
	(varobject_alignment): Must be at least 4 if no TYPECODES.
	(active_bit, dynam_bit, svar_bit, NO_symbolflags): Define if no
	  TYPECODES.
	(constant_bit_f, special_bit_f, keyword_bit_f): New macros.
	(SPVW_MIXED): Define if no TYPECODES.
	(case_mut_*): New macros.
	(_case_structure, _case_stream): Provide alternative definitions.
	(intWCsize, uintWC, sintWC): Provide alternative definitions.
	(VAROBJECT_HEADER, header_flags, constant_bit_hf, special_bit_hf)
	(keyword_bit_hf): Provide alternative definitions.
	(varobject_type, lrecord_tfl, srecord_tfl, xrecord_tfl): New macros.
	(record_, record_type, record_flags, record_flags_*): Provide
	  alternative definitions.
	(LRECORD_HEADER, lrecord_, Lrecord, lrecord_length): New definitions.
	(SRECORD_HEADER, srecord_length, XRECORD_HEADER, xrecord_length)
	(xrecord_xlength): Provide alternative definitions.
	(Rectype_Sbvector, Rectype_Sstring, Rectype_Svector, Rectype_mdarray)
	(Rectype_bvector, Rectype_string, Rectype_vector, Rectype_Bignum)
	(Rectype_Lfloat, Rectype_Dfloat, Rectype_Ffloat, Rectype_Symbol): New
	  enum values.
	(char_int, bignum_, bignum_length, lfloat_, lfloat_length): Provide
	  alternative definitions.
	(sarray_, sbvector_, sstring_, svector_): Use LRECORD_HEADER.
	(sarray_length): Use lrecord_length.
	(iarray_, iarray_rank, iarray_flags, iarray_flags_*, Array_type)
	(Array_type_*): Provide alternative definitions.
	(Codevec): Use LRECORD_HEADER.
	(make_read_label, read_label_integer_p, make_machine, The*): Provide
	  alternative definitions.
	(consp, mconsp, atomp, matomp): Provide alternative definitions.
	(varobjectp, immediate_number_p): New macros.
	(symbolp, numberp, vectorp, simplep, array_simplep, simple_vector_p)
	(general_vector_p, simple_string_p, stringp, simple_bit_vector_p)
	(bit_vector_p, byte_vector_p, general_byte_vector_p, arrayp)
	(mdarrayp, if_recordp, closurep, instancep, orecordp, charp, subrp)
	(framepointerp): Provide alternative definitions.
	(machinep, read_label_p, systemp): New macros.
	(if_realp, if_rationalp, integerp, fixnump, posfixnump, bignump):
	  Provide alternative definitions.
	(posbignump): New macro.
	(ratiop, floatp, short_float_p, single_float_p, double_float_p)
	(long_float_p, complexp, positivep): Provide alternative definitions.
	(case_Rectype_*_above): New macros.
	(R_sign): Provide alternative definition.
	(FN_sign, BN_sign, RT_sign, SF_sign, FF_sign, DF_sign, LF_sign): New
	  macros.
	(same_sign_p, N_floatp, N_integerp, R_rationalp, R_floatp, R_minusp)
	(RA_integerp, RA_ratiop, I_bignump, I_fixnump): Provide alternative
	  definitions.
	(FN_positivep, BN_positivep, I_I_bignums_p): New macros.
	(sint8_p, sint16_p, uint32_p, sint32_p, uint64_p, sint64_p): Use
	  the new macros.
	(allocate_srecord, allocate_xrecord, subr_tab_ptr_as_object)
	(S_help_): Provide alternative definitions.
	(FB7..FB1, make_framepointer, topofframe, uTheFramepointer)
	(framecode, fcint): Provide alternative definitions.
	(framebottomword): Add third argument.
	(framebottomword, finish_frame): Provide alternative definitions.
	(SAVE_REGISTERS, dynamic_bind): Use finish_frame.
	(finish_entry_frame): Update.
	* genclisph.d: Update.
	(SP): Move the asm string outside of the printf string.
	* spvw.d (symbol_tab_ptr_as_object): Provide alternative definition.
	(mem): heapnr_from_type only if TYPECODES.
	(size_ffloat, size_dfloat): Provide alternative definitions.
	(speicher_laenge): Provide alternative type dispatch.
	(varobject_bytelength): Use TheVarobject instead of pointable.
	(in_old_generation): Fix parenthesizing inside macro.
	(gc_mark): Rewrite using macros. Provide alternative type dispatch.
	(pointer_as_object, pointer_was_object): Provide alternative
	  definitions.
	(walk_area_iarray): Renamed from walk_area_array.
	(walk_area): Provide alternative definition.
	(alive): Provide alternative type dispatch.
	(gc_morris2, gc_morris3): Provide alternative body.
	(set_GCself): Provide alternative definition.
	(gc_sweep1_varobject_page): Some modifications if no TYPECODES.
	(aktualisiere, aktualisiere_varobject): Provide alternative
	  definitions.
	(build_old_generation_cache): Provide alternative type dispatch.
	(build_old_generation_cache:cache_at): Provide alternative
	  definition.
	(gar_col_normal): Remove unused variable.
	(gc_compact_from_varobject_page): Some modifications if no TYPECODES.
	(move_conses:aktualisiere): Provide alternative definition.
	(pointable_usable_test): Always TRUE if no TYPECODES.
	(bias_type_pointer_object): New macro.
	(allocate_TRUE, allocate_FALSE): Use it.
	(allocate_symbol, allocate_vector, allocate_bit_vector)
	(allocate_string, allocate_iarray): Provide alternative body.
	(allocate_srecord_, allocate_xrecord_): Provide alternative
	  definitions.
	(allocate_bignum, allocate_ffloat, allocate_dfloat, allocate_lfloat)
	(make_ratio, make_complex): Provide alternative body.
	(get_circ_mark, get_circ_unmark, subst, subst_circ_mark)
	(subst_circ_unmark): Provide alternative type dispatch.
	(map_heap_objects:varobject_typecode_at,cons_typecode_at)
	(with_typecode): Provide alternative definitions.
	(init_symbol_tab_1): Some modifications if no TYPECODES.
	(main): Initialize mem.heapnr_from_type only if TYPECODES.
	(main): If no TYPECODES, use only a 2^(oint_addr_len-1) address
	  range.
	(memflags): Include the settings of WIDE and TYPECODES.
	(memdump_header, savemem): No _cons_type etc. if no TYPECODES.
	(addr_mask, offset_pages_len): Fix for oint_addr_len==32.
	(loadmem_aktualisiere): Provide alternative type dispatch.
	(loadmem_from_handle): No _cons_type etc. if no TYPECODES.
	  Provide alternative for old_symbol_tab_o.
	* eval.d (eval1): Provide alternative type dispatch.
	* control.d (CONSTANTP): Provide alternative type dispatch.
	* stream.d (P): Provide alternative definition.
	* io.d (prin_object_dispatch, pr_orecord): Provide alternative type
	  dispatch.
	(pr_readlabel): Some modifications if no TYPECODES.
	* array.d (bit_up, test_displaced): Modify type dispatch.
	* hashtabl.d (hashcode2, hashcode3_atom, hashcode4_atom, sxhash_atom):
	  Provide alternative type dispatch.
	* charstrg.d (coerce_ss): Provide alternative type dispatch.
	* predtype.d (eql, equal, equalp, COMMONP, TYPE-OF, CLOS:CLASS-OF)
	(heap_statistics_mapper): Provide alternative type dispatch.
	* aridecl.d: Use sign_bit_o instead of vorz_bit_o if it applies to
	  fixnums or sfloats only.
	* intelem.d (I_to_UL, I_to_L, I_to_UQ, I_to_Q): Provide alternative
	  type dispatch. Use FN_sign, BN_sign where possible.
	  Use sign_bit_o instead of vorz_bit_o if it applies to fixnums only.
	* intlog.d (I_to_DS_n_): Use FN_sign.
	* intplus.d (I_I_plus_I, I_minus_I, I_I_minus_I): Use FN_sign.
	* intmal.d (I_I_mal_I): Use FN_sign.
	* sfloat.d (SF_decode): Use SF_sign.
	(RA_to_SF): Use RT_sign.
	* ffloat.d (RA_to_FF): Likewise.
	* dfloat.d (RA_to_DF): Likewise.
	* lfloat.d (LF_decode, LF_ftruncate_LF, LF_futruncate_LF)
	(LF_fround_LF, LF_minus_LF, LF_shorten_LF, LF_extend_LF)
	(LF_LF_plus_LF, LF_LF_minus_LF, LF_LF_mal_LF, LF_LF_durch_LF):
	  Use LF_sign. Twiddle sign bit only if SPVW_MIXED && TYPECODES.
	(RA_to_LF): Use RT_sign.
	* flo_konv.d: Use sign_bit_o instead of vorz_bit_o if it applies to
	  fixnums or sfloats only.
	* flo_rest.d (floatcase): Provide alternative definition.
	(LF_I_scale_float_LF): Provide alternative type dispatch.
	  Use LF_sign.
	(F_float_sign_F): Use SF_sign, FF_sign, DF_sign, LF_sign.
	* realelem.d (I_I_gleich): Use I_I_bignums_p.
	(R_signum_R): Use LF_sign.
	* constsym.d (LISPSYM_B): Provide alternative definition.
	* affi.d (affi_call_argsa, SYS::NZERO-POINTER-P): Provide alternative
	  type dispatch.

1998-05-12  Sam Steingold  <sds@usa.net>

	* format.lsp (format-parse-cs, formatter-main-1): handle the ~//
	  format directive;
	(format-slash, format-get-symbol): new functions that do the job.

1998-05-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (SOCKET-SERVER, SOCKET-STREAM-PEERNAME): Remove unused
	  variables.

1998-05-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (iarray_rank, Iarray_rank, iarray_flags, Iarray_flags)
	(iarray_flags_*): New macros.
	* lispbibl.d, genclisph.d, spvw.d, io.d, stream.d, array.d:
	* hashtabl.d, sequence.d, charstrg.d, predtype.d, foreign.d, affi.d:
	  Update.

	* lispbibl.d (Array_type, Array_type_*): New macros.
	* io.d, array.d, predtype.d: Update.

	* lispbibl.d (oint_symbolflags_shift #ifdef NO_symbolflags): Define
	  as oint_data_shift, not oint_addr_shift.
	* spvw.d (gc_markphase, aktualisiere_STACK): Conditionalize more
	  code #ifndef NO_symbolflags.
	* debug.d (print_stackitem): Likewise.

	* spvw.d (memdump_header): Put _memflags right after _magic.
	(savemem, loadmem_from_handle): Update.

	* spvw.d (pointer_as_object, pointer_was_object): New macros.
	(gc_compact_cons_page, gc_sweep1_varobject_page, aktualisiere)
	(gc_sweep2_varobject_page, aktualisiere_page)
	(gc_compact_from_varobject_page, gc_compact_from_cons_page): Use them.

	* lispbibl.d (make_read_label, read_label_integer_p): New macros.
	(framepointerp): New macro, renamed from stack_env_p.
	(systemp): Remove macro.
	* eval.d, control.d, io.d, debug.d: Update.

	* eval.d (apply, funcall): Use abstract type test macros, and
	  improve the generated code a little bit.

	* lispbibl.d (record_type, Record_type, record_flags, Record_flags)
	(record_flags_*, srecord_length, Srecord_length, xrecord_length)
	(xrecord_xlength, Xrecord_length, Xrecord_xlength): New macros.
	* lispbibl.d, genclisph.d, spvw.d, eval.d, io.d, stream.d:
	* hashtabl.d, record.d, predtype.d, foreign.d, affi.d: Update.

	* spvw.d (do_aktualisiere_symbol, do_aktualisiere_svector)
	(do_aktualisiere_iarray, do_aktualisiere_record): New macros.
	(aktualisiere_*): Use them.
	(aktualisiere_iarray): Renamed from aktualisiere_array.

1998-05-09  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (fehler_terminal_raw): Define function only when needed.

	* io.d (pr_readlabel, pr_framepointer): New functions, split out from
	  pr_system.
	(pr_system): Much smaller.
	(prin_object_dispatch): Distinguish system/read-label/framepointer
	  here.

	* lispbibl.d (framecode): New macro.
	* lispbibl.d, spvw.d, eval.d, control.d, eval.d: Use it.

	* lispbibl.d (fcint): New type.
	* eval.d: Use it.

	* lispbibl.d (msymbolp, mnumberp, mvectorp, m_simple_vector_p)
	(m_general_vector_p, m_simple_string_p, mstringp)
	(m_simple_bit_vector_p, m_bit_vector_p, marray1p, if_mrecordp)
	(mclosurep, minstancep, mstructurep, mstreamp, morecordp, mcharp)
	(msubrp, mintegerp, mfixnump, mposfixnump, mbignump, mratiop)
	(mfloatp, m_short_float_p, m_single_float_p, m_double_float_p)
	(m_long_float_p, mcomplexp, mpositivep, N_mfloatp, N_mintegerp)
	(R_mrationalp, R_mfloatp, R_mminusp, RA_mintegerp, RA_mratiop)
	(I_mbignump, I_mfixnump, N_mrealp, N_mcomplexp): Remove macros.
	* genclisph.d: Likewise.
	* spvw.d, eval.d, pathname.d, stream.d, io.d, array.d, hashtabl.d:
	* list.d, package.d, record.d, sequence.d, charstrg.d, debug.d:
	* error.d, misc.d, predtype.d, symbol.d, rexx.d, foreign.d:
	* intdiv.d, realelem.d, realtran.d, compelem.d, comptran.d: Update.

	* lispbibl.d (if_vectorp, if_simplep): Remove macros.
	* array.d, predtype.d: Update.

	* lispbibl.d: Document that any of the type test macros can cause
	  multiple evaluation of their argument.
	* predtype.d: Don't do type tests directly on popSTACK().

	* lispbibl.d (allocate_closure, allocate_cclosure_copy): New macros.
	* eval.d (get_closure, interpret_bytecode_): Use them.
	* io.d (GET-MACRO-CHARACTER): Use them.
	* record.d (SYS::%MAKE-CLOSURE)
	(SYS::GENERIC-FUNCTION-EFFECTIVE-METHOD-FUNCTION): Use them.

	* spvw.d (walk_area_cons, walk_area_symbol, walk_area_array)
	(walk_area_svector, walk_area_svector): New macros.
	(walk_area): Simplify, use them.

	* lispbibl.d (byte_vector_p, general_byte_vector_p): New macros.
	* genclisph.d: Likewise.
	* stream.d (test_n_bytes_args): Use them.
	* sequence.d (get_seq_type): Likewise.
	* affi.d (SYS::MEM-READ, SYS::MEM-WRITE): Likewise.
	* predtype.d (equalp): Likewise.
	* foreign.d (convert_to_foreign): Likewise.

	* lispbibl.d (mdarray_type): Renamed from array_type.
	(case_mdarray): Renamed from case_array1.
	(Iarray): Renamed from Array.
	(TheIarray): Renamed from TheArray.
	(mdarrayp): Renamed from array1p.
	(allocate_iarray): Renamed from allocate_array.
	(iarray_displace_check): Renamed from array1_displace_check.
	* genclisph.d, spvw.d, stream.d, io.d, array.d, hashtabl.d, sequence.d,
	  charstrg.d, predtype.d, foreign.d, affi.d: Update.

	* lispbibl.d: Replace documentation of type encoding by new one.

	* lispbibl.d: Move the code defining SPVW_* before the definition of
	  the case_* macros.

	* lispbibl.d (uintWC, sintWC): New types, used for bignum length,
	  lfloat length, iarray rank.
	(uintWCoverflow): New macro, replaces uintCoverflow.
	(arrayrank_limit_1): Change value.
	* intelem.d (NUDS_to_I, UDS_to_I): Lengths fit in an uintWC, not uintC.
	* intlog.d (I_I_ash_I, I_logcount_I, I_integer_length)
	(I_integer_length_I): Likewise.
	* intplus.d (DS_1_plus, DS_minus1_plus, I_I_plus_I, I_I_minus_I):
	  Likewise.
	* intmal.d (UDS_UDS_mal_UDS): Likewise.
	* lfloat.d (LF_LF_durch_LF, LF_sqrt_LF, LF_to_I, I_to_LF, RA_to_LF):
	  Likewise.
	* flo_rest.d (lf_len_extend, F_float_digits_I, F_float_precision_I)
	(F_integer_decode_float_I_I_I): Likewise.
	* realtran.d (pi_F_float_F, lf_len_extend2): Likewise.
	* realrand.d (I_random_I): Likewise.
	* intread.d (DIGITS_to_I): Likewise.
	* lisparit.d (mal_10_plus_x, FLOAT-DIGITS, SYS::%SET-LONG-FLOAT-DIGITS)
	(log_digits): Likewise.
	* pathname.d (OPEN): Likewise.

	* constsym.d: Remove LISPSYM_B. Rename LISPSYM_C to LISPSYM_B.
	  Rename LISPSYM_D to LISPSYM_C. Rename LISPSYM_E to LISPSYM_D.
	* spvwtabs.d (symbol_tab_data): Update.
	* spvw.d (init_symbol_tab_2): Update.

	* lispbibl.d: Reorganize declarations of Cons, Ratio, Complex.
	(Rectype_*): Now enum values.
	(rectype_limit): New enum value.
	(Record_length): Use rectype_limit.
	* spvw.d (speicher_laenge, speicher_laenge_record): Use rectype_limit.
	(walk_area_record, aktualisiere_varobject): Likewise.
	(build_old_generation_cache, allocate_srecord_, allocate_xrecord_):
	  Likewise.
	* predtype.d (equalp): Likewise.
	(COMMONP): Put #if around "case Rectype_*".

	* spvw.d (gc_mark): Start macroizing this function.

	If SPVW_MIXED, put Ratio and Complex among the Varobjects.
	* lispbibl.d (_case_ratio, _case_complex): New macros (ugly).
	(case_pair): New macro.
	(Rectype_Ratio, Rectype_Complex): New enum values.
	(ratio_, complex_): Conditionally add a XRECORD_HEADER.
	* genclisph.d: Update.
	* spvw.d (MM_TYPECASES): Update.
	(gc_mark, walk_area, alive, gc_morris2, gc_morris3): Use case_pair.
	(aktualisiere, main, loadmem_aktualisiere): Likewise.
	(make_ratio, make_complex): Implement if SPVW_MIXED.
	(subst, subst_circ_mark, subst_circ_unmark): Don't use case_record.
	* predtype.d (enum_hs_ratio, enum_hs_complex): Now unconditional.
	(heap_statistics_mapper): Update.
	* constobj.d: Update.

	* lispbibl.d (make_machine): New macro.
	(nullobj): Use it.
	* genclisph.d, spvw.d, list.d: Update.

	* lispbibl.d (bignum_length, Bignum_length): New macros.
	* lispbibl.d, genclisph.d, spvw.d, stream.d, hashtabl.d, predtype.d:
	* intelem.d, intlog.d, intcomp.d, intplus.d, flo_rest.d, realelem.d:
	* realtran.d: Update.

	* lispbibl.d (lfloat_length, Lfloat_length): New macros.
	* spvw.d, predtype.d, lfloat.d, flo_rest.d, realelem.d, realtran.d:
	* compelem.d, lisparit.d: Update.

	* lispbibl.d (sarray_length, Sarray_length): New macros.
	* lispbibl.d, array.d: Update.

	* lispbibl.d (sbvector_length, Sbvector_length): New macros.
	* spvw.d, io.d, array.d, record.d: Update.

	* lispbibl.d (sstring_length, Sstring_length): New macros.
	* spvw.d, io.d, pathname.d, stream.d, array.d, charstrg.d, rexx.d:
	  Update.

	* lispbibl.d (svector_length, Svector_length): New macros.
	* spvw.d, eval.d, control.d, io.d, array.d, hashtabl.d, package.d:
	* debug.d, error.d, predtype.d, rexx.d, foreign.d, affi.d: Update.

1998-05-09  Pierpaolo Bernardi  <bernardp@cli.di.unipi.it>

	* user1.lsp: move *PROMPT-WITH-PACKAGE* from SYS to LISP,
	  and export it

1998-05-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* ffcall: Add support for DEC Alpha running Linux (libc6): Change all
	  ".rdata" in assembler output to ".data".

1998-05-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* socket.d: Don't declare connect() when using glibc2.
	* aclocal.m4 (CL_TCPCONN): Allow setsockopt to be declared with
	  socklen_t = unsigned int.

1998-05-08  Sam Steingold  <sds@usa.net>

	* constsym.d (*floating-point-contagion-ansi*): New variable.
	* constobj.d (fpcontagion_warn_string): Change wording.
	* flo_rest.d (warn_floating_point_contagion): Change appropriately.
	(GEN_F_op2, GEN_LF_op2_0): Implement ANSI compliant float contagion.
	* realelem.d (R_R_contagion_R): Likewise.
	* lisparit.d (init_arith): Initialize *floating-point-contagion-ansi*.

1998-05-08  Pierpaolo Bernardi  <bernardp@cli.di.unipi.it>

	* pathname.d (ensure_directories_exist): Changed arglist from
	  "&optional verbose" to "&key verbose"
	* subr.d: Likewise.
	* subrkw.d: Added entry for ensure_directories_exist.
	* constsym.d: Added the keyword :VERBOSE.

1998-05-07  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* aclocal.m4 (CL_RUSAGE): Check for getrusage declaration. Define
	  RUSAGE_WHO_T.
	* unixconf.h.in (RUSAGE_WHO_T): New macro.
	* unix.d (getrusage): Change declaration.

1998-05-05  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* aclocal.m4 (CL_DYNLOAD): Check for dlerror declaration.
	* configure.in, unixconf.h.in: CL_DYNLOAD sets DLERROR_CONST.
	* unix.d (dlerror): Use DLERROR_CONST in the declaration.

1997-05-01  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* socket.d (create_server_socket): Avoid an EADDRINUSE error in some
	  harmless cases.
	(setsockopt): Declare.

1998-05-01  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* init.lsp: Load amigasock.lsp by default.

1998-04-25  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* predtype.d (CLASS-OF): Change so that (class-of (sys::make-anode))
	  returns the class STRUCTURE-OBJECT instead of the class T.

1998-04-25  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* modules/bindings/linux/linux.lsp: Make LINUX package case sensitive.
	(fd_isset): Use lisp:floor, not linux:floor.
	(EXIT_SUCCESS): Set to 0.

1998-04-25  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (c-form): Respect NOTINLINE declarations on macros.

1998-04-25  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* flo_rest.d (warn_floating_point_contagion): New function.
	(GEN_F_op2): Warn when floating point contagion occurs.
	* realelem.d (R_R_contagion_R): Likewise.
	* constsym.d (*warn-on-floating-point-contagion*): New variable.
	* lisparit.d (init_arith): Initialize it.
	(init_arith): Initialize *inhibit-floating-point-underflow* here,
	  not in set_lf_digits().
	* constobj.d (fpcontagion_warn_string): New.

1998-04-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* makemake.in: Rename bindings/linux to bindings/linuxlibc5.
	* bindings/linuxlibc6: New module.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (floating-point-inexact)
	(floating-point-invalid-operation): New classes.
	* init.lsp: Export their names.
	* defs3.lsp: Likewise.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clos.lsp: Export CLOS:METHOD.
	(method): New structure class.
	(standard-method): Inherit from it.
	* init.lsp: Export CLOS:METHOD.
	* defs3.lsp: Likewise.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* predtype.d (TYPE-OF, CLASS-OF): Use CLOS::CLOSCLASS instead of
	  CLOS::CLASS.
	* record.d (fehler_keine_klasse): Use CLOS:CLASS.
	* clos.lsp (find-class, setf find-class, ensure-class): Use
	  CLOS::CLOSCLASS instead of CLOS::CLASS.
	* type.lsp (typep, canonicalize-type, type-expand-1): Likewise.
	* user2.lsp (apropos, describe): Likewise.
	* compiler.lsp (c-TYPEP): Likewise.
	* init.lsp: Export clos:class.
	* defs3.lsp: Likewise.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* record.d (CLOS::STRUCTURE-OBJECT-P): Renamed from
	  CLOS::STRUCTURE-INSTANCE-P.
	(COPY-STRUCTURE): Use type STRUCTURE-OBJECT instead of STRUCTURE.
	* io.d (print_structure): Likewise.
	* eval.d: (FUNTAB): Rename CLOS::STRUCTURE-INSTANCE-P to
	  CLOS::STRUCTURE-OBJECT-P.
	* compiler.lsp (funtab, subr-info, c-DIRECT-FUNCTION-CALL): Likewise.
	(c-typep-alist1): Likewise.
	(c-typep-alist2): Remove type STRUCTURE.
	* type.lsp (CLOS:STRUCTURE-OBJECT): Rename CLOS::STRUCTURE-INSTANCE-P
	  to CLOS::STRUCTURE-OBJECT-P.
	(STRUCTURE): Remove builtin type.
	(subtypep): Remove type STRUCTURE.
	* defstruc.lsp (defstruct): All structure types except STRUCTURE-OBJECT
	  inherit from STRUCTURE-OBJECT.
	(structure-object): New structure class.
	* constobj.d (class_structure_types): Update accordingly.
	* clos.lsp (<structure-object>): Update initial value.
	(compute-dispatch): Rename CLOS::STRUCTURE-INSTANCE-P to
	  CLOS::STRUCTURE-OBJECT-P.
	* init.lsp: Export STRUCTURE-OBJECT.
	* defs3.lsp: Likewise.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (print_structure): New function, doing the bulk of pr_structure.
	(pr_structure): Call it.
	(pr_external_1): Do respect *print-circle*.
	* defstruc.lsp (clos::defstruct-remove-print-object-method): One more
	  hook for CLOS.
	(defstruct): Implement option :PRINT-OBJECT. Options :PRINT-FUNCTION
	  and :PRINT-OBJECT both cause a PRINT-OBJECT method to be installed.
	* clos.lsp (defstruct-remove-print-object-method): New function.
	(class, standard-method): Use PRINT-OBJECT methods instead of
	  :PRINT-FUNCTION option.
	(built-in-class, slotted-class, structure-class, standard-class):
	  Drop :PRINT-FUNCTION option.
	(print-class, print-std-method): Lose third argument.
	(initialize-instance structure-class): Drop print-function
	  inheritance hack.
	* init.lsp: CLOS is not optional any more.
	* conditio.lsp (restart): Use :PRINT-OBJECT option instead of
	  :PRINT-FUNCTION option.
	(print-restart): Lose third argument.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defs3.lsp: Don't export *evalhook*, *applyhook*, evalhook, applyhook.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* constsym.d (set): Rename SET to SYS::SET-SYMBOL-VALUE.
	* places.lsp (SYMBOL-VALUE): Use SYS::SET-SYMBOL-VALUE.
	  SET is a deprecated alias.
	* defs1.lsp (copy-symbol): Use SYS::SET-SYMBOL-VALUE.
	* defs2.lsp (define-symbol-macro): Likewise.
	* affi1.lsp (open-library): Likewise.
	* macros1.lsp (defvar, defparameter): Likewise.
	* compiler.lsp (funtab): Likewise.
	(subr-info): Add SYS::SET-SYMBOL-VALUE.
	(*deprecated-functions*): New variable.
	(note-function-used): New function.
	(c-GLOBAL-FUNCTION-CALL): Call it.
	(c-FUNCTION): Call it.
	(compile-file): Initialize *deprecated-functions*. Warn about the
	  use of deprecated functions.

1998-04-18  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* type.lsp (CLOS:GENERIC-FUNCTION): New builtin type.
	(subtypep): Treat it.
	* compiler.lsp (c-typep-alist1): Treat it.
	* clos.lsp: Export CLOS:GENERIC-FUNCTION.
	(<generic-function>): New variable, new class CLOS:GENERIC-FUNCTION.
	* init.lsp: Export CLOS:GENERIC-FUNCTION.
	* defs3.lsp: Likewise.

1998-04-17  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* constsym.d (copy_structure): Rename SYS::%COPY-STRUCTURE to
	  COPY-STRUCTURE.
	* defstruc.lsp (ds-make-copier): Likewise.
	* compiler.lsp (funtab, subr-info, c-DIRECT-FUNCTION-CALL): Likewise.
	* init.lsp: Export COPY-STRUCTURE.
	* defs3.lsp: Likewise.

1998-04-16  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defmacro.lsp (make-macro-expansion): Change scope of the block to
	  include only the body, not the lambda list.
	* macros2.lsp (deftype): Likewise.

1998-04-16  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* debug.d (read_form): Withdraw the clear-input/listen hack, use
	  interactive-stream-p instead. After reading a form, clear input
	  only upto a newline.
	* lispbibl.d (interactive_stream_p): New declaration.
	* user1.lsp (break-loop): Do (clear-input *debug-io*) upon entry
	  of the break loop.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* type.lsp (type-expand-1, type-expand): New functions.
	* user2.lsp (describe): Give a hint for DEFTYPEd types.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* type.lsp (CONS): New composite type specifier.
	(canonicalize-type): Expand NUMBER to (OR REAL COMPLEX).
	(canonicalize-type): Simplify (AND type), (OR type).
	(subtypep): If type2 = (OR), replace it by NIL. For numbers, improve
	  the fallback case. Treat the composite CONS type.
	* compiler.lsp (c-typep-alist3): New composite type specifier CONS.
	* type.tst: Replace '(cons symbol) by '(symbol cons).

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* defstruc.lsp (defstruct): Compare slot names using :test #'string=
	  :key #'symbol-name, not :test #'eq.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp (arithmetic-error, cell-error, unbound-slot, type-error)
	(package-error, print-not-readable, stream-error, file-error)
	(simple-condition): Use non-exported symbols as slot names.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clos.lsp (compute-applicable-methods): Turn into a generic
	  function.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (compile-file): Perform more merge-pathnames
	  operations.
	(compile-file-pathname): Likewise. Add &allow-other-keys.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clos.lsp (analyze-method-description): Allow class objects as
	  parameter specializers.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* init.lsp: Remove an unnecessary copy of the walker code.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* control.d (case): New special form.
	* init.lsp (%expand-form): Treat it.
	(%expand-case): New function.
	* macros1.lsp (case): Put the macro definition on the property list.
	* compiler.lsp (c-CASE): Now a special form handler.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* array.d (copy_sbvector): New function.
	* lispbibl.d (copy_sbvector): Declare it.
	* record.d (SYS::GENERIC-FUNCTION-EFFECTIVE-METHOD-FUNCTION): New
	  function.
	* compiler.lsp (c-LAMBDABODY): A generic function dispatch code
	  ends with (RETGF) and needs only one value.
	* clos.lsp (analyze-method-description): Add check for
	  CALL-NEXT-METHOD called with arguments.
	(slow-funcall-gf): Return the effective method, don't call it.
	(finalize-fast-gf): No need to pass the arguments to
	  initial-funcall-gf.
	(initial-funcall-gf): Just return the gf, don't apply it to the args.
	(compute-dispatch): Return the effective method, don't call it.
	(%call-next-method): New function.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* bytecode.d (cod_skip_retgf, cod_funcall_skip_retgf): New byte codes.
	(cod_store8, cod_store9): Remove.
	* eval.d (interpret_bytecode_): Implement the new bytecodes.
	* compiler.lsp (instruction-table): New instructions SKIP&RETGF and
	  FUNCALL&SKIP&RETGF.
	(short-code-base, short-code-opsize, short-code-ops): Update for
	  removed store8, store9.
	(traverse-anode): RETGF is like a barrier.
	(simplify): RETGF needs one value only.
	(SP-depth): RETGF returns, like RET.
	(insert-combined-LAPs): Combine SKIP and RETGF. Combine FUNCALL and
	  SKIP and RETGF.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* constobj.d (version): New bytecode version.
	(old_version): Remove.
	* misc.d (SYS::VERSION): Drop test for O(old_version).
	* package.d (SYS::OLD-MAKE-PACKAGE, SYS::OLD-%IN-PACKAGE)
	(SYS::OLD-IN-PACKAGE): Remove backward compatibility hacks.
	* subrkw.d (old_make_package, old_pin_package, old_in_package):
	  Likewise.
	* debug.d (SYS::%ROOM): Renamed from SYS::OLD-ROOM.
	* user2.lsp (room): Call it.
	* eval.d (FUNTAB): Replace old_make_package, old_pin_package,
	  old_in_package by the new make_package, pin_package, in_package.
	  Remove old_room.
	* compiler.lsp (funtab): Likewise.

1998-04-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* list.d (BUTLAST, NBUTLAST): Signal an error if len==0 and dotted.

1998-04-12  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* array.d (ARRAY-DISPLACEMENT): New function.
	* init.lsp, defs3.lsp: Export it.

1998-04-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (conditiontype): New condition types
	  source_program_error and keyword_error.
	* genclisph.d (conditiontype): Likewise.
	* constsym.d (simple-source-program-error, simple-keyword-error):
	  Likewise.
	* error.d (end_error): Treat keyword_error.
	* eval.d (parse_dd, get_closure, eval1, eval_fsubr)
	(fehler_eval_zuwenig, fehler_eval_zuviel, fehler_eval_dotted):
	  Emit source_program_error instead of program_error.
	(fehler_key_unpaarig, fehler_key_zuviel, funcall_iclosure)
	(fehler_apply_zuviel, fehler_apply_zuwenig): Emit program_error
	  instead of error.
	(interpret_bytecode_.cod_mvcall): Likewise.
	(fehler_key_notkw): Emit keyword_error instead of type_error.
	(fehler_key_badkw): Emit keyword_error instead of error.
	* control.d (fehler_funsymbol, FUNCTION, check_setq_body)
	(fehler_docstring, make_variable_frame, COMPILER-LET, fehler_funspec)
	(MACROLET, COND, RETURN-FROM, TAGBODY, GO, DECLARE, PARSE-BODY):
	  Emit source_program_error instead of program_error.
	(MULTIPLE-VALUE-CALL, APPLYHOOK): Emit program_error instead of
	  error.
	* foreign.d (FOREIGN-CALL-OUT): Emit program_error instead of error.
	* conditio.lsp (source-program-error, keyword-error)
	(simple-source-program-error, simple-keyword-error): New condition
	  types. Pass them to %defclcs.
	(define-condition, handler-case, restart-bind, expand-restart-case):
	  Emit source-program-error instead of program-error.
	* clos.lsp (with-slots, with-accessors, defclass)
	(analyze-method-description, defmethod, analyze-defgeneric)
	(analyze-defgeneric-lambdalist, analyze-generic-fundefs):
	  Emit source-program-error instead of program-error.
	(slow-funcall-gf, do-defgeneric): Emit program-error instead of
	  error.
	* affi1.lsp (mlibcall): Emit source-program-error instead of
	  program-error.
	* defmacro.lsp (macro-call-error, analyze-aux, analyze-rest, analyze1)
	(remove-env-arg, make-macro-expansion): Emit source-program-error
	  instead of program-error.
	* defs2.lsp (defpackage, define-symbol-macro): Emit
	  source-program-error instead of program-error.
	(check-not-special-variable-p): Emit program-error instead of error.
	* defstruc.lsp (ds-symbol-or-error, defstruct): Emit
	  source-program-error instead of program-error.
	* foreign1.lsp (check-symbol, def-c-var, element, deref, slot, cast)
	(typeof): Emit source-program-error instead of program-error.
	* init.lsp (%the-environment-error, %expand-form, %expand-list)
	(%expand-lambda, %expand-lambdalist, %expand-varspez)
	(%expand-varspez*, %expand-fundefs-1, defun, do): Emit
	  source-program-error instead of program-error.
	* macros1.lsp (defvar, defparameter, defconstant, do/do*-expand)
	(psetq, case, ifify, cond): Emit source-program-error instead of
	  program-error.
	* macros2.lsp (typecase, deftype): Emit source-program-error instead
	  of program-error.
	* macros3.lsp (expand-LETF*, expand-LETF): Emit source-program-error
	  instead of program-error.
	* places.lsp (get-setf-method-multiple-value, get-setf-method)
	(define-setf-method, defsetf, psetf, define-modify-macro, setf)
	(shiftf, (setf apply), (setf funcall)): Emit source-program-error
	  instead of program-error.
	* trace.lsp (trace1, untrace1): Emit source-program-error instead of
	  program-error.

1998-04-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* constobj.d (type_peektype, type_rexx_host): Use BOOLEAN instead of
	(MEMBER NIL T).
	* format.lsp (format): Likewise.
	* clx.lsp (boolean): Remove definition.

1998-04-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d: Port to powerpc-apple-mklinux.
	  Add a verification for oint_addr_mask.

1998-04-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* aclocal.m4 (CL_FPU_CONTROL): New macro.
	* configure.in: Call it.
	* unixconf.h.in: New macro HAVE_SETFPUCW.
	* unixaux.d: Set __fpu_control only if __setfpucw() doesn't exist.
	* spvw.d (main): Call __setfpucw() if it exists.

1998-04-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (EQL=EQ): Don't use fixnump.

1998-04-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* init.lsp: Export BOOLEAN.
	* defs3.lsp: Likewise.
	* type.lsp (TYPE-SYMBOL, SUBTYPEP): Treat BOOLEAN.
	* compiler.lsp (*declaration-types*, c-typep-alist2): Likewise.
	* predtype.d (TYPE-OF): (type-of 't) returns BOOLEAN.
	* user2.lsp (describe): Adapt for TYPE-OF change.

1998-04-01  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* type.lsp (%the): Instead of typep, use near-typep, which returns T
	  for a read-label.

1998-03-24  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* compiler.lsp (var): New slot `for-value-usedp'.
	(c-VAR): Set it.
	(ignore-check): Use it, instead of `usedp'.
	(bind-fixed-var-1, process-fixed-var-list, bind-movable-var)
	(c-FLET, c-LABELS, c-GENERIC-FLET, c-GENERIC-LABELS): Initialize it.

1998-03-24  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (princ_up): Bind *PRINT-READABLY* to NIL.

1998-03-23  Joerg Hoehle  <Joerg.Hoehle@gmd.de>

	* compiler.lsp (c-IF): No extra JMP if no else part.

1998-03-16  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* pathname.d (OPEN): For the :element-type argument, allow deftype'd
	  type specifiers. Check their validity using SUBTYPEP and
	  SYS::SUBTYPEP-INTEGER.

1998-03-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* macros2.lsp (space): Call VALUES-LIST explicitly.
	* user2.lsp (%space): No need to return values.

1998-03-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (%DEFIO): New function.
	(SET-MACRO-CHARACTER): If function is a dispatch-reader function,
	  unpack it.
	(GET-MACRO-CHARACTER): For a dispatch macro character, return a
	  dispatch-reader function.
	* defs2.lsp (dispatch-reader): New function. Call %defio.

1998-03-12  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* loop.lsp (expand-loop): Emit the REPEAT decrement before its
	  end test, not afterwards.
	* loop.tst: A new test.

1998-03-11  Pierpaolo Bernardi  <bernardp@cli.di.unipi.it>

	* macros2.lsp (etypecase, ctypecase, ecase, ccase): Allow T and
	  OTHERWISE as keys, but warn about them unless parenthesized.
	* conditio.lsp (etypecase, ctypecase, ecase, ccase): Likewise.

1998-03-10  Sam Steingold  <sds@usa.net>

	* io.d: fixed a minor grammatical error.

1998-03-07  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* amiga.d (stdin_handle): Renamed from Input_handle.
	(stdout_handle): Renamed from Output_handle.
	  All references changed.
	* lispbibl.d (strm_file_name, strm_file_truename): Both can be a
	  pathname or NIL.
	* io.d (pr_stream): Don't print strm_file_name if it is NIL.
	* pathname.d (test_file_stream_named): New function.
	(parse-namestring, truename, probe-file, delete-file, rename-file)
	(open, file-write-date, file-author): Call test_file_stream_named.
	* stream.d (regular_handle_p): Move function outside #if.
	(b_file_finish_flush): Adapt for unnamed file streams.
	(fehler_position_beyond_EOF, make_file_stream): Likewise.
	(b_file_full_flush): Don't call lseek if the stream is write-only.
	(b_file_half_flush): Likewise.
	(b_file_nextbyte): Don't read buffer if the stream is write-only.
	(position_b_file, position_file_end): Likewise.
	(make_file_stream): Unnamed output stream are write-only.
	(finish_output_file): For unnamed streams, don't close the handle.
	(make_terminal_io): New function.
	(init_streamvars): Call it.

1998-03-07  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (finish_tty_output, force_tty_output, clear_tty_output):
	  Ignore ENOSYS on Irix (occurs on pipes).

1998-02-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d: Define MULTIMAP_MEMORY_SYMBOL_TAB if
	  MULTIMAP_MEMORY && MAP_MEMORY_TABLES. But don't multimap the subr_tab
	  - wouldn't work in the case of dynamic loading.

1998-02-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Make aktenv a separate entity (will be per-thread later).
	* lispbibl.d (aktenv): Make a global variable.
	* eval.d (aktenv): New global variable.
	* constobj.d (akt_*_env): Remove.
	* spvw.d (for_all_threadobjs): New macro.
	(gc_markphase, aktualisiere_object_tab): Call it.
	(initmem): Initialize aktenv.

1998-02-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* clos.lsp (*dynamically-modifiable-generic-function-names*): New
	  variable.
	(warn-if-gf-already-called): Don't warn if gf is listed in it.

1998-02-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* format.lsp (format-parse-cs): Add format directive ~!.
	(format-call): New function.
	(formatter-main-1): Compile format-call.

1998-02-15  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (GNU_GETTEXT): Support gettext with IBMPC_CHS as well.
	(INIT_SYMBOL_TAB): Don't define for EMUNIX.
	* gettext/intl/Makefile.dos: New file.
	* dos/gtconfig.h: New file.
	* dos/gtobjects: New file.
	* dos/copyx.bat, os2/copyx.cmd: Copy them.
	* spvw.d (to_latin_table, from_latin_table): New arrays.
	(cvgettext): New function.
	(clgettext): Call cvgettext, instead of gettext.
	* msdos.d (full_read, full_write): Change declaration to match the
	  definition in unixaux.d.
	(get_handle_input_status, intdos): Save %ebx in asm calls.
	* stream.d (kbhit, getch, get_handle_info, intvideo): Likewise.
	* makemake.in: Support gettext on DOS, OS/2 platforms with EMX.
	(EMX): Link with emxl.exe, not emx.exe.
	  Do not strip lisp.exe.
	* dos/convert.bax, os2/convert.bax: Don't convert binary files
	  like *.gif.
	* dos/delx.bat, os2/delx.cmd: Remove more things. Don't descend into
	  src/readline or src/newreadline - these directories may not exist.
	* Makefile.devel (dos--distrib, os2--distrib): Copy lispinit.mem,
	  not compiled.mem. Copy the *.mo files. Copy the translated READMEs.
	  Copy impnotes.html. Copy emx.exe. Copy emxrt.doc.

1998-02-15  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d: Remove support for EMX versions < 0.9c.
	* msdos.d: Likewise.
	(FILE_PID): Remove definition.
	* spvw.d (alarm_handler, main): Remove support for EMX versions < 0.9c.
	* stream.d (finish_tty_output, force_tty_output, listen_handle)
	(kbhit, getch, clear_window, delete_window_line, init_term): Likewise.
	(make_pipe_input_stream, make_pipe_output_stream)
	(make_pipe_io_stream): Don't use FILE_PID any more.
	* os2/popenrw.c: Likewise.
	* error.d (begin_error, tast_break): Remove support for EMX
	  versions < 0.9c.
	  * graph.d: Likewise.
	* pathname.d: Likewise.
	* time.d: Likewise.

1998-02-15  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* cv-to-ibmpc.c (main): Translate the characters 0xCD and 0xD3 to
	  ASCII, instead of dropping them. Needed for the spanish messages.

1998-02-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Remove support for traditional (pre-ANSI-C) compilers. Assume
	<stdlib.h> and <string.h> are present.
	* ansidecl.d: Assume <stdlib.h> is present.
	* txt2c.c: Likewise.
	* ccmp2c.d: Likewise.
	(new_statement, main): Assume ANSI C declaration syntax.
	* comment5.d (main): Assume ANSI C declaration syntax.
	* dedefined.c: Removed.
	* deelif.d: Removed.
	* deerror.c: Removed.
	* mergestrings.d: Removed.
	* traddecl.d: Removed.
	* lispbibl.d: Assume ANSI C (or C++) compiler.
	(const, signed, void): Remove conditional definitions.
	(GENTAG, STRING): Simplify.
	(DECLTAG, BEGIN_DECLTAG, END_DECLTAG, local_function): Remove.
	(_ARGS, PARM0, PARM1, PARM2, PARM3, PARM4, PARM5): Remove.
	(nonreturning_function): Simplify.
	(signed_int_with_n_bits, unsigned_int_with_n_bits): Unconditional.
	(sintB, uintB, sintW, uintW, sintL, uintL): Simplify definition.
	(sintQ, uintQ, sintP, uintP): Likewise.
	(sintBW, uintBW, sintWL, uintWL, sintBWL, uintBWL): Likewise.
	(sintD, uintD, sintDD, uintDD, tint, aint, saint, cint): Likewise.
	(module_): Simplify declaration.
	* genclisph.d (_ARGS): Remove. Assume ANSI C declaration syntax.
	* unix.d (FAULT_HANDLER_ARGDECL): Remove.
	(FAULT_HANDLER_ARGLIST): Assume ANSI C declaration syntax.
	* io.d: Change `local_function' to `local'.
	* package.d: Likewise.
	* array.d: Likewise.
	* flo_rest.d (GEN_F_op1, GEN_ffloor, GEN_fceiling, GEN_fround)
	(GEN_round, GEN_F_fround, GEN_F_round, GEN_F_F_round): Use ANSI C
	  declaration syntax.
	* realelem.d (GEN_R_round, GEN_R_fround, GEN_R_R_round, GEN_R_R_mod)
	(GEN_R_R_fround): Use ANSI C declaration syntax.
	* realtran.d (GEN_F_atanx, GEN_F_sinx): Use ANSI C declaration syntax.
	* pathname.d (nametype_namestring_parts): Likewise.
	* spvw.d (gc_sweep1_varobject_page): Likewise.
	(gc_sweep2_varobject_page): Likewise.
	(sigsegv_handler): Simplify declaration.
	(dynload_modules): Simplify cast for initfunction1 and initfunction2.
	* avl.d (AVL_map_*): Remove calls to BEGIN_DECLTAG, END_DECLTAG and
	  DECLTAG.
	* _clisp.c (perror, main): Assume ANSI C declaration syntax.
	* ari68020.d (C, clrx): Assume ANSI C preprocessor.
	* ari80386.d (C, L): Likewise.
	* sp80386.d (C): Likewise.
	* arisparc.d (C): Likewise.
	* asmi386.hh (C, L): Likewise.
	* configure.in: Don't call AC_PROG_GCC_TRADITIONAL, CL_CC_NEED_DEELIF,
	  CL_CC_NEED_DEERROR, CL_CC_NEED_MERGESTRINGS any more.
	* makemake.in: Drop support for oldcc. Assume CC_NEED_DEELIF,
	  CC_NEED_DEERROR, CC_NEED_MERGESTRINGS to be false. Assume CC_ANSI
	  to be true. Assume gcc is not used with -traditional. Always use
	  ansidecl, not traddecl.

1998-02-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* modules/stdwin: Removed.
	* makemake.in (--with-module-stdwin): Remove option.
	* Makefile.devel (SOURCES4): No need any more to exclude stdwin.
	(CONFIGURES): Remove modules/stdwin/configure.
	(src--distrib): Don't create clispsrc-stdwin.tar.gz.

1998-02-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* intsqrt.d (UDS_sqrt_): gcc-2.5.8 on hppa has same problem with
	  isqrt as gcc-2.7.0 on i386. Same workaround works.

1998-02-10  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* constobj.d (showstack_string_CALLBACK_frame): Define if
	  HAVE_SAVED_REGISTERS, not HAVE_SAVED_STACK.

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (gar_col_normal): Unify three occurrences of the same error
	  message. Wrap munmap() calls in begin/end_system_call().

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Preliminary support for Mingw32:
	* ansidecl.d, traddecl.d, dedefined.c, ccmp2c.d, txt2c.c: Define
	  STDC_HEADERS if __MINGW32__.
	* lispbibl.d (WIN32): Define if __MINGW32__.
	(I80386): Define if _X86_ is defined.
	* ari80386.d, sp80386.d, asmi386.hh: The __MINGW32__ assembler has
	  the ELF "align" pseudo-op.
	* win32.d: "#undef unused" before including other header files.
	(_MAX_PATH): Define to an arbitrary value.
	(uAsciiChar): New macro, against unnamed union in __MINGW32__.
	(wProcessorArchitecture): Similarly.
	(MAXHOSTNAMELEN): Define only unless already defined.
	(CoGetCurrentProcess): Declare explicitly for __MINGW32__.
	* stream.d (listen_handle, listen_keyboard, rd_ch_keyboard):
	  Use uAsciiChar.
	* makemake.in ($TSYS = win32gcc): Output a Makefile suitable for
	  Mingw32.
	(PARENT_M, NEXT_M, SRCTOPDIR_M, UTILDIR_M, DOCDIR_M): New variables.
	  Use them in Makefile rules (as opposed to Makefile commands).

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* pathname.d (init_pathnames): Don't expect that getlogin() sets
	  errno when it fails.

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (xmprotect): Use OS_errno, not errno. For Win32.

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (main.banner): Add a copyright line for 1998.

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* init.lsp: Export `define-symbol-macro'.
	* defs3.lsp: Likewise.

1998-02-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* pathname.d (fehler_notdir): New function, extracted from
	  shorter_directory_arg.
	(directory_exists): New function.
	(PROBE-DIRECTORY): New function.
	(shorter_directory): Renamed from shorter_directory_arg. Accept
	  two arguments. Call fehler_notdir. All callers changed.
	(make_directory): New function, extracted from MAKE-DIR.
	(MAKE-DIR): Call it.
	(ENSURE-DIRECTORIES-EXIST): New function.
	* init.lsp: Export `ensure-directories-exist'.
	* defs3.lsp: Likewise.

1998-01-23  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* arilev0.d (mulu32 for I80386): Fix a wrong description of the "mull"
	  instruction.

1998-01-21  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* asmi386.hh (NUM, ADDR): To prepend a dollar, use $##n. (Some
	  compilers allow dollars in identifiers. Needed for mingw32.)

1998-01-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* stream.d (clear_tty_output): Avoid error during CLEAR-OUTPUT on
	  pipes on Win32.

1998-01-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* pathname.d (file_write_date, file_author): file_exists() takes
	  a `object' as argument, not a `const char *'.

1998-01-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* predtype.d (hs_record): Add const here too, to fix a small problem
	  in 1997-09-28-const.diff.

1998-01-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* makemake.in: Add a comment about MODULES to the makefile.

1998-01-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (mem.heaptype): Use -1 for SUBRs and < -1 for unused
	  typecodes.
	(main): Initialize mem.heaptype accordingly.
	(main): prepare_zeromap for subr_tab is now implicit.

1997-12-30  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (nonreturning_function): Fix comment.
	* win32.d (SetConsoleCtrlHandler): Fix comment.

1997-12-13  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* eval.d (unwind): Fix a compilation warning in WIDE mode: don't cast
	  directly from oint to a pointer.

1997-12-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d: Write MC680X0 instead of M680X0.

1997-12-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (make_space_gc*): If zeromap() fails, output an informative
	  message, to calm down users.

1997-12-11  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* makemake.in (distrib for acorn): Distribute impnotes.html.

1997-12-05  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* sequence.d (valid_type): Recognize (SIMPLE-ARRAY eltype 1) as
	  equivalent of (SIMPLE-ARRAY eltype (*)).
	* type.lsp (subtypep): Likewise.

1997-12-01  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* cfglinux.lsp: File removed.
	* FILES.1: Don't mention it.
	* makemake.in: Likewise.

1997-11-29  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* ffcall/{trampoline,callback/trampoline_r}/trampoline.c
	(alloc_trampoline): Add support for NetBSD/m68k.
	* makemake.in: Recognize m68k-netbsd for ari680x0 support.

1997-11-15  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* ffcall/callback/Makefile.{in,msvc}: callback.h resides in the
	  build dir, not the source dir.
	* ffcall/callback/callback.h.in: Renamed from callback.h.

1997-11-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* io.d (prin1a): When *PRINT-PRETTY* = T, there is no need to output
	  a newline if the next string begins with a newline character anyway.

1997-11-14  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Allow dynamic loading of modules, if configured --with-dynamic-modules.
	* clisp-link.in (run): New command.
	* aclocal.m4 (CL_DYNLOAD): New macro.
	* configure.in: Use it.
	* unixconf.h.in (HAVE_DLOPEN): New macro.
	* unix.d: Use it to declare dlopen, dlsym, dlclose, dlerror.
	* makemake.in: New option --with-dynamic-modules.
	* lispbibl.d (STACK_register) [I80386]: Define only if
	DYNAMIC_MODULES is not defined.
	(HAVE_SAVED_REGISTERS if I80386): Likewise.
	(tagging scheme): Likewise.
	(modules): Declare.
	(dynload_modules): Declare.
	* modules.d: Treat DYNAMIC_MODULES.
	* pathname.d (SYS::DYNLOAD-MODULES): New function.
	* spvw.d (init_modules_0): New function.
	(init_module_2): New function.
	(init_other_modules_2): Call it.
	(dynload_modules): New function.

1997-11-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* ffcall: Upgrade to ffcall-1.3
	* Makefile.devel (CONFIGURES): Update accordingly.
	* foreign.d (convert_function_to_foreign, free_foreign_callin)
	(convert_function_from_foreign, callback, init_ffi): Use callback
	  package instead of vacall+trampoline.

1997-11-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* aclocal.m4 (CL_MACHINE): Force CL_CHAR_UNSIGNED before CL_MACHINE.

1997-11-08  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* aclocal.m4 (CL_CANONICAL_HOST_CPU): Support for KAI C++ which
	  doesn't like "#undef __i386__" nor "#define __i386__".

1997-10-20  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* disassem.lsp (disassemble-machine-code for UNIX): Inhibit line
	  breaks, 1 instruction per line, otherwise the instruction gets
	  filtered away.

1997-10-19  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* conditio.lsp: Conditionalize upon feature ANSI-CL, not dpANS.
	* defs2.lsp, defs3.lsp, init.lsp, loop.lsp: Likewise.

1997-10-12  Joerg Hoehle  <Joerg.Hoehle@zeus.gmd.de>

	* amigasock.lsp: New file.

1997-10-08  Joerg Hoehle  <Joerg.Hoehle@zeus.gmd.de>

	* eval.d (interpret_bytecode (cod_throw)): Tweak message.

1997-10-06  Joerg Hoehle  <Joerg.Hoehle@zeus.gmd.de>

	* cfgamiga.lsp (machine-instance): Prefix with "localhost".
	* erramiga.d (error200_msg_table): Add some translations.

1997-09-30  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* utils/gcc-cccp/Makefile.msvc: Set stack size for cccp.exe.
	* asmi386.sh: For the sake of msvc5, which assembles relative
	  addresses in an unpredictable way, turn jump tables into absolute,
	  not relative, addresses.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* charstrg.d (copy_string, NSTRING-UPCASE, NSTRING-DOWNCASE)
	(NSTRING-CAPITALIZE): Make reentrant and multithread-safe.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Stack overflow robustness on Win32:
	* lispbibl.d (NO_SP_CHECK, NOCOST_SP_CHECK): New macros. SP checks
	  are enabled if AMIGAOS || (WIN32_NATIVE && !CAN_HANDLE_WP_FAULT).
	* spvw.d (do_gar_col_simple, do_gar_col): If WIN32_NATIVE &&
	  CAN_HANDLE_WP_FAULT, check for stack overflow just before GC,
	  because a stack overflow during GC would be unrecoverable.
	* spvw.d (subst_circ_mark, stack_overflow_handler)
	(main_exception_filter): Put in the right #ifdefs.
	* spvw.d (stack_overflow_stack): New variable.
	(main): Set it.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* lispbibl.d (map_heap_function): Renamed from mapper_function.
	(map_heap_objects): Change declaration.
	* spvw.d (map_heap_objects): Likewise.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* array.d (initial_contents_locals): New structure.
	(initial_contents_aux): Make reentrant and multithread-safe.
	* lispbibl.d (map_sequence): Declare.
	* sequence.d (map_sequence): New function.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* spvw.d (everything_ready): Remove unused variable.

1997-09-28  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	Use `const' qualifier when possible, especially on constant arrays.
	This allows constant arrays to be put into the rodata section.
	* arilev1c.d (copy_loop_up, copy_loop_down, or_loop_up, xor_loop_up)
	(and_loop_up, eqv_loop_up, nand_loop_up, nor_loop_up, andc2_loop_up)
	(orc2_loop_up, and_test_loop_up, test_loop_up, compare_loop_up)
	(add_loop_down, addto_loop_down, sub_loop_down, subx_loop_down)
	(subfrom_loop_down, shiftleftcopy_loop_down, shiftrightcopy_loop_up)
	(mulu_loop_down, muluadd_loop_down, mulusub_loop_down)
	(divucopy_loop_up): Use `const'.
	* arilev1e.d (copy_loop_up, copy_loop_down, or_loop_up, xor_loop_up)
	(and_loop_up, eqv_loop_up, nand_loop_up, nor_loop_up, andc2_loop_up)
	(orc2_loop_up, and_test_loop_up, test_loop_up, compare_loop_up)
	(add_loop_down, addto_loop_down, sub_loop_down, subx_loop_down)
	(subfrom_loop_down, shiftleftcopy_loop_down, shiftrightcopy_loop_up)
	(mulu_loop_down, muluadd_loop_down, mulusub_loop_down)
	(divucopy_loop_up): Use `const'.
	* arilev1i.d (copy_loop_up, copy_loop_down, or_loop_up, xor_loop_up)
	(and_loop_up, eqv_loop_up, nand_loop_up, nor_loop_up, andc2_loop_up)
	(orc2_loop_up, and_test_loop_up, test_loop_up, compare_loop_up)
	(add_loop_down, addto_loop_down, sub_loop_down, subx_loop_down)
	(subfrom_loop_down, shiftleftcopy_loop_down, shiftrightcopy_loop_up)
	(mulu_loop_down, muluadd_loop_down, mulusub_loop_down)
	(divucopy_loop_up): Use `const'.
	* array.d (type_table): Use `const'.
	* charstrg.d (up_case_table, down_case_table, charname_table_codes)
	(char_name, name_char): Use `const'.
	* control.d (fsubr_tab): Use `const'.
	* debug.d (frame_up_table, frame_down_table, test_mode_arg): Use
	  `const'.
	* eval.d (FUNTAB, FUNTABR, cod_labels): Use `const'.
	* graph.d (EGA_colors, gr_colors, g320x200x16_regs, g320x200x16_info)
	(g640x200x16_regs, g640x200x16_info, g640x350x16_regs)
	(g640x350x16_info, g640x480x16_regs, g640x480x16_info)
	(g320x200x256_regs, g320x200x256_info, g320x240x256_regs)
	(g320x240x256_info, g320x400x256_regs, g320x400x256_info)
	(g360x480x256_regs, g360x480x256_info, g640x480x2_regs)
	(g640x480x2_info, g640x480x256_regs, g640x480x256_info)
	(g800x600x256_regs, g800x600x256_info, g1024x768x256_regs)
	(g1024x768x256_info, default_red, default_green, default_blue)
	(color16, et4000_set_regs, set_regs, mono_colors, EGA_colors)
	(VGA_colors, gr_colors, font, gr_text, GRAPH-INIT): Use `const'.
	* hashtabl.d (tuple_half_1, tuple_half_2): Use `const'.
	* intmal.d (mulu_2loop_down, mulu_2bigloop_down, fakul_table): Use
	  `const'.
	* intprint.d (table, UDS_to_DIGITS): Use `const'.
	* io.d (orig_syntax_table, orig_readtable, SET-READTABLE-CASE)
	(attribute_table, char_reader, pr_character, pr_stream): Use `const'.
	* lisparit.d (pi_mantisse, ln2_mantisse, ln10_mantisse): Use `const'.
	* lispbibl.d (fsubr_tab): Use `const'.
	* predtype.d (init_hs_locals_rest): Use `const'.
	* realrand.d (multiplier): Use `const'.
	* sequence.d (test_start_end, test_start_end_1): Use `const'.
	* spvw.d (pname_table, package_index_table, init_symbol_tab_2)
	(fsubr_data_tab, object_initstring_tab, features_initstring)
	(init_object_tab, banner, banner2, banner3, main)
	(loadmem_aktualisiere, copyright_notice): Use `const'.

1997-09-27  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>

	* acspecific.m4 (AC_FUNC_VFORK): Fix so that it works right when
	  cross-compiling.
