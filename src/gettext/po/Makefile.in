# Makefile for internationalized message files for CLISP.
#
# Copyright (C) 1995, 1996, 1997 Free Software Foundation, Inc.
# Copyright (C) 1996 Marcus Daniels.
# Copyright (C) 1997 Bruno Haible.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

#### Start of system configuration section. ####

# Type of catalogs to install.
CATOBJEXT = @CATOBJEXT@
# When installed, they will be renamed to carry this extension.
INSTOBJEXT = @INSTOBJEXT@

# Directories used by "make":

srcdir = @srcdir@
top_srcdir = @top_srcdir@

# Directories used by "make install":

prefix = @prefix@
exec_prefix = @exec_prefix@
datadir = $(prefix)/@DATADIRNAME@
localedir = $(datadir)/locale

# Programs used by "make":

# Only one of these is needed, depending on $(CATOBJEXT).
# For CATOBJEXT = .mo :
MSGFMT = @MSGFMT@
# For CATOBJEXT = .cat :
GENCAT = @GENCAT@
# For CATOBJEXT = .gmo : not needed, since these catalogs are already pre-built.
#GMSGFMT = @GMSGFMT@

CC = @CC@
DEFS = @DEFS@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
INCLUDES = -I.. -I$(top_srcdir)/intl

@SET_MAKE@

# Programs used by "make install":

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@

#### End of system configuration section. ####

PACKAGE = @PACKAGE@
VERSION = @VERSION@

SHELL = /bin/sh

.SUFFIXES:
.SUFFIXES: .c .o .po .gmo .mo .msg .cat

# List of catalogs to build and install (extension .mo or .gmo or .cat)
CATALOGS = @CATALOGS@


all: all-@USE_NLS@

all-yes: $(CATALOGS)
all-no:

# Building the catalogs. The .gmo catalogs are already in the distribution.

.po.mo:
	$(MSGFMT) -o $@ $<

.po.cat:
	sed -f ../intl/po2msg.sed < $< > $*.msg \
	  && rm -f $@ && $(GENCAT) $@ $*.msg

check: all

# Building cat-id-tbl.o.

.c.o:
	$(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $<

cat-id-tbl.o: cat-id-tbl.c ../intl/libgettext.h
	$(CC) -c $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) cat-id-tbl.c

cat-id-tbl.c: $(PACKAGE).pot
	sed -f ../intl/po2tbl.sed < $(PACKAGE).pot > cat-id-tbl.c

# Installing the catalogs.

install: install-exec install-data

install-exec: force

install-data: install-data-@USE_NLS@

install-data-no: all force

install-data-yes: all force
	@catalogs='$(CATALOGS)'; \
	for cat in $$catalogs; do \
	  cat=`basename $$cat`; \
	  destdir=$(localedir); \
	  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \
	  dir="$$destdir/$$lang/LC_MESSAGES"; \
	  datadir=`echo "$$destdir" | sed -e 's,/[^/]*$$,,'`; \
	  if [ ! -d "$$datadir" ] ; then mkdir "$$datadir" ; fi; \
	  if [ ! -d "$$destdir" ] ; then mkdir "$$destdir" ; fi; \
	  if [ ! -d "$$destdir/$$lang" ] ; then mkdir "$$destdir/$$lang" ; fi; \
	  if [ ! -d "$$dir" ] ; then mkdir "$$dir" ; fi; \
	  if test -r $$cat; then \
	    echo "installing $$cat as $$dir/$(PACKAGE)$(INSTOBJEXT)"; \
	    $(INSTALL_DATA) $$cat "$$dir/$(PACKAGE)$(INSTOBJEXT)"; \
	  else \
	    echo "installing $(srcdir)/$$cat as $$dir/$(PACKAGE)$(INSTOBJEXT)"; \
	    $(INSTALL_DATA) $(srcdir)/$$cat "$$dir/$(PACKAGE)$(INSTOBJEXT)"; \
	  fi; \
	  if test -r $$cat.m; then \
	    echo "installing $$cat.m as $$dir/$(PACKAGE)$(INSTOBJEXT).m"; \
	    $(INSTALL_DATA) $$cat.m "$$dir/$(PACKAGE)$(INSTOBJEXT).m"; \
	  else \
	    if test -r $(srcdir)/$$cat.m ; then \
	      echo "installing $(srcdir)/$$cat as $$dir/$(PACKAGE)$(INSTOBJEXT).m"; \
	      $(INSTALL_DATA) $(srcdir)/$$cat.m "$$dir/$(PACKAGE)$(INSTOBJEXT).m"; \
	    fi; \
	  fi; \
	done

# Define this as empty until I found a useful application.
installcheck:

installdirs: force
	@catalogs='$(CATALOGS)'; \
	for cat in $$catalogs; do \
	  cat=`basename $$cat`; \
	  destdir=$(localedir); \
	  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \
	  dir="$$destdir/$$lang/LC_MESSAGES"; \
	  datadir=`echo "$$destdir" | sed -e 's,/[^/]*,,'`; \
	  if [ ! -d "$$datadir" ] ; then mkdir "$$datadir" ; fi; \
	  if [ ! -d "$$destdir" ] ; then mkdir "$$destdir" ; fi; \
	  if [ ! -d "$$destdir/$$lang" ] ; then mkdir "$$destdir/$$lang" ; fi; \
	  if [ ! -d "$$dir" ] ; then mkdir "$$dir" ; fi; \
	  fi; \
	done

uninstall:
	catalogs='$(CATALOGS)'; \
	for cat in $$catalogs; do \
	  cat=`basename $$cat`; \
	  lang=`echo $$cat | sed 's/$(CATOBJEXT)$$//'`; \
	  rm -f "$(localedir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT)"; \
	  rm -f "$(localedir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT).m"; \
	done

mostlyclean:
	rm -f core core.* *.pox $(PACKAGE).po *.old.po cat-id-tbl.tmp
	rm -fr *.o

clean: mostlyclean

distclean: clean
	rm -f Makefile POTFILES cat-id-tbl.c *.gmo *.mo *.msg *.cat *.cat.m

maintainer-clean: distclean
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."


force:

