#!/bin/sh
# Copies a tree, like "cp -p -r" but through hard or symbolic links.
# (Much like X11's "lndir" command, but X11's "lndir" always makes symbolic
# links.)
# Usage: lndir SRC DST

# Abort in case something fails.
set -e

if test $# != 2; then
  echo "Usage: $0 SRC DST" 1>&2
  exit 1
fi

SRC="$1"
DST="$2"

# link FILE1 FILE2  is like `ln', but chooses the cheapest alternative:
# hard link if FILE1 and FILE2 on the same disk, else symbolic link if the
# system supports that, else file copy.
link () {
# Note: With some versions of "ln" this does not work if FILE2 is a symlink.
if ln "$1" "$2" 2>/dev/null; then
  :
else
  srcfile_dirname=`echo "$1" | sed -e 's,/[^/]*$,,'`
  test -n "$srcfile_dirname" || srcfile_dirname='/'
  srcfile_basename=`echo "$1" | sed -e 's,^.*/,,'`
  srcfile_absdirname=`cd "$srcfile_dirname"; pwd`
  if ln -s "$srcfile_absdirname/$srcfile_basename" "$2" 2>/dev/null; then
    :
  else
    $CP "$1" "$2"
  fi
fi
}

if test -r "$SRC"; then
  :
else
  echo "$0: source does not exist: $SRC" 1>&2
  exit 1
fi

if test -r "$DST"; then
  echo "$0: destination already exists: $DST" 1>&2
  exit 1
fi

for f in `cd "$SRC" ; find . -type d -print`; do
  mkdir "$DST"`echo "$f" | sed -e 's,^\.,,'`
done

for f in `cd "$SRC" ; find . -type f -print`; do
  f=`echo "$f" | sed -e 's,^\./,,'`
  link "$SRC"/"$f" "$DST"/"$f"
done

exit 0
