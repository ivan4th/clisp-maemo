.TH CLISP 1 "12 June 1997"
.SH NAME
clisp \- Common Lisp language interpreter and compiler
.SH SYNOPSIS
.B clisp
[
.B -h
]
[
.B -m
.I memsize
]
[
.B -W
]
[
.B -M
.I memfile
]
[
.B -L
.I language
]
[
.B -N
.I localedir
]
[
.B -q
]
[
.B -I
]
[
.B -C
]
[
.B -i
.IR initfile " ..."
]
[
.B -c
[
.B -l
]
.I lispfile
[
.B -o
.I outputfile
] ...
]
[
.B -p
.I packagename
]
[
.B -x
.I expression
]
[
.I lispfile
[
.I argument
...
]
]
.SH DESCRIPTION
Invokes the common lisp interpreter and compiler.
Invoked without arguments, executes a read-eval-print loop,
in which expressions are in turn read from standard input, evaluated
by the lisp interpreter, and their results output to standard output.
Invoked with
.BR \-c ,
the specified lisp files are compiled to a bytecode that can be
executed more efficiently.
.SH OPTIONS
.TP
.B -h
Displays a help message on how to use
.BR clisp .
.TP
.BI "-m " memsize
Sets the amount of memory
.B clisp
tries to grab on startup.
The amount may be given as
.I nnnnnnn
(measured in bytes),
.IB nnnn K
or
.IB nnnn KB
(measured in kilobytes) or
.IB n M
or
.IB n MB
(measured in megabytes).
Default is 2 megabytes.
The argument is constrained between 100 KB and 16 MB.
-- This version of
.B clisp
allocates memory dynamically.
.I memsize
is essentially ignored.
Nevertheless, the memory size is limited to 16 MB per Lisp type (cons, string,
structure, etc.), unless the
.B -W
option is given.
.TP
.B "-W"
Specifies to call the wide-mode version of
.BR clisp .
It uses a 64-bit object representation instead of the usual 32-bit
representation. This version of
.B clisp
is slower, but has no memory size limitations.
.TP
.BI "-M " memfile
Specifies the initial memory image.
This must be a memory dump produced by the
.I saveinitmem
function.
.TP
.BI "-L " language
Specifies the language
.B clisp
uses to communicate with the user. This may be
.BR english ", " deutsch ", " francais ", " espanol .
Other languages may be specified through the environment variable
.BR LANG ,
provided the corresponding message catalog is installed.
.TP
.BI "-N " localedir
Specifies the base directory of locale files.
.B clisp
will search its message catalogs in
.IR localedir / language /LC_MESSAGES/clisp. ext .
.TP
.B -q
Quiet:
.B clisp
displays no banner at startup and no good-bye message when quitting.
.TP
.B -I
ILISP friendly:
.B clisp
interacts in a way that ILISP (a popular Emacs LISP interface) can deal with.
Currently the only effect of this is that unnecessary prompts are not
suppressed.
Furthermore, the GNU readline library treats Tab as a normal self-inserting
character.
.TP
.B -C
Compile when load: At startup the value of the variable
.I *load-compiling*
will be set to
.BR t .
Code being
.IR load ed
will then be compiled on the fly. This results in slower loading, but faster
execution.
.TP
.BI "-i " "initfile ..."
Specifies initialization files to be
.IR load ed
at startup. These should be lisp files (source or compiled).
.TP
.BI "-c " "lispfile ..."
Compiles the specified
.IR lispfile s
to bytecode. The compiled files can then be
.IR load ed
instead of the sources to gain efficiency.
.TP
.BI "-o " outputfile
Specifies the output file or directory for the compilation of the last
specified
.IR lispfile .
.TP
.B -l
A bytecode listing of the files being compiled will be produced.
Useful only for debugging purposes.
.TP
.BI "-p " packagename
At startup the value of the variable
.I *package*
will be set to the package named
.IR packagename .
.TP
.BI "-x " expressions
Executes a series of arbitrary expressions instead of a read-eval-print loop.
The values of the expressions will be output to standard output.
Due to the argument processing done by the shell, the
.I expressions
must be enclosed in double quotes, and double quotes and backslashes must
be preceded by backslashes.
.TP
.IR "lispfile " "[" "argument ..." "]"
Loads and executes a
.IR lispfile .
There will be no read-eval-print loop. Before
.I lispfile
is loaded, the variable
.I "*args*"
will be bound to a list of strings, representing the
.IR argument s.
If
.I lispfile
is
.BR "-" ,
the standard input is used instead of a file.
This option must be the last one.
.TP
.BI @ optionfile
substitutes the contents of
.I optionfile
as arguments. Each line of
.I optionfile
is treated as a separate argument to
.BR clisp .
.PP
.SH REFERENCE
The language implemented conforms to
.RS 1
      Guy L. Steele Jr.: Common Lisp - The Language.
      Digital Press. 1st edition 1984, 465 pages.
      ("CLtL1" for short)
.RE
and to the older parts of
.RS 1
      Guy L. Steele Jr.: Common Lisp - The Language.
      Digital Press. 2nd edition 1990, 1032 pages.
      ("CLtL2" for short)
.RE
.SH USE
.TP
.B help
to get some on-line help.
.TP
.BI "(apropos " name ")"
lists the symbols relating to
.IR name .
.TP
.BR "(exit)" " or " "(quit)" " or " "(bye)"
to quit
.BR clisp .
.TP
EOF (Ctrl-Z)
to leave the current read-eval-print loop.
.TP
arrow keys
for editing and viewing the input history.
.TP
Tab key
to complete the symbol's name you are just typing.
.SH FILES
.TP
.I lisp.exe
main executable
.TP
.I lispinit.mem
initial memory image
.TP
.I config.lsp
site-dependent configuration
.TP
.I *.lsp
lisp source
.TP
.I *.fas
lisp code, compiled by
.B clisp
.TP
.I *.lib
lisp source library information, generated and used by the
.B clisp
compiler
.TP
.I *.c
C code, compiled from lisp source by
.B clisp
.SH ENVIRONMENT
.TP
.B CLISP_LANGUAGE
specifies the language
.B clisp
uses to communicate with the user. The value may be
.BR english ", " deutsch ", " francais
and defaults to
.BR english .
The
.B -L
option can be used to override this environment variable.
.TP
.B LANG
specifies the language
.B clisp
uses to communicate with the user, unless it is already specified through
the environment variable
.B CLISP_LANGUAGE
or the
.B -L
option. The value may begin with a two-letter ISO 639 language code, for example
.BR en ", " de ", " fr .
.TP
.BR COMSPEC " (DOS, OS/2 implementations only)"
is used to find the command interpreter called by the function
.IR shell .
.SH "SEE ALSO"
.IR cmucl (1),
.IR emacs (1).
.SH BUGS
.PP
The function
.I inspect
is not implemented.
.PP
Not all extensions from CLtL2 are supported.
.PP
No on-line documentation beyond
.I apropos
and
.I describe
is available.
.PP
Stack overflow aborts the program ungracefully, with a register dump.
.PP
Pressing Control-C may not interrupt
.B clisp
in every situation.
.PP
Calling the function
.I execute
on batch files crashes the machine.
.SH PROJECTS
.PP
Writing on-line documentation.
.PP
Write
.IR inspect .
.PP
Enhance the compiler such that it can inline local functions.
.PP
Specify a portable set of window and graphics operations.
.SH AUTHORS
Bruno Haible
<haible@ma2s2.mathematik.uni-karlsruhe.de>
and Michael Stoll.
