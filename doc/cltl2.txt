; List of X3J13 votes and their current status in CLISP
; Bruno Haible 15.9.1997
;
; Number: from CLtL2, Index of X3J13 Votes.
; Status: indicates whether CLISP supports code that makes use of this vote.
;
; Number Title                               Status          Files affected
;
;   <1>  ADJUST-ARRAY displacement           yes             array.d
;   <2>  ADJUST-ARRAY :FILL-POINTER          yes             array.d
;   <3>  ADJUST-ARRAY not adjustable         no              array.d
;   <4>  allow local INLINE                  yes             compiler.lsp, init.lsp
;   <5>  APPLYHOOK environment               yes             eval.d
;   <6>  AREF 1D                             yes             array.d
;   <7>  arguments underspecified            yes
;   <8>  array type/element type semantics   yes for arrays  type.lsp
;                                            no for complex numbers
;   <9>  ASSOC/RASSOC-IF :KEY                yes             list.d
;  <10>  *BREAK-ON-WARNINGS* obsolete        no              user1.lsp
;  <11>  character proposal                  no
;  <12>  CLOS                                yes (largely)   clos.lsp
;  <13>  CLOS macro compilation              yes             clos.lsp
;  <14>  CLOSE constructed stream            yes             stream.d
;  <15>  closed stream operations            yes             stream.d
;  <16>  colon-number                        yes             io.d
;  <17>  COMMON type                         no              predtype.d, type.lsp
;  <18>  COMPILE argument problems           yes             compiler.lsp
;  <19>  compile environment consistency     yes             compiler.lsp
;  <20>  COMPILE-FILE handling of top-level forms
;                                            yes             compiler.lsp
;  <21>  COMPILE-FILE & *PACKAGE*            yes             compiler.lsp
;  <22>  COMPILE-FILE symbol handling        yes             compiler.lsp
;  <23>  COMPILED-FUNCTION requirements      yes             compiler.lsp
;  <24>  compiler diagnostics                no              compiler.lsp
;  <25>  COMPILER-LET confusion              no              control.d, init.lsp, compiler.lsp
;  <26>  compiler verbosity                  yes             compiler.lsp
;  <27>  compiler warning stream             yes             compiler.lsp
;  <28>  complex ATAN branch cut             yes             comptran.d
;  <28a> complex ATANH branch cut            yes             comptran.d
;  <29>  (COMPLEX RATIONAL) result           yes             compelem.d, comptran.d
;  <30>  condition system                    yes             user1.lsp
;  <31>  condition restarts                  yes             user1.lsp
;  <32>  constant circular compilation       yes             compiler.lsp
;  <33>  constant collapsing                 yes             compiler.lsp
;  <34>  constant compilable types           yes             io.d
;  <35>  constant function compilation       yes
;  <36>  constant modification               yes
;  <37>  contagion on numerical comparisons  yes             realelem.d, flo_rest.d
;  <38>  COPY-SYMBOL copy plist              yes             defs1.lsp
;  <39>  COPY-SYMBOL print name              yes             defs1.lsp, package.d
;  <40>  data I/O                            yes for *print-readably*  io.d
;                                             and *read-eval*
;                                             and with-standard-io-syntax
;                                            no for anything else
;  <41>  data types hierarchy unspecified    yes             lispbibl.d
;  <42>  declaration scope                   no
;  <43>  declare array type & element references
;                                            yes
;  <44>  declare function ambiguity          yes
;  <45>  declare macros                      no              eval.d, compiler.lsp
;  <46>  declare type free                   yes
;  <47>  DECODE-UNIVERSAL-TIME daylight      yes             defs1.lsp
;  <48>  DEFCONSTANT special                 yes             control.d, compiler.lsp
;  <49>  DEFINE-COMPILER-MACRO               no              defs2.lsp
;  <50>  defining macros non top-level       no
;  <51>  DEFMACRO lambda-list                yes             defmacro.lsp
;  <52>  DEFPACKAGE                          yes             defs2.lsp
;  <53>  DEFSTRUCT constructor/key mixture   yes             defstruc.lsp
;  <54>  DEFSTRUCT default value evaluation  yes             defstruc.lsp
;  <55>  DEFSTRUCT :PRINT-FUNCTION inheritance
;                                            no              defstruc.lsp
;  <56>  DEFSTRUCT redefinition              yes             defstruc.lsp
;  <57>  DEFSTRUCT slots constraints: name   yes             defstruc.lsp
;  <58>  DEFSTRUCT slots constraints: number yes             defstruc.lsp
;  <59>  DEFVAR documentation                yes             macros1.lsp
;  <60>  DEFVAR init time                    yes             macros1.lsp
;  <61>  DEFVAR initialization               yes             macros1.lsp
;  <62>  DESCRIBE interactive                yes             user2.lsp
;  <63>  DESCRIBE underspecified             yes             user2.lsp, clos.lsp
;  <64>  DESTRUCTURING-BIND                  yes             defmacro.lsp, defs2.lsp
;  <65>  DISASSEMBLE side effect             yes             compiler.lsp
;  <66>  DO-SYMBOLS duplicates               yes             defs1.lsp, package.d
;  <67>  dotted macro forms                  yes
;  <68>  DRIBBLE technique                   yes             user2.lsp
;  <69>  DYNAMIC-EXTENT                      yes
;  <70>  DYNAMIC-EXTENT & function           yes
;  <71>  EQUAL & structure                   yes             predtype.d
;                                            no for EQUALP on hashtables
;  <72>  EVAL other                          yes             eval.d, compiler.lsp
;  <73>  EVAL-WHEN non top-level             no              control.d, init.lsp, compiler.lsp
;  <74>  exit extent                         yes
;  <75>  EXPT & ratio                        yes             comptran.d
;  <76>  FIXNUM non-portable                 no              array.d
;  <77>  FLET declarations                   yes
;  <78>  FLET implicit block                 yes
;  <79>  float underflow                     yes             lisparit.d, defs1.lsp
;  <80>  FORMAT atsign & colon               yes             format.lsp
;  <81>  FORMAT colon uparrow scope          yes             format.lsp
;  <82>  FORMAT comma-interval               yes             format.lsp
;  <83>  FORMAT ~E exponent-sign             yes             format.lsp
;  <84>  FORMAT op C                         yes             format.lsp
;  <85>  FORMAT & pretty print               yes             format.lsp
;                                            no: ~E, ~F, ~G, ~$ also bind *PRINT-BASE* to 10 and *PRINT-RADIX* to NIL
;  <86>  function call & evaluation order    yes
;  <87>  function composition                yes             defs2.lsp
;  <88>  function definition                 yes             defs2.lsp
;  <89>  function name                       yes             control.d, places.lsp, compiler.lsp
;  <90>  FUNCTION type                       yes             predtype.d, compiler.lsp
;  <91>  FUNCTION type: argument type semantics
;                                            yes
;  <92>  FUNCTION type: &KEY name            yes
;  <93>  FUNCTION type: &REST list element   yes
;  <94>  GENSYM name stickiness              yes             symbol.d
;  <95>  GET-MACRO-CHARACTER readtable       yes             io.d
;  <96>  GET-SETF-METHOD environment         yes             places.lsp
;  <97>  hash-table access                   yes             hashtabl.d
;  <98>  hash-table & package generators     no              hashtabl.d, package.d, defs2.lsp
;  <99>  hash-table size                     yes             hashtabl.d
; <100>  hash-table tests                    yes             hashtabl.d
; <101>  IEEE & ATAN branch cut              yes
; <102>  IMPORT & SETF SYMBOL-PACKAGE        no              package.d
; <103>  IN-PACKAGE functionality            yes             package.d, compiler.lsp
; <104>  in syntax                           yes             init.lsp, compiler.lsp
; <105>  keyword argument name package       no
; <106>  LAST n                              yes             list.d
; <107>  LCM no arguments                    yes             lisparit.d
; <108>  LISP package name                   yes             defs3.lsp
; <109>  LISP symbol redefinition            yes
; <110>  LOAD & objects                      no
; <111>  LOAD-TIME-VALUE                     yes             control.d, init.lsp, compiler.lsp
; <112>  *LOAD-TRUENAME*                     yes             init.lsp, compiler.lsp
; <113>  LOCALLY top level                   yes             control.d, init.lsp, compiler.lsp
; <114>  LOOP AND discrepancy                yes             loop.lsp
; <115>  LOOP facility                       yes             loop.lsp
; <116>  macro caching                       yes
; <117>  macro environment extent            yes
; <118>  MACRO-FUNCTION environment          no              control.d, compiler.lsp
; <119>  MAKE-PACKAGE :USE default           yes
; <120>  MAP-INTO                            yes             sequence.d
; <121>  mapping & destructive: interaction  yes             sequence.d, list.d, hashtabl.d, package.d
; <122>  more character proposal             no              charstrg.d, stream.d
; <123>  NTH-VALUE                           yes             defs2.lsp
; <124>  OPTIMIZE DEBUG info                 yes             init.lsp
; <125>  package clutter                     no              init.lsp
; <126>  package deletion                    yes             package.d
; <127>  package function consistency        no              package.d
; <128>  pathname: component case            yes             pathname.d
; <129>  pathname: component value           no              pathname.d
; <130>  pathname: logical                   yes             pathname.d
; <131>  pathname: print & read              no              io.d
; <132>  pathname: stream                    yes             pathname.d, stream.d
; <133>  pathname: subdirectory list         no              pathname.d
; <134>  pathname: symbol                    no              pathname.d, stream.d
; <135>  pathname: syntax error time         yes             pathname.d
; <136>  pathname: unspecific component      no              pathname.d
; <137>  pathname: :WILD                     yes             pathname.d
; <138>  PEEK-CHAR, READ-CHAR & echo         yes             io.d, stream.d
; <139>  pretty-print interface              no              xp.lsp
; <140>  PRINC character                     yes             io.d
; <141>  *PRINT-CASE* / *PRINT-ESCAPE* interaction
;                                            no              io.d
; <142>  *PRINT-CIRCLE* shared               yes             io.d
; <143>  *PRINT-CIRCLE* structure            yes             io.d
; <144>  PROCLAIM etc. in COMPILE-FILE       yes             defs2.lsp
; <145>  PROCLAIM INLINE: where              yes             compiler.lsp
; <146>  PUSH & evaluation order             yes             places.lsp
; <147>  QUOTE semantics                     yes
; <148>  range of :COUNT keyword             no              sequence.d
; <149>  range of start and end parameters   yes             sequence.d
; <150>  READ: case sensitivity              yes             io.d
; <151>  REAL number type                    yes             predtype.d, type.lsp
; <152>  REDUCE argument extraction          yes             sequence.d
; <153>  REMF & destruction: unspecified     no for NRECONC  list.d
;                                            yes for anything else
; <154>  REQUIRE pathname defaults           no              defs1.lsp
; <155>  &REST list allocation               yes             eval.d
; <156>  return values unspecified           yes             macros1.lsp, package.d, io.d
; <157>  ROOM :DEFAULT argument              yes             debug.d, user2.lsp
; <158>  sequence type & length              no              sequence.d, predtype.d
; <159>  SETF & multiple store variables     yes for SETF    places.lsp
;                                            no for SHIFTF, ROTATEF, ASSERT
; <160>  SETF & sub-methods                  yes             places.lsp
; <161>  SHADOW: already present             yes             package.d
; <162>  sharp-comma confusion               no              io.d
; <163>  sharpsign-plus/minus package        no              io.d, spvw.d, init.lsp, compiler.lsp
; <164>  special type-shadowing              yes
; <165>  *STANDARD-INPUT* initial binding    yes             stream.d
; <166>  STEP environment                    yes             user1.lsp, macros2.lsp
; <167>  stream access                       yes             stream.d, type.lsp
; <168>  stream capabilities                 yes             stream.d
; <169>  string coercion                     yes             charstrg.d
; <170>  SUBSEQ out of bounds                yes             sequence.d
; <171>  SUBTYPEP too vague                  yes             type.lsp
; <172>  SYMBOL-MACROLET & DECLARE           yes             compiler.lsp
; <173>  SYMBOL-MACROLET semantics           yes             eval.d, control.d, init.lsp, compiler.lsp
; <174>  syntactic environment access        no
; <175>  TAILP & NIL                         yes             list.d
; <176>  :TEST-NOT, -IF-NOT                  no              sequence.d, list.d
; <177>  THE ambiguity                       yes
; <178>  time-zone non-integer               yes             defs1.lsp
; <179>  TYPE-OF underconstrained            yes             predtype.d
; <180>  undefined variables and functions   yes
; <181>  UNREAD-CHAR after PEEK-CHAR         yes             stream.d
; <182>  variable list asymmetry             yes             macros1.lsp
; <183>  WITH-COMPILATION-UNIT               no              compiler.lsp
; <184>  WITH-OPEN-FILE & does-not-exist     yes             macros2.lsp
; <185>  WITH-OUTPUT-TO-STRING append style  yes             macros2.lsp
; <186>  ZLOS conditions                     yes             user1.lsp

