# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs.  It is not useful on other systems.
# If it contains results you don't want to keep, you may remove or edit it.
#
# By default, configure uses ./config.cache as the cache file,
# creating it if it does not exist already.  You can give configure
# the --cache-file=FILE option to use a different cache file; that is
# what configure does when it calls configure scripts in
# subdirectories, so they share the cache.
# Giving --cache-file=/dev/null disables caching, for debugging configure.
# config.status only pays attention to the cache file if you give it the
# --recheck option to rerun configure.
#
ac_cv_func_memset=${ac_cv_func_memset=yes}
ac_cv_func_mmap=${ac_cv_func_mmap=yes}
ac_cv_func_mprotect=${ac_cv_func_mprotect=yes}
ac_cv_func_setrlimit=${ac_cv_func_setrlimit=yes}
ac_cv_func_sigaction=${ac_cv_func_sigaction=yes}
ac_cv_func_sigblock=${ac_cv_func_sigblock=yes}
ac_cv_func_sighold=${ac_cv_func_sighold=yes}
ac_cv_func_siginterrupt=${ac_cv_func_siginterrupt=yes}
ac_cv_func_sigprocmask=${ac_cv_func_sigprocmask=yes}
ac_cv_header_minix_config_h=${ac_cv_header_minix_config_h=no}
ac_cv_header_stdc=${ac_cv_header_stdc=yes}
ac_cv_header_sys_file_h=${ac_cv_header_sys_file_h=yes}
ac_cv_header_sys_mman_h=${ac_cv_header_sys_mman_h=yes}
ac_cv_prog_CC=${ac_cv_prog_CC=xlc}
ac_cv_prog_CPP=${ac_cv_prog_CPP='xlc -E'}
ac_cv_prog_RANLIB=${ac_cv_prog_RANLIB=ranlib}
ac_cv_prog_cc_cross=${ac_cv_prog_cc_cross=no}
ac_cv_prog_cc_works=${ac_cv_prog_cc_works=yes}
ac_cv_prog_gcc=${ac_cv_prog_gcc=no}
ac_cv_sys_aix=${ac_cv_sys_aix=yes}
ac_cv_sys_isc_posix=${ac_cv_sys_isc_posix=no}
ac_cv_type_off_t=${ac_cv_type_off_t=yes}
ac_cv_type_size_t=${ac_cv_type_size_t=yes}
cl_cv_decl_O_RDWR_fcntl_h=${cl_cv_decl_O_RDWR_fcntl_h=yes}
cl_cv_func_getpagesize=${cl_cv_func_getpagesize=yes}
cl_cv_func_mmap_works=${cl_cv_func_mmap_works=no}
cl_cv_func_mprotect_works=${cl_cv_func_mprotect_works=no}
cl_cv_func_sigaction_blocked=${cl_cv_func_sigaction_blocked=yes}
cl_cv_func_sigaction_reinstall=${cl_cv_func_sigaction_reinstall=no}
cl_cv_func_sigaltstack=${cl_cv_func_sigaltstack=yes}
cl_cv_func_signal_blocked=${cl_cv_func_signal_blocked=no}
cl_cv_func_signal_blocked_others=${cl_cv_func_signal_blocked_others=no}
cl_cv_func_signal_reinstall=${cl_cv_func_signal_reinstall=yes}
cl_cv_func_signalblocks=${cl_cv_func_signalblocks='SystemV POSIX BSD'}
cl_cv_func_vadvise=${cl_cv_func_vadvise=no}
cl_cv_func_vm=${cl_cv_func_vm=no}
cl_cv_path_install=${cl_cv_path_install=cp}
cl_cv_prog_cc_gcc=${cl_cv_prog_cc_gcc=no}
cl_cv_prog_cc_works=${cl_cv_prog_cc_works=yes}
cl_cv_proto_getpagesize=${cl_cv_proto_getpagesize='extern int getpagesize (void);'}
cl_cv_proto_getpagesize_ret=${cl_cv_proto_getpagesize_ret=int}
cl_cv_proto_getrlimit=${cl_cv_proto_getrlimit='extern int getrlimit (int, struct rlimit *);'}
cl_cv_proto_getrlimit_arg1=${cl_cv_proto_getrlimit_arg1=int}
cl_cv_proto_malloc=${cl_cv_proto_malloc='extern void* malloc (unsigned int);'}
cl_cv_proto_malloc_arg1=${cl_cv_proto_malloc_arg1='unsigned int'}
cl_cv_proto_malloc_ret=${cl_cv_proto_malloc_ret='void*'}
cl_cv_proto_memset=${cl_cv_proto_memset='extern void* memset (void*, int, size_t);'}
cl_cv_proto_memset_arg1=${cl_cv_proto_memset_arg1='void*'}
cl_cv_proto_memset_arg3=${cl_cv_proto_memset_arg3=size_t}
cl_cv_proto_memset_ret=${cl_cv_proto_memset_ret='void*'}
cl_cv_proto_mmap=${cl_cv_proto_mmap='extern void* mmap (void*, size_t, int, int, int, off_t);'}
cl_cv_proto_mmap_arg1=${cl_cv_proto_mmap_arg1='void*'}
cl_cv_proto_mmap_arg2=${cl_cv_proto_mmap_arg2=size_t}
cl_cv_proto_mmap_ret=${cl_cv_proto_mmap_ret='void*'}
cl_cv_proto_mprotect=${cl_cv_proto_mprotect='extern int mprotect (void*, size_t, int);'}
cl_cv_proto_mprotect_arg1=${cl_cv_proto_mprotect_arg1=''}
cl_cv_proto_setrlimit=${cl_cv_proto_setrlimit='extern int setrlimit (int, const struct rlimit *);'}
cl_cv_proto_setrlimit_arg2=${cl_cv_proto_setrlimit_arg2=const}
cl_cv_proto_signal_dots=${cl_cv_proto_signal_dots=no}
cl_cv_type_signal=${cl_cv_type_signal=void}
