dnl AUTOCONF configuration for syscalls
dnl Copyright (C) 2003-2005  Sam Steingold <sds@gnu.org>
dnl GNU GPL2

AC_PREREQ(2.57)
AC_INIT(syscalls, 1.0, clisp-list)
AC_CONFIG_SRCDIR(posix.lisp)
AC_CONFIG_HEADERS(config.h)

AC_MSG_NOTICE([ * System Calls (Tools)])
AC_PROG_CC
AC_PROG_CPP

AC_MSG_NOTICE([ * System Calls (Headers)])
AC_HEADER_STDC
AC_HEADER_TIME
CL_UTSNAME
AC_CHECK_HEADERS(errno.h fcntl.h netdb.h sys/resource.h utime.h wchar.h dnl
pwd.h sys/stat.h sys/time.h sys/unistd.h time.h unistd.h syslog.h signal.h dnl
sys/statvfs.h sys/types.h crypt.h utmpx.h stdlib.h shlobj.h)
if test "$ac_cv_header_shlobj_h" = yes ; then
   LIBS=${LIBS}' -luser32 -lole32 -loleaut32 -luuid';
fi
AC_CHECK_SIZEOF(struct timeval,,[#include <stdio.h>
#include <sys/time.h>])
AC_CHECK_MEMBERS([struct utmpx.ut_host],,,[#include <utmpx.h>])
AC_MSG_CHECKING([whether f_fsid is scalar])
if test "$ac_cv_header_sys_statvfs_h" = "yes"; then
 AC_TRY_COMPILE([#include <sys/statvfs.h>], [struct statvfs x; x.f_fsid = 0;],
  ac_cv_struct_fsid_scalar=yes, ac_cv_struct_fsid_scalar=no)
 AC_MSG_RESULT([$]ac_cv_struct_fsid_scalar)
 if test "$ac_cv_struct_fsid_scalar" = yes; then
  AC_DEFINE([HAVE_SCALAR_FSID], 1,
    [Define to 1 if the f_fsid member of 'struct statvfs' has a integral type.])
 fi
 AC_CHECK_SIZEOF(fsblkcnt_t ,,[#include <stdio.h>
#include <sys/statvfs.h>])
 AC_CHECK_SIZEOF(fsfilcnt_t ,,[#include <stdio.h>
#include <sys/statvfs.h>])
fi
if test "$ac_cv_header_sys_stat_h" = "yes"; then
 AC_CHECK_MEMBERS([struct stat.st_rdev, struct stat.st_blksize, struct stat.st_blocks],,,[#include <sys/stat.h>])
fi

AC_MSG_NOTICE([ * System Calls (Functions)])
CL_RLIMIT
AC_CHECK_FUNCS(clock confstr fcntl gethostent sysconf uname mkstemp tempnam dnl
getlogin getpwent getpwnam getpwuid getuid dnl
openlog setlogmask syslog closelog dnl
getpgid setpgrp getsid setpgid setsid kill dnl
endutxent getutxent getutxid getutxline pututxline setutxent dnl
fchmod fchown fstat link stat symlink utime mknod chmod umask fsync sync)
AC_FUNC_CHOWN
AC_SEARCH_LIBS(erf, m)
AC_CHECK_FUNCS(erf erfc lgamma fstatvfs statvfs getpriority setpriority)
AC_CHECK_DECLS(lgamma_r, , , [#include <math.h>] )
AC_CHECK_DECLS(signgam, , , [#include <math.h>] )
AC_SEARCH_LIBS(crypt, crypt)
AC_CHECK_FUNCS(crypt encrypt setkey GlobalMemoryStatusEx)
CL_LSTAT
CL_RUSAGE
if test "$ac_cv_func_setpgrp" = "yes"; then
dnl BSD versions of setpgrp() are identical to setpgid()
AC_CACHE_CHECK([whether setpgrp() is POSIX],ac_cv_func_setpgrp_posix,[
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([
#ifdef HAVE_UNISTD_H
#include <unistd.h>
#endif
#include <sys/types.h>
], [[pid_t pid = setpgrp();]])],
ac_cv_func_setpgrp_posix=yes,ac_cv_func_setpgrp_posix=no)])
if test "$ac_cv_func_setpgrp_posix" = "yes"; then
AC_DEFINE(HAVE_SETPGRP_POSIX,1,
[Define to 1 if setpgrp() does not accept arguments])
fi
fi

AC_MSG_NOTICE([ * System Calls (output)])
AC_CONFIG_FILES(Makefile link.sh)
AC_OUTPUT

AC_MSG_NOTICE([ * System Calls (done)])
