<?xml version="1.0" encoding="UTF-8"?>

<section id="gdbm"><title>GDBM - The GNU database manager</title>

<para>This is an interface to the &gdbm;.</para>
<simpara>When this module is present, &features-my; contains the
 symbol <constant>:GDBM</constant>.</simpara>

<variablelist id="gdbm-api"><title>GDBM module API</title>
 <varlistentry id="gdbm-version"><term><code>(GDBM:GDBM-VERSION)</code></term>
  <listitem><para>Return the version string.</para></listitem></varlistentry>
 <varlistentry id="gdbm-open"><term><code>(GDBM:GDBM-OPEN &filename-r;
    &key-amp; :BLOCKSIZE :READ-WRITE :OPTION :MODE :DEFAULT-KEY-TYPE
    :DEFAULT-VALUE-TYPE)</code></term>
  <listitem><para>Open &filename-r; database file.
    The return value is a <type>GDBM</type> structure.
    <literal>:READ-WRITE</literal> can have one of following values:
    <simplelist>
     <member><literal>:READER</literal></member>
     <member><literal>:WRITER</literal></member>
     <member><literal>:WRCREAT</literal></member>
     <member><literal>:NEWDB</literal></member>
    </simplelist>
    and <literal>:OPTION</literal> is one of
    <simplelist>
     <member><literal>:SYNC</literal></member>
     <member><literal>:NOLOCK</literal></member>
     <member><literal>:FAST</literal></member>
   </simplelist></para><para>&clisp; can store and retrieve values of the
    following types:<simplelist><member>&string-t;</member>
     <member>&vector-t;</member><member>&bit-vector-t;</member>
     <member>&integer-t;</member><member>&single-float-t;</member>
     <member>&double-float-t;</member></simplelist>
    and <literal>:DEFAULT-KEY-TYPE</literal>
    and <literal>:DEFAULT-VALUE-TYPE-TYPE</literal> should be one of
    those.  If not specified (or &nil;), the <literal>:TYPE</literal>
    argument is required in the access functions below.</para>
   <para>The return value is &finalize;d with
    <link linkend="gdbm-close"><function>GDBM-CLOSE</function></link>.</para>
 </listitem></varlistentry>
 <varlistentry id="gdbm-default-types">
  <term><code>(GDBM:GDBM-DEFAULT-KEY-TYPE &db-r;)</code></term>
  <term><code>(GDBM:GDBM-DEFAULT-VALUE-TYPE &db-r;)</code></term>
  <listitem><para>Return the default data conversion types.</para>
 </listitem></varlistentry>
 <varlistentry id="gdbm-close">
  <term><code>(GDBM:GDBM-CLOSE &db-r;)</code></term>
  <listitem><simpara>Close the database.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-open-p">
  <term><code>(GDBM:GDBM-OPEN-P &db-r;)</code></term>
  <listitem><simpara>Check whether &db-r; has been already closed.
   </simpara><warning><simpara>Only the above functions accept closed
     databases, the following functions &sig-err; when passed a closed
     database.</simpara></warning></listitem></varlistentry>
 <varlistentry id="gdbm-store">
  <term><code>(GDBM:GDBM-STORE &db-r; &key-r; &cont-r; &key-amp;
    :FLAG)</code></term>
  <listitem><para>&db-r; is the <type>GDBM</type> structure
    returned by <function>GDBM-OPEN</function>.
    &key-r; is the key data.
    &cont-r; is the data to be associated with the key.
    <literal>:FLAG</literal> can have one of following values:
    <simplelist>
     <member><literal>:INSERT</literal></member>
     <member><literal>:REPLACE</literal></member>
 </simplelist></para></listitem></varlistentry>
 <varlistentry id="gdbm-fetch">
  <term><code>(GDBM:GDBM-FETCH &db-r; &key-r; &key-amp;
    (TYPE (GDBM:GDBM-DEFAULT-VALUE-TYPE &db-r;)))</code></term>
  <listitem><simpara>Search the database.
    The <literal>:TYPE</literal> argument specifies the return type.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-delete">
  <term><code>(GDBM:GDBM-DELETE &db-r; &key-r;)</code></term>
  <listitem><simpara>Delete &key-r; and its contents.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-exists">
  <term><code>(GDBM:GDBM-EXISTS &db-r; &key-r;)</code></term>
  <listitem><simpara>Search data without retrieving it.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-firstkey">
  <term><code>(GDBM:GDBM-FIRSTKEY &db-r; &key-amp;
    (TYPE (GDBM:GDBM-DEFAULT-KEY-TYPE &db-r;)))</code></term>
  <listitem><simpara>Return the key of the first entry.
    If the database has no entries, the return value is &nil;.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-nextkey">
  <term><code>(GDBM:GDBM-NEXTKEY &db-r; &key-r; &key-amp;
    (TYPE (GDBM:GDBM-DEFAULT-KEY-TYPE &db-r;)))</code></term>
  <listitem><simpara>Return the key that follows &key-r;.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-reorganize">
  <term><code>(GDBM:GDBM-REORGANIZE &db-r;)</code></term>
  <listitem><simpara>Reorganize database.</simpara></listitem></varlistentry>
 <varlistentry id="gdbm-sync">
  <term><code>(GDBM:GDBM-SYNC &db-r;)</code></term>
  <listitem><simpara>The in-memory state of the database syncronized to
    the disk file.</simpara></listitem></varlistentry>
 <varlistentry id="gdbm-setopt">
  <term><code>(GDBM:GDBM-SETOPT &db-r; &option-r; &value-r;)</code></term>
  <listitem><para>Set options on an already open database.
    &option-r; is one of following:
    <variablelist>
     <varlistentry><term><literal>:CACHESIZE</literal></term>
      <listitem><simpara>set the size of the internal bucket cache.
        (default is 100)</simpara></listitem></varlistentry>
     <varlistentry><term><literal>:FASTMODE</literal></term>
      <listitem><simpara>&t; or &nil; (obsolete)
     </simpara></listitem></varlistentry>
     <varlistentry><term><literal>:SYNCMODE</literal></term>
      <listitem><simpara>&t; or &nil;</simpara></listitem></varlistentry>
     <varlistentry><term><literal>:CENTFREE</literal></term>
      <listitem><simpara>&t; or &nil;</simpara></listitem></varlistentry>
     <varlistentry><term><literal>:COALESCEBLKS</literal></term>
      <listitem><simpara>&t; or &nil;</simpara></listitem></varlistentry>
     <varlistentry><term><literal>:DEFAULT-VALUE-TYPE</literal></term>
      <term><literal>:DEFAULT-KEY-TYPE</literal></term>
      <listitem><simpara>see
        <link linkend="gdbm-open"><function>GDBM-OPEN</function></link>
     </simpara></listitem></varlistentry>
 </variablelist></para></listitem></varlistentry>
 <varlistentry id="gdbm-file-size">
  <term><code>(GDBM:GDBM-FILE-SIZE &db-r;)</code></term>
  <listitem><simpara>Return the underlying file size using
    <function role="unix">lseek</function>.</simpara></listitem></varlistentry>
 <varlistentry id="gdbm-do-db">
  <term><code>(GDBM:DO-DB (&key-r; &db-r; &rest-amp; &options-r;)
    &body-amp; &body-r;)</code></term>
  <listitem><simpara>Iterate over the database keys, &options-r; are
    passed to <function>GDBM-FIRSTKEY</function>
    and <function>GDBM-NEXTKEY</function>.
    &body-r; is passed to &loop;, so you can use all the standard loop
    contructs, e.g., <code>(do-db (k db) :collect (list k (gdbm-fetch
     k)))</code> will convert the database to an &alist;.
 </simpara></listitem></varlistentry>
 <varlistentry id="gdbm-with-open-db">
  <term><code>(GDBM:WITH-OPEN-DB (&db-r; &filename-r; &rest-amp; &options-r;)
    &body-amp; &body-r;)</code></term>
  <listitem><simpara>Open the &filename-r;, execute the &body-r;, close
    the database.</simpara></listitem></varlistentry>
</variablelist>



</section>
